#!/usr/bin/env perl

# ------------------------------------------------------------------------
# test-toolkit - A script to test an installation of the Globus Toolkit.
# $Revision$
# ------------------------------------------------------------------------

# ------------------------------------------------------------------------
# Overview
#
#    Update me
#
# ------------------------------------------------------------------------

use strict;
use Getopt::Long;
use Cwd;
use Config;
use File::Find;

# ------------------------------------------------------------------------
# Get options
# ------------------------------------------------------------------------
my ($help, $version, $debug, $color, $globus, $remote, $directory);

GetOptions (
    'help'              => \$help,
    'color'             => \$color,
    'debug'             => \$debug,
    'version'           => \$version,
    'globus'            => \$globus,
    'remote'            => \$remote,
    'directory'         => \$directory
);

if (defined $help)        { help(); exit; }
if (defined $version)     { }

if(defined($globus))
{
    $ENV{GLOBUS_LOCATION} = $globus;
}
elsif(!defined($ENV{'GLOBUS_LOCATION'}))
{
    die "You need to set GLOBUS_LOCATION or specify one with -globus";
}

if (defined $remote) 
{
    $ENV{TEST_REMOTE} = $remote;
}

# once we set these environment variables, we can create a 'Utility'.
$ENV{TEST_DEBUG} = $debug;
$ENV{TEST_COLOR} = $color;

@INC = ("$ENV{GLOBUS_LOCATION}/test/globus_test", @INC);
require Utilities;

my $u = new Utilities();

$u->debug("color -> $color");
$u->debug("debug -> $debug");
$u->debug("globus -> $ENV{GLOBUS_LOCATION}");
$u->debug("remote -> $remote");

if (! defined $directory)   {
    $directory = "$ENV{GLOBUS_LOCATION}/test";
}
$u->debug("directory -> $directory");

# ========================================================================
# Main
# ========================================================================

start();
find(\&Wanted, $directory);
done();

exit;


# ========================================================================
# Subroutines
# ========================================================================

# ------------------------------------------------------------------
# Help
# ------------------------------------------------------------------
sub help {
    print "Usage: test-toolkit [options] <GLOBUS_LOCATION> <FQDN>

    Options:

    [-h --help]                 Print this message
    [-v --version]              Print out version of test-toolkit
    [-d --debug]                Turn on debugging
    [-c --color]                Turn on color

\n";
}

# ------------------------------------------------------------------
# run_TESTS
# ------------------------------------------------------------------
sub Wanted {
    $u->debug("file -> $_");
    $u->debug("directory -> $File::Find::dir");

    if ($_ eq "TESTS.pl") {
        $u->command("./TESTS.pl");        
    }
    else {
        return;
    }
}

# ------------------------------------------------------------------
# start
# ------------------------------------------------------------------
sub start {
    $u->debug("Starting test-toolkit");

    my @date = split /\s+/, localtime;
    $u->announce("test-toolkit: started $date[1].$date[2].$date[4]  $date[3]");
}

# ------------------------------------------------------------------
# done
# ------------------------------------------------------------------
sub done {
    $u->announce("Done");
}
