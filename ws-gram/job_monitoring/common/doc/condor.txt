- Condor
    - RIPS (current)
      Periodically polling condor queue via condor_q, correlating queue ID
      presence with it being pending or active. when not present any longer,
      consider it done. jm subscripts to rips, dummy placeholder state
      is inserted into rips's queue state information until the next poll
      which will indicate job state changes.
      - high execution overhead polling queue
      - high memory overhead keeping state information for all jobs
      - not event driven.
      - no indication when jobs are cancelled or aborted
    - polling in script (Job manager)
      Checks job-specific condor logfile for completion or failure codes.
      - high overhead (one process polling per job)
      - when job finishes, remove log
    - Following server_logs files
      - can jobs of multiple users be safely put into one log? how will
        we rotate logs to prevent them from using all available disk space?
      - what permissions can the logs have?
    - Email notifications
      - condor can send notification emails for when a job has an Error,
        checkpointed, or completes.
      - is local email usually configured on scheduler front-end system?
      - can we convince admins to install something like procmail or a
        .forward pipe to handle these emails?
      - do we care about insecurity of email? potential disk full or other
        problems which could cause email notifications to fail?
      - can we modify the openpbs source or convince the pbs publishers to
        include some other notification mechanism besides email?
