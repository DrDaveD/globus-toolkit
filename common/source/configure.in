dnl

AC_REVISION($Revision$)
AC_INIT(Makefile.am)

GLOBUS_INIT

AM_PROG_LIBTOOL

dnl config header goes here

dnl Initialize the automake rules the last argument
AM_INIT_AUTOMAKE($GPT_NAME, $GPT_VERSION)

AM_CONFIG_HEADER(config.h)

LAC_THREADS

CHECK_REENTRANT_FUNCS

AC_SEARCH_LIBS(socket, socket)
AC_SEARCH_LIBS(gethostbyname, nsl)

AC_CHECK_LIB(ltdl, lt_dlerror)
AC_CHECK_FUNCS(lt_dlmutex_register)

GPT_SET_LIBS(["$EXTERNAL_LIBS"])

if test "X$GLOBUS_VERSION" = "X"; then
    if test -x ${GLOBUS_LOCATION}/bin/globus-version; then
        GLOBUS_VERSION="`${GLOBUS_LOCATION}/bin/globus-version`"
        if test X"$GLOBUS_VERSIONNAME" = "X" ; then
            GLOBUS_VERSION_FULL="`${GLOBUS_LOCATION}/bin/globus-version -full`"
            GLOBUS_VERSIONNAME="`echo $GLOBUS_VERSION_FULL | sed "s/ $GLOBUS_VERSION//"`"
        fi
    else
        GLOBUS_VERSION="$DIRT_TIMESTAMP-$DIRT_BRANCH_ID"
    fi
fi

if test X"$GLOBUS_VERSIONNAME" = "X" ; then
    GLOBUS_VERSIONNAME="Globus Toolkit"
fi

AC_SUBST(GLOBUS_VERSION)
AC_SUBST(GLOBUS_VERSIONNAME)

if test "$GLOBUS_THREADS" = "none" ; then
    GLOBUS_CALLBACK_BUILD="nothreads"
else
    GLOBUS_CALLBACK_BUILD="threads"
fi
AC_SUBST(GLOBUS_CALLBACK_BUILD)

OS_HEADERS=""

case "$host" in
    arm* )
        OS_HEADERS="$OS_HEADERS globus_netos_libc.h"
        ;;
esac

AC_SUBST(OS_HEADERS)

LAC_DOXYGEN("../library")

AC_PATH_PROGS(GLOBUS_SH_PERL, perl perl5)
AC_PATH_PROGS(GLOBUS_SH, sh bash ksh)

GLOBUS_FINALIZE

AC_OUTPUT(
	Makefile
	pkgdata/Makefile
	pkgdata/pkg_data_src.gpt
	library/Makefile
        library/globus_l_common_paths.h
	programs/Makefile
        programs/globus-sh-exec
        programs/globus-version
	scripts/Makefile
        scripts/Paths.pm
        scripts/globus-domainname:scripts/globus-hostname.in
        scripts/globus-hostname
        scripts/globus-makefile-header
        scripts/globus-sh-tools.sh
        scripts/globus-sh-tools-vars.sh
        scripts/globus-script-initializer
	config/Makefile
	doxygen/Makefile
	doxygen/Doxyfile 
	doxygen/Doxyfile-internal
	version.h
)
