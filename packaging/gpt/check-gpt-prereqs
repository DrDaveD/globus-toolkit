eval 'exec perl -wS $0 ${1+"$@"}'
        if $running_under_some_shell;

our $running_under_some_shell;

use strict;
use Getopt::Long;

use 5.005_001;

# Check prerequisite perl modules
my %prereqs = (
    'Archive::Tar' => [0, 22],
    'Compress::Zlib' => [1, 21],
    'Digest::MD5' => [2, 20],
    'File::Spec' => [0, 8],
    'IO::Zlib' => [1, 1],
    'Pod::Parser' => [1, 18],
    'Test::Simple' => [0, 47],
    'XML::Parser' => [2, 0]);

my $prereq_error = '';
for my $pkg (keys %prereqs)
{
    my $installed_version = eval "require $pkg; return \$${pkg}::VERSION";
    my ($prereq_major, $prereq_minor) = @{$prereqs{$pkg}};
    my ($installed_major, $installed_minor);
    ($installed_major, $installed_minor) = split(/\./, $installed_version)
        if defined($installed_version);

    $installed_minor =~ s/^0([0-9]*)/$1/ if $installed_minor;
    $installed_minor =~ s/_[0-9]*// if $installed_minor;

    if ((($installed_major || 0) < $prereq_major) ||
        ((($installed_major || 0) == $prereq_major) && 
         (($installed_minor || 0) < $prereq_minor)))
    {
        if (defined($installed_major))
        {
            $prereq_error .= "Found too-old version of $pkg ($installed_major.$installed_minor).\nVersion $prereq_major.$prereq_minor or greater is required\n";
        }
        else
        {
            $prereq_error .= "Prerequisite package $pkg version $prereq_major.$prereq_minor not found.\n";
        }
    }
}
die $prereq_error if ($prereq_error ne '');

