#!/usr/bin/perl

use strict;
use Cwd;

print "1..5\n";

my $t = 1;

##############################################################################
#                   S U P P O R T   R O U T I N E S
##############################################################################

##############################################################################
# Print out 'n ok' or 'n not ok' as expected by test harness.
# First arg is test number (n).  If only one following arg, it is interpreted
# as true/false value.  If two args, equality = true.
#

sub ok {
  my($n, $x, $y) = @_;
  die "Sequence error got $n expected $t" if($n != $t);
  $x = 0 if(@_ > 2  and  $x ne $y);
  print(($x ? '' : 'not '), 'ok ', $t++, "\n");
}

my $curr_path = cwd() . "/t/D_PackageFilelist";

#
# test.00
#

my $retval = ! system("$curr_path/test.00/run-test >/dev/null 2>&1");
ok($t, $retval);

#
# test.01
#

my $retval = ! system("$curr_path/test.01/run-test >/dev/null 2>&1");
ok($t, $retval);

#
# test.02
#

my $retval = ! system("$curr_path/test.02/run-test >/dev/null 2>&1");
ok($t, $retval);

#
# test.03
#

my $retval = ! system("$curr_path/test.03/run-test >/dev/null 2>&1");
ok($t, $retval);

#
# test.04
#

my $retval = ! system("$curr_path/test.04/run-test >/dev/null 2>&1");
ok($t, $retval);
