#!/usr/bin/perl

use XML::DOM;

my $parser = new XML::DOM::Parser;

die "No gpt package file provided" if not defined $ARGV[0];

my $gptdoc = $parser->parsefile($ARGV[0]);

my $gptmeta = $gptdoc->getElementsByTagName("gpt_package_metadata");
my $gptname = $gptmeta->item(0)->getAttributeNode("Name")->getValue;

my $gptagingver = $gptdoc->getElementsByTagName("Aging_Version");
my $gptmajorver = $gptagingver->item(0)->getAttributeNode("Major")->getValue;
my $gptminorver = $gptagingver->item(0)->getAttributeNode("Minor")->getValue;

my $description = $gptdoc->getElementsByTagName("Description")
    ->item(0)->getFirstChild->getData;

#my $flavor = $gptdoc->getElementsByTagName("Flavor")
#    ->item(0)->getFirstChild->getData;

my %deps;
for my $bindep ($gptdoc->getElementsByTagName("Source_Dependencies")) {
    my $type = $bindep->getAttributeNode("Type")->getValue;
    next unless $type eq "compile";
    for my $dep ($bindep->getElementsByTagName("Dependency")) {
	my $depname = $dep->getAttributeNode("Name")->getValue;
	$depname =~ tr/_/-/;
	my $depver = $dep->getElementsByTagName("Simple_Version")
	    ->item(0)->getAttributeNode("Major")->getValue;
	$deps{$depname} = $depver;
    }
}

my $cflagselem = $gptdoc->getElementsByTagName("cflags")->item(0);
my $cflagsnode = $cflagselem->getFirstChild if defined $cflagselem;
my $cflags = $cflagsnode->getData if defined $cflagsnode;

my $extincelem = $gptdoc->getElementsByTagName("external_includes")->item(0);
my $extincnode = $extincelem->getFirstChild if defined $extincelem;
my $extinc = $extincnode->getData if defined $extincnode;

my $pkglibselem = $gptdoc->getElementsByTagName("pkg_libs")->item(0);
my $pkglibsnode = $pkglibselem->getFirstChild if defined $pkglibselem;
my $pkglibs = $pkglibsnode->getData if defined $pkglibsnode;

my $extlibselem = $gptdoc->getElementsByTagName("external_libs")->item(0);
my $extlibsnode = $extlibselem->getFirstChild if defined $extlibselem;
my $extlibs = $extlibsnode->getData if defined $extlibsnode;

my $name = $gptname;
$name =~ tr/_/-/;

$description =~ s!^\s+|\s+$!!g;
$description =~ s!\s+! !g;

my $version = $gptmajorver . '.' . $gptminorver;

my $libs = "-L\${libdir} $pkglibs $extlibs";
$libs =~ s!^\s+|\s+$!!g;
$libs =~ s!\s+! !g;

$cflags = "$cflags -I\${includedir} -I\${flavorincludedir} $extinc";
$cflags =~ s!^\s+|\s+$!!g;
$cflags =~ s!\s+! !g;

my $outfile = $ARGV[0];
$outfile =~ s|/[^/]*$|/$name.pc.in|;

# Add fake dependency for other things that were detected in autoconf using
# pkg-config
$deps{'@GPT_PKGCONFIG_DEPENDENCIES@'} = 0;

local(*OUTFILE);
open(OUTFILE, ">$outfile");
print OUTFILE "prefix=\@prefix\@\n";
print OUTFILE "exec_prefix=\@exec_prefix\@\n";
print OUTFILE "libdir=\@libdir\@\n";
print OUTFILE "includedir=\@includedir\@\n";
print OUTFILE "flavorincludedir=\@flavorincludedir\@\n";
print OUTFILE "\n";
print OUTFILE "Name: $name\n";
print OUTFILE "Description: Globus Toolkit - $description\n";
print OUTFILE "Version: $version\n";
print OUTFILE "Requires:";
while (($key, $value) = each(%deps)) {
    print OUTFILE ($value > 0 ? " $key >= $value" : " $key");
}
print OUTFILE "\n";
print OUTFILE "Libs: $libs\n";
print OUTFILE "Cflags: $cflags\n";
