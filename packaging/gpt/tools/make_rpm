#! /usr/bin/env perl

use Cwd;
use Getopt::Long;

my $verbose;




my $verbose;

GetOptions( 
           'verbose' => \$verbose,
          );

my $startdir = cwd();

# determine gpt version number
open (CFG, 'packaging_tools/configure.ac');

my ($gptversion, $gptname);
for (<CFG>) {
  if (m!AC_INIT\((\w+),([^,\)]+)!) {
    $gptname = $1;
    $gptversion = $2;
    $gptversion =~ s!\s+!!g;
    $gptname =~ s!\s+!!g;
    last;
  }
}

close CFG;


my $full = "$gptname-$gptversion-src.tar.gz";
opendir(TOP, ".");

my @tarfiles = grep { m!$full! } readdir TOP;

closedir TOP;

if (! @tarfiles) {
  my $result = `./make_gpt_dist`;
}


mkinstalldir("rpm/SOURCES");
mkinstalldir("rpm/BUILD");
mkinstalldir("rpm/RPMS");
mkinstalldir("rpm/SRPMS");
mkinstalldir("rpm/tmp");
mkinstalldir("rpm/SPECS");

my $specname = "rpm/SPECS/$gptname.spec";

open(TEMPLATE, "tools/rpm.spec.in");
open(SPEC, ">$specname");

for my $l (<TEMPLATE>) {
  $l =~ s!GPT_VERSION!$gptversion!g;
  print SPEC $l;
}

close TEMPLATE;
close SPEC;

my $result = `cp $full rpm/SOURCES/`;

my $rpmcmd = "rpmbuild";
$rpmcmd .= defined $verbose ? " -vv" : " -v";
$rpmcmd .= " --define '_topdir $startdir/rpm' --define '_tmppath .$startdir/rpm/tmp' -ba $specname";

print "$rpmcmd\n" if defined $verbose;
$result = `$rpmcmd 2>&1`;

print $result if defined $verbose;


my @lines = split /\n/, $result;

my $finished;
for my $l (@lines) {
  my ($file) = $l =~ m!Wrote: (.+)!;
  if ($file =~ m!/RPMS/!) {
    my ($basename) = $file =~ m!/([^/]+)$!;
    my $cresult = `cp $file .`;
    $finished++;
    last;
  }
}

#  $result = `rm -rf rpm`;

sub mkinstalldir {
  my $dir = abspath(shift);
  my @dirlist = split m!/!, $dir;
  my $subdir= "";
  for my $d (@dirlist) {
    next if $d eq "";
    $subdir .= "/$d";
    if (! -d $subdir) {
      my $result = `mkdir $subdir`;
    }
  }
}
sub abspath {
  my ($file) = @_;
  my $home = $ENV{'HOME'};
  $file =~ s!~!$home!;
  my $startd = $startdir;
  $file =~ s!^\./!$startd/!;
  $file = "$startd/$file" if $file !~ m!^\s*/!;
  return $file;
}
