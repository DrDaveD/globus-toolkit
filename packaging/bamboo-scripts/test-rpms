#! /bin/sh

set -e
umask 022

PATH=$PATH:/usr/sbin:/sbin

bamboodir=$(pwd)/bamboo-scripts
topdir=$(pwd)
tmppath=$(pwd)/tmp
testoutdir=$(pwd)/test-results
chmod a+x make-packages.pl fait_accompli/installer.sh gpt/build_gpt gpt/make_gpt_dist gpt/setup_gpt_dist gpt/packaging_tools/bootstrap gpt/check-gpt-prereqs
lrms=fork
tag=""
skip_checkout=0

if [ ! -f ~/.ssh/id_rsa ]; then
    echo | ssh-keygen -q -P ''
    cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys
    chmod 600 ~/.ssh/authorized_keys
fi

ssh-keyscan -t dsa,rsa \
    localhost $(hostname) $(hostname -f) >> ~/.ssh/known_hosts

while getopts "r:a:l:t:q" i; do
    case "$i" in
        r)
            repopkg_url="$OPTARG"
            ;;
        a)
            artifact_url="$OPTARG"
            ;;
        l)
            if [ "$OPTARG" != "fork" ]; then
                lrms="${lrms} $OPTARG"
            fi
            ;;
        t)
            tag="$OPTARG"
            ;;
        q)
            skip_checkout=1
            ;;
        *)
            echo "Usage: $(basename $0) -r REPOPKG-URL -a ARTIFACT-URL -l LRM -t TAG -q"
            exit 1
            ;;
    esac
done

shift $(($OPTIND - 1))

if [ "$repopkg_url" = "" -o "$artifact_url" = "" ]; then
    echo "Usage: $0 -r REPO-PACKAGE-URL -a ARTIFACT-URL" 1>&2
    exit 1
fi

mkdir -p $topdir
mkdir -p $testoutdir

# Reset home to this directory as it is a transient bamboo build dir
ORIGHOME="$HOME"
HOME="$topdir"

mkdir -p $tmppath

# Remove all globus-related packages prior to testing
pkgs_to_rm="$( rpm -qa | (egrep '^grid-packaging-tools|^[Gg]lobus-|^myproxy|^gsi-openssh' || true) )"
if [ -n "$pkgs_to_rm" ]; then
    sudo yum -y remove $pkgs_to_rm
fi

# Download and install the repo definition package
sudo rpm -hUv "$repopkg_url"

if [ "${skip_checkout}" = 0 -o ! -d package-output ]; then
# Create source packages for the tests
    ./make-packages.pl ${tag:+-t "$tag"} -a -verbose \
            -bundles=globus-data-management-test,globus-resource-management-test \
            -flavor=gcc64 -skipbundle
fi

first=1
for flavor in gcc64 gcc32; do
    # Remove all globus-related packages prior to testing
    pkgs_to_rm="$( rpm -qa | (egrep '^grid-packaging-tools|^globus-|^myproxy|^gsi-openssh' || true) )"
    if [ -n "$pkgs_to_rm" ]; then
        sudo yum -y remove $pkgs_to_rm
    fi

    case $(lsb_release -is):$(lsb_release -rs) in
        CentOS:5*|ScientificSL:5*|RedHatEnterpriseServer:5*)
            if [ "$flavor" = gcc64 ]; then
                arch="x86_64"
                archcmd=""
            else
                arch="i386"
                archcmd="i386"
            fi
            ;;
        *)
            if [ "$flavor" = gcc64 ]; then
                arch="x86_64"
                archcmd=""
            else
                arch="i686"
                archcmd="i386"
            fi
            ;;
    esac

    # yum clean will enable us to download 32-bit or 64-bit below
    sudo yum clean all

    # Install the binary RPMs that we will test
    $archcmd sudo yum -y --skip-broken install $(curl -s "${artifact_url}/package-list/packages.${flavor}" | grep -Ev 'Globus-repo-config|Globus-bamboo-config|globus-gram-job-manager-fork-setup-seg|globus-gram-job-manager-condor|globus-gram-job-manager-pbs|globus-gram-job-manager-lsf|globus-gram-job-manager-sge')

    if [ $first = 1 ]; then
        first=0
        if [ ! -f /etc/grid-security/hostcert.pem -o \
             ! -f $HOME/.globus/usercert.pem ]; then

            if [ ! -d /var/lib/globus/simple_ca ]; then
                sudo grid-ca-create -noint -pass globus
                sudo grid-default-ca -ca "$(sudo openssl x509 -noout -hash -in /var/lib/globus/simple_ca/cacert.pem)"
            fi

            if [ ! -f /etc/grid-security/hostcert.pem ]; then
                sudo grid-cert-request -host "$(globus-hostname)" -dir "/etc/grid-security" -force
                sudo grid-ca-sign -in "/etc/grid-security/hostcert_request.pem" -force -out "/etc/grid-security/hostcert.pem" -passin pass:globus
            fi

            X509_USER_CERT="$HOME/.globus/usercert.pem"
            X509_USER_KEY="$HOME/.globus/userkey.pem"
            export X509_USER_CERT
            export X509_USER_KEY

            if [ ! -f "$X509_USER_CERT" ]; then
                grid-cert-request -cn "$(id -un)" -nopw -force
                sudo grid-ca-sign -in "$HOME/.globus/usercert_request.pem" -out "/tmp/usercert.pem" -passin pass:globus -force
                cp /tmp/usercert.pem "$X509_USER_CERT"
                sudo grid-mapfile-add-entry -dn "$(grid-cert-info -subject -file "$X509_USER_CERT")" -ln "$(id -un)"
            fi
        fi
        cp -R "$ORIGHOME/.ssh" "$HOME/.ssh"
        sudo service globus-gridftp-server restart 
        grid-proxy-init -hours 24
        globus_hostname=$(globus-hostname)
    fi

    mkdir -p "$tmppath/$flavor"
    cd "$tmppath/$flavor"

    flavortestoutdir="${testoutdir}/${flavor}"

    mkdir -p "${flavortestoutdir}"

    for testpkg in $topdir/package-output/globus*_test-*.tar.gz; do
        gzip -dc "$testpkg" | tar xf -
        testpkgname=$( echo $(basename $testpkg | sed -e 's/\.tar\.gz//') )
        cd $testpkgname
        testpkgname_no_ver=$(echo $testpkgname | sed -e 's/-.*//' | sed -e 's/_/-/g')
        ./configure --with-flavor=${flavor}
        make 
        if [ "${testpkgname_no_ver}" = "globus-gram-job-manager-test" ]; then
            sudo yum -y remove globus-gram-job-manager-fork-setup-poll
            for lrm in $lrms; do
                if [ "${lrm}" = "condor" ]; then
                    modes="none"
                else
                    modes="poll seg"
                fi

                for mode in $modes; do
                    lrmpkgs=""
                    case $lrm:$mode in
                        condor:none)
                            lrmpkgs="globus-gram-job-manager-$lrm.$arch"
                            ;;
                        *:poll)
                            lrmpkgs="globus-gram-job-manager-$lrm.$arch globus-gram-job-manager-$lrm-setup-$mode"
                            ;;
                        *:seg)
                            lrmpkgs="globus-gram-job-manager-$lrm.$arch globus-gram-job-manager-$lrm-setup-$mode.$arch"
                            ;;
                        *:*)
                            echo "Unexpected lrm:mode $lrm:$mode" 1>&2
                            ;;
                    esac
                    if [ "$lrmpkgs" = "" ]; then
                        continue
                    fi
                    sudo yum -y install $lrmpkgs || continue
                    sudo service globus-gatekeeper restart || true
                    sudo service globus-scheduler-event-generator restart || true
                    # Allow multiple processes per node if the nodes are
                    # multi-cpu
                    if [ "$lrm" = "pbs" ]; then
                        sudo ed /etc/globus/globus-pbs.conf <<-EOF
			/^cpu_per_node=/s/=.*/="$(grep -c processor /proc/cpuinfo)"/
			w
			q
			EOF
                    fi
                    dn="$(grid-cert-info -subject -file /etc/grid-security/hostcert.pem)"
                    export CONTACT_STRING="$globus_hostname/jobmanager-$lrm:$dn" 
                    export CONTACT_LRM="$lrm"
                    make junit || true
                    unset CONTACT_STRING
                    unset CONTACT_LRM
                    sudo yum -y remove $lrmpkgs
                    # Stop the job manager and remove all job state, so that
                    # tests will have a clean state
                    killall globus-job-manager
                    rm -rf ~/.globus/job
                    rm -rf /var/lib/globus/gram_job_state/bamboo/*
                    rm -f /var/lib/globus/gram_job_state/job.*
                    rm -rf ~/.globus/.gass_cache
                    xmlfile="${testpkgname_no_ver}-$lrm.xml"
                    if [ -f "$xmlfile" ]; then
                        sed -e "s/<testsuite name=\"\([^\"]*\)\" /<testsuite name=\"\1_${flavor}-$lrm$mode\" /" -e "s/classname=\"\([^\"]*\)\"/classname=\"\1_${flavor}-$lrm$mode\"/"< "$xmlfile" > "${flavortestoutdir}/${xmlfile%%.*}$mode.xml"
                            mv "$xmlfile" "${xmlfile%%.*}$mode.xml"
                    fi
                done
            done
            sudo yum -y install globus-gram-job-manager-fork-setup-poll
        else
            make junit || true
            for x in "${testpkgname_no_ver}"*.xml; do
                if [ -f "$x" ]; then
                    sed -e "s/<testsuite name=\"\([^\"]*\)\" /<testsuite name=\"\1_${flavor}\" /" -e "s/classname=\"\([^\"]*\)\"/classname=\"\1_${flavor}\"/"< "$x" > "${flavortestoutdir}/${x}"
                fi
            done
        fi
        cd ..
    done
done
