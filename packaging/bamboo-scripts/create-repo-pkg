#! /bin/sh

bambooscriptdir=$(dirname $0)
if ! expr $bambooscriptdir ":" "/" ; then
    bambooscriptdir="$(pwd)/$bambooscriptdir"
fi

args=$(getopt n:v:b:s:r:g:S $*)
set -- ${args}

baseurl="http://www.globus.org/ftppub/\$majorglobusversion/\$globusversion/\$fullglobusversion/packages/rpm/\$osname/\\\$releasever/\\\$basearch/"
srcbaseurl="http://www.globus.org/ftppub/\$majorglobusversion/\$globusversion/\$fullglobusversion/packages/rpm/\$osname/\\\$releasever/SRPMS/"

reponame="Globus-repo-config"
fullglobusversion="5.1.0"
globusversion="${fullglobusversion%.*}"
majorglobusversion="gt${globusversion%.*}"
sign=1

for i; do
    case "$i" in
        -n)
            osname="$2"
            shift 2
            ;;
        -v)
            osver="$2"
            shift 2
            ;;
        -b)
            baseurl="$2"
            shift 2
            ;;
        -s)
            srcbaseurl="$2"
            shift 2
            ;;
        -r)
            reponame="$2"
            shift 2
            ;;
        -g)
            if ! expr "$2" : "[0-9]*\.[0-9]*\.[0-9]*" > /dev/null; then
                echo "Invalid GT version $2" 1>&2
                exit 1
            fi
            fullglobusversion="$2"
            globusversion="${fullglobusversion%.*}"
            majorglobusversion="gt${globusversion%.*}"
            shift 2
            ;;
        -S)
            sign=0
            shift
            ;;
        --)
            shift
            break
            ;;
    esac
done

if [ "$osname" = "" ]; then
    osname="$(lsb_release -is)"
fi
if [ "$osver" = "" ]; then
    osver="$(lsb_release -rs)"
fi

updatebaseurl="$(echo $baseurl | sed -e 's/packages/updates/')"
updatesrcbaseurl="$(echo $srcbaseurl | sed -e 's/packages/updates/')"

if [ "$osname" = "" -o "$osver" = "" ]; then
    echo "Usage: $0 -n OSNAME -v OSVER [-b baseurl] [-s srcbaseurl] [-r repopkgname]" 1>&2
    exit 1
fi

baseurlresolved="$(eval echo $baseurl)"
srcbaseurlresolved="$(eval echo $srcbaseurl)"
updatebaseurl="$(eval echo $updatebaseurl)"
updatesrcbaseurl="$(eval echo $updatesrcbaseurl)"

for x in BUILD BUILDROOT RPMS SOURCES SPECS SRPMS; do
    mkdir -p ${HOME}/${x}
done

echo "Creating $HOME/SOURCES/${reponame}.$osname.repo"
cat <<EOF > $HOME/SOURCES/${reponame}.$osname.repo
[Globus]
name=Globus
baseurl=$baseurlresolved
failovermethod=priority
enabled=1
gpgcheck=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-Globus
 
[Globus-Updates]
name=Globus - Updates
baseurl=$updatebaseurl
failovermethod=priority
enabled=1
gpgcheck=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-Globus
 
[Globus-source]
name=Globus - Source
baseurl=$srcbaseurlresolved
failovermethod=priority
enabled=0
gpgcheck=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-Globus
 
[Globus-Updates-source]
name=Globus - Updates Source
baseurl=$updatesrcbaseurl
failovermethod=priority
enabled=0
gpgcheck=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-Globus
EOF
cp "${bambooscriptdir}/RPM-GPG-KEY-Globus" $HOME/SOURCES

echo "Creating $HOME/SPECS/$reponame.$osname.spec"
cat <<EOF > $HOME/SPECS/$reponame.$osname.spec
Name:           $reponame.$osname
Version:        $osver
Release:        1
Summary:        Globus Repository Configuration
Group:          System Environment/Base
License:        ASL 2.0
URL:            http://globus.org
Source0:        RPM-GPG-KEY-Globus
Source1:        $reponame.$osname.repo
BuildRoot:      %{_tmppath}/%{name}-%{version}-%{release}-root-%(%{__id_u} -n)
BuildArch:      noarch
Requires:       ${osname}-release >= ${osver}

%description
This package installs the Globus yum repository configuration and GPG key.

%prep
%setup -c -T

%build

%install
rm -rf \$RPM_BUILD_ROOT

# gpg
install -Dpm 644 %{SOURCE0} \
  \$RPM_BUILD_ROOT%{_sysconfdir}/pki/rpm-gpg/RPM-GPG-KEY-Globus

# yum
install -dm 755 \$RPM_BUILD_ROOT%{_sysconfdir}/yum.repos.d
install -pm 644 %{SOURCE1} \
  \$RPM_BUILD_ROOT%{_sysconfdir}/yum.repos.d

%clean
rm -rf \$RPM_BUILD_ROOT

%files
%defattr(-,root,root,-)
%{_sysconfdir}/pki/rpm-gpg/*
%config %{_sysconfdir}/yum.repos.d/*
EOF

rpmbuild -ba $HOME/SPECS/$reponame.$osname.spec
if [ $sign -eq 1 ]; then
    expect ${bambooscriptdir}/sign-rpm $HOME/SRPMS/${reponame}.$osname*rpm
    expect ${bambooscriptdir}/sign-rpm $HOME/RPMS/noarch/${reponame}.$osname*rpm
fi
