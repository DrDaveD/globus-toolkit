#! /bin/sh

set -e
umask 022

PATH=$PATH:/usr/sbin:/sbin

packagingdir="$(pwd)"
bamboodir=$(pwd)/bamboo-scripts
topdir=$(pwd)
tmppath=$(pwd)/tmp
testoutdir=$(pwd)/test-results
lrms="fork"
chmod a+x make-packages.pl fait_accompli/installer.sh gpt/build_gpt gpt/make_gpt_dist gpt/setup_gpt_dist gpt/packaging_tools/bootstrap gpt/check-gpt-prereqs

chroot=""
in_chroot=0
test_from_bamboo=0
tag=""

arch="$(dpkg-architecture -qDEB_BUILD_GNU_CPU)"
case "$arch" in
    x86_64|ia64)
        flavor=gcc64
        ;;
    i?86)
        flavor=gcc32
        ;;
    *)
        echo "Don't know how to determine flavor for $arch" 1>&2
        exit 1
        ;;
esac
while getopts "ic:r:a:l:bt:" i; do
    case "$i" in
        i)
            in_chroot=1
            ;;
        c)
            chroot="$OPTARG"
            chroot_args="${chroot_args:+"$chroot_args "}-i"
            ;;
        r)
            repopkg_url="$OPTARG"
            chroot_args="${chroot_args:+"$chroot_args "}-r ${OPTARG}"
            ;;
        a)
            artifact_url="$OPTARG"
            chroot_args="${chroot_args:+"$chroot_args "}-a ${OPTARG}"
            ;;
        l)
            lrms="$lrms $OPTARG"
            ;;
        t)
            tag="$OPTARG"
            chroot_args="${chroot_args:+"$chroot_args "}-t $OPTARG"
            ;;
        b)
            test_from_bamboo=1
            chroot_args="${chroot_args:+"$chroot_args "}-b"
            ;;
    esac
done
shift $(($OPTIND - 1))

if [ "$repopkg_url" = "" -o "$artifact_url" = "" ]; then
    echo "Usage: $0 -r REPO-PACKAGE-URL -a ARTIFACT-URL [-c CHROOT] [-l LRM]..." 1>&2
    exit 1
fi

mkdir -p $topdir
mkdir -p $testoutdir

# Reset home to this directory as it is a transient bamboo build dir
HOME=$topdir

mkdir -p $tmppath

# Remove all globus-related packages prior to testing
pkgs_to_rm="$( dpkg-query -W -f "\${Package}\t\${Status}\n" "*globus*" "grid-packaging-tools*" "myproxy*" "gsi-openssh*" | awk -F"	" "\$2 ~ /^install/ { print \$1 }" || true)"
if [ -n "$pkgs_to_rm" ]; then
    sudo dpkg -P $pkgs_to_rm
fi

# Create source packages for the tests
if [ "$in_chroot" != 1 ]; then
    ./make-packages.pl ${tag:+-t "$tag"} -a --deps -deporder -bundles=globus-data-management-test,globus-resource-management-test \
        -flavor=${flavor} -skipbundle
fi

if [ "$chroot" != "" ]; then
    schroot -c "$chroot" -d "$packagingdir" -p -- bash $0 $chroot_args
fi
    
# Download and install the repo definition package
mkdir "$flavor"
curl -s "$repopkg_url" > "${flavor}/${repopkg_url##*/}"
sudo dpkg -i "${flavor}/${repopkg_url##*/}"
if [ "$test_from_bamboo" = 1 ]; then
    sudo sed -i /etc/apt/sources.list.d/globus.list -e "s|http://www.globus.org/ftppub/gt[0-9]\{1,\}/[0-9]\{1,\}\.[0-9]\{1,\}/[0-9]\{1,\}\.[0-9]\{1,\}\.[0-9]\{1,\}/[a-z]\{1,\}/deb/[a-z]\{1,\}/[0-9\.]\{1,\}|${artifact_url}/repo|"
fi
sudo aptitude -y update

# Install the binaries that we will test
sudo aptitude -y install $(curl -s "${artifact_url}/all-packages/all-packages" | sed -e /globus-repository/d -e "s/_.*//" | grep -Ev 'globus-gram-job-manager-fork-setup-seg|globus-gram-job-manager-condor|globus-gram-job-manager-pbs|globus-gram-job-manager-lsf|globus-gram-job-manager-sge' | sort -u)

# Set up security if we dont have it done already
if [ ! -f /etc/grid-security/hostcert.pem -o ! -f $HOME/.globus/usercert.pem ]; then
    sudo grid-ca-create -force -noint -pass globus
    sudo grid-default-ca -ca "$(sudo openssl x509 -noout -hash -in /var/lib/globus/simple_ca/cacert.pem)"
    sudo grid-cert-request -host "$(globus-hostname)" -dir "/etc/grid-security" -force
    sudo grid-ca-sign -in "/etc/grid-security/hostcert_request.pem" -force -out "/etc/grid-security/hostcert.pem" -passin pass:globus
    X509_USER_CERT="$HOME/.globus/usercert.pem"
    X509_USER_KEY="$HOME/.globus/userkey.pem"
    export X509_USER_CERT
    export X509_USER_KEY

    grid-cert-request -cn "$(id -un)" -nopw -force
    sudo grid-ca-sign -in "$HOME/.globus/usercert_request.pem" -out "/tmp/usercert.pem" -passin pass:globus -force
    cp /tmp/usercert.pem "$X509_USER_CERT"
    sudo grid-mapfile-add-entry -dn "$(grid-cert-info -subject -file "$X509_USER_CERT")" -ln "$(id -un)"
    if which invoke-rc.d > /dev/null 2>&1 ; then
        sudo invoke-rc.d globus-gridftp-server restart 
    else
        sudo /etc/init.d/globus-gridftp-server restart 
    fi
    grid-proxy-init -hours 24
fi

mkdir -p "$tmppath/$flavor"
cd "$tmppath/$flavor"

flavortestoutdir="${testoutdir}/${flavor}"

mkdir -p "${flavortestoutdir}"

for testpkg in $topdir/package-output/globus*_test-*.tar.gz; do
    gzip -dc "$testpkg" | tar xf -
    testpkgname=$( basename $testpkg | sed -e 's/\.tar\.gz//' )
    cd $testpkgname
    testpkgname_no_ver=$(echo $testpkgname | sed -e 's/-.*//' -e 's/_/-/g')
    ./configure --with-flavor=${flavor}
    make 
    if [ "${testpkgname_no_ver}" = "globus-gram-job-manager-test" ]; then
        sudo apt-get -y remove globus-gram-job-manager-fork globus-gram-job-manager-fork-setup-poll
        for lrm in $lrms; do
            if [ "${lrm}" = "condor" ]; then
                modes="none"
            else
                modes="-setup-poll -setup-seg"
            fi

            for mode in $modes; do
                if [ $mode = none ]; then
                    mode=""
                fi
                sudo apt-get -y install globus-gram-job-manager-$lrm$mode || continue
                if which invoke-rc.d > /dev/null 2>&1; then
                    sudo invoke-rc.d globus-gatekeeper restart
                    sudo invoke-rc.d globus-scheduler-event-generator restart || true
                else
                    sudo /etc/init.d/globus-gatekeeper restart || true
                    sudo /etc/init.d/globus-scheduler-event-generator restart || true
                fi
                # Allow multiple processes per node if the nodes are
                # multi-cpu
                if [ "$lrm" = "pbs" ]; then
                    sudo ed /etc/globus/globus-pbs.conf <<-EOF
			/^cpu_per_node=/s/=.*/="$(grep -c processor /proc/cpuinfo)"/
			w
			q
			EOF
                fi
                dn="$(grid-cert-info -subject -file /etc/grid-security/hostcert.pem)"
                export CONTACT_STRING="$globus_hostname/jobmanager-$lrm:$dn" 
                export CONTACT_LRM="$lrm"
                make junit || true
                unset CONTACT_STRING
                unset CONTACT_LRM
                sudo apt-get -y remove globus-gram-job-manager-$lrm$mode
                # Stop the job manager and remove all job state, so that
                # tests will have a clean state
                kill $(ps -u $(id -un) -o pid,args | grep '[g]lobus-job-manager' | cut -d' ' -f1) || true
                #killall globus-job-manager
                rm -rf ~/.globus/job
                rm -rf /var/lib/globus/gram_job_state/bamboo/*
                rm -f /var/lib/globus/gram_job_state/job.*
                rm -rf ~/.globus/.gass_cache
                xmlfile="${testpkgname_no_ver}-$lrm.xml"
                if [ -f "$xmlfile" ]; then
                    sed -e "s/<testsuite name=\"\([^\"]*\)\" /<testsuite name=\"\1_${flavor}-$lrm$mode\" /" -e "s/classname=\"\([^\"]*\)\"/classname=\"\1_${flavor}-$lrm$mode\"/"< "$xmlfile" > "${flavortestoutdir}/${xmlfile%%.*}$mode.xml"
                        mv "$xmlfile" "${xmlfile%%.*}$mode.xml"
                fi
            done
        done
        sudo apt-get -y install globus-gram-job-manager-fork globus-gram-job-manager-fork-setup-poll
    else
        make junit || true
        for x in "${testpkgname_no_ver}"*.xml; do
            if [ -f "$x" ]; then
                sed -e "s/<testsuite name=\"\([^\"]*\)\" /<testsuite name=\"\1_${flavor}\" /" -e "s/classname=\"\([^\"]*\)\"/classname=\"\1_${flavor}\"/"< "$x" > "${flavortestoutdir}/${x}"
            fi
        done
    fi
    cd ..
done
