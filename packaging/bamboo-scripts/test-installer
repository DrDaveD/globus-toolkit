#! /bin/sh

set -e
set -x
umask 022

PATH=$PATH:/usr/sbin:/sbin

packagingdir="$(pwd)"
bamboodir=$(pwd)/bamboo-scripts
topdir=$(pwd)
tmppath=$(pwd)/tmp
testoutdir=$(pwd)/test-results
chmod a+x make-packages.pl fait_accompli/installer.sh gpt/build_gpt gpt/make_gpt_dist gpt/setup_gpt_dist gpt/packaging_tools/bootstrap gpt/check-gpt-prereqs

chroot=""
in_chroot=0
flavors=""
tag=""

while getopts "ic:r:f:t:" i; do
    case "$i" in
        i)
            in_chroot=1
            ;;
        c)
            chroot="$OPTARG"
            chroot_args="${chroot_args:+"$chroot_args "}-i"
            ;;
        r)
            installer_url="$OPTARG"
            chroot_args="${chroot_args:+"$chroot_args "}-r ${OPTARG}"
            ;;
        f)
            flavors="${flavors:+"${flavors} "}${OPTARG}"
            ;;
        t)
            tag="${OPTARG}"
            chroot_args="${chroot_args:+"$chroot_args "}-t ${OPTARG}"
            ;;
    esac
done
shift $(($OPTIND - 1))

if [ "$installer_url" = "" ]; then
    echo "Usage: $0 -r INSTALLER-URL" 1>&2
    exit 1
fi

mkdir -p $topdir
mkdir -p $testoutdir

# Reset home to this directory as it is a transient bamboo build dir
HOME=$topdir

mkdir -p $tmppath

# Remove all globus-related packages prior to testing
if test -f /etc/redhat-release; then
    pkgs_to_rm="$( rpm -qa | (egrep '^grid-packaging-tools|^[Gg]lobus-|^myproxy|^gsi_openssh' || true) )"
    if [ -n "$pkgs_to_rm" ]; then
        sudo rpm -e --allmatches $pkgs_to_rm
    fi
    if test -z "${flavors}"; then
        arch="$(uname -m)"
        case "$arch" in
            x86_64|ia64)
                flavors=gcc64
                ;;
            i?86)
                flavor=gcc32
                ;;
            *)
                echo "Don't know how to determine flavor for $arch" 1>&2
                exit 1
                ;;
        esac
    fi
elif test -f /etc/debian_version; then
    pkgs_to_rm="$( dpkg-query -W -f "\${Package}\t\${Status}\n" "*globus*" "grid-packaging-tools*" "myproxy*" "gsi-openssh*" | awk -F"	" "\$2 ~ /^install/ { print \$1 }" || true)"
    if [ -n "$pkgs_to_rm" ]; then
        sudo dpkg -P $pkgs_to_rm
    fi
    if test -z "${flavors}"; then
        arch="$(dpkg-architecture -qDEB_BUILD_GNU_CPU)"
        case "$arch" in
            x86_64|ia64)
                flavors=gcc64
                ;;
            i?86)
                flavors=gcc32
                ;;
            *)
                echo "Don't know how to determine flavor for $arch" 1>&2
                exit 1
                ;;
        esac
    fi
fi

installer_file="${installer_url##*/}"
installer_dir="${installer_file%%.tar.gz}"

# Download the source installer and also create source packages for the tests
if [ "$in_chroot" != 1 ]; then
    if [ ! -f "${installer_file}" ]; then
        curl -Os "$installer_url"
    fi

    if [ ! -f "${installer_dir}" ]; then
        tar zxf "${installer_file}"
    fi

    if [ ! -d package-output ]; then
        ./make-packages.pl ${tag:+-t $tag} -a --deps -deporder \
            -bundles=globus-data-management-test \
            -flavor=${flavors%% *} -skipbundle
    fi
fi

# Build the installer
for flavor in ${flavors}; do
    cd "${installer_dir}";
    ./configure --prefix="${topdir}/globus-location-${flavor}" \
                --with-flavor="${flavor}"; 
    make;
    make globus_simple_ca;
    make install;
    make distclean
    cd -
done

if [ "$chroot" != "" ]; then
    schroot -c "$chroot" -d "$packagingdir" -p -- bash $0 $chroot_args
fi

export GLOBUS_LOCATION="${topdir}/globus-location-${flavor}"
. ${GLOBUS_LOCATION}/etc/globus-user-env.sh

SIMPLECADIR="${GLOBUS_LOCATION}/var/lib/globus/simple_ca"
mkdir -p "$(dirname "${SIMPLECADIR}")"

# Set up security if we dont have it done already
if [ ! -f /etc/grid-security/hostcert.pem -o ! -f $HOME/.globus/usercert.pem ]; then
    sudo -E /bin/sh -c ". ${GLOBUS_LOCATION}/etc/globus-user-env.sh ; grid-ca-create -force -noint -pass globus -dir ${SIMPLECADIR}"
    sudo mkdir -p /etc/grid-security/certificates
    catarball=$(echo globus_simple_ca_*.tar.gz)
    gzip -dc < $catarball | sudo tar -C /etc/grid-security/certificates --strip 1 -xf -
    sudo -E /bin/sh -c ". ${GLOBUS_LOCATION}/etc/globus-user-env.sh ; grid-default-ca -ca $(sudo openssl x509 -noout -hash -in ${SIMPLECADIR}/cacert.pem)"
    sudo -E /bin/sh -c ". ${GLOBUS_LOCATION}/etc/globus-user-env.sh ; grid-cert-request -host \$(globus-hostname) -dir /etc/grid-security -force"
    sudo -E /bin/sh -c ". ${GLOBUS_LOCATION}/etc/globus-user-env.sh ; grid-ca-sign -in /etc/grid-security/hostcert_request.pem -force -out /etc/grid-security/hostcert.pem -passin pass:globus -dir ${SIMPLECADIR}"
    X509_USER_CERT="$HOME/.globus/usercert.pem"
    X509_USER_KEY="$HOME/.globus/userkey.pem"
    export X509_USER_CERT
    export X509_USER_KEY

    grid-cert-request -cn "$(id -un)" -nopw -force
    sudo -E /bin/sh -c ". ${GLOBUS_LOCATION}/etc/globus-user-env.sh ; grid-ca-sign -in $HOME/.globus/usercert_request.pem -out /tmp/usercert.pem -passin pass:globus -force -dir ${SIMPLECADIR}"
    cp /tmp/usercert.pem "$X509_USER_CERT"
    sudo -E /bin/sh -c ". ${GLOBUS_LOCATION}/etc/globus-user-env.sh ; grid-mapfile-add-entry -dn $(grid-cert-info -subject -file "$X509_USER_CERT") -ln $(id -un)"
    grid-proxy-init -hours 24
fi

for flavor in $flavors; do
    GLOBUS_LOCATION="${topdir}/globus-location-${flavor}"
    . ${GLOBUS_LOCATION}/etc/globus-user-env.sh
sudo -E /bin/sh -c ". ${GLOBUS_LOCATION}/etc/globus-user-env.sh; ${GLOBUS_LOCATION}/etc/init.d/globus-gridftp-server restart "


    mkdir -p "$tmppath/$flavor"
    cd "$tmppath/$flavor"

    flavortestoutdir="${testoutdir}/${flavor}"

    mkdir -p "${flavortestoutdir}"

    for testpkg in $topdir/package-output/globus*_test-*.tar.gz; do
        gzip -dc "$testpkg" | tar xf -
        testpkgname=$( basename $testpkg | sed -e 's/\.tar\.gz//' )
        cd $testpkgname
        testpkgname_no_ver=$(echo $testpkgname | sed -e 's/-.*//' -e 's/_/-/g')
        ./configure --with-flavor=${flavor}
        make 
        make junit || true
        for x in "${testpkgname_no_ver}"*.xml; do
            if [ -f "$x" ]; then
                sed -e "s/<testsuite name=\"\([^\"]*\)\" /<testsuite name=\"\1_${flavor}\" /" -e "s/classname=\"\([^\"]*\)\"/classname=\"\1_${flavor}\"/"< "$x" > "${flavortestoutdir}/${x}"
            fi
        done
        cd ..
    done
done
