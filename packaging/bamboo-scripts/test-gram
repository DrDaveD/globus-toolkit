#! /bin/sh

set -e

cleanup_hooks=""

cleanup()
{
    eval set -- "$cleanup_hooks"

    for x; do
        eval $x || true
    done
}

escape()
{
    inp="$1"
    echo "$inp" | \
        sed -e "s/\\\\/\\\\\\\\/g" \
            -e "s/\\\$/\\\\\$/" \
            -e "s/'/\\\\\'/g" \
            -e "s/\`/\\\\\`/g" \
            -e "s/\"/\\\\\"/g" \
            -e "s/^/\"/" -e "s/\$/\"/"
}

push_cleanup_hook()
{
    cleanup_hooks="$(escape "$1") $cleanup_hooks"
}

trap cleanup EXIT

topdir="$(pwd)"
artifactdir="${topdir}/artifacts"
mkdir -p "${artifactdir}"
CVSROOT=:pserver:anonymous@cvs.globus.org:/home/globdev/CVS/globus-packages
export CVSROOT

# set default values if command-line option not used
branch=globus_5_0_branch
lrms="fork fork+"
flavor="gcc64dbg"
nightly=0
installer_url=""

while getopts "f:b:nl:i:" arg; do
    case "$arg" in
        f)
            flavor="$OPTARG"
            ;;
        b)
            branch="$OPTARG"
            ;;
        n)
            nightly=1
            ;;
        i)
            installer_url="$OPTARG"
            ;;
        l)
            # if the argument to the -l parameter ends in "+", then we will
            # run the tests with and without the SEG for that LRM
            lrms="${lrms:+$lrms }${OPTARG}"
            if [ "${OPTARG}" != "${OPTARG%+}" ]; then
                lrms="${lrms:+$lrms }${OPTARG%+}"
            fi
            ;;
        *)
            echo "Invalid option $arg" 1>&2
            exit 1
            ;;
    esac
done

# Two modes of operation:
# - cvs mode [default]
#   Check out $branch, create a source installer, and install it
# - source installer mode
#   Download the latest source installer from
#   http://www.globus.org/$branch/nightly.tar.gz or $installer_url
if [ "$nightly" -eq 0 -a -z "$installer_url" ]; then
    if [ "$branch" != "HEAD" ]; then
        tag="-r $branch"
        installertag="-t $branch"
    fi

    cvs co $tag packaging
    cd packaging
    installer="gt$(cat fait_accompli/version)-all-source-installer"
    ./fait_accompli/installer.sh -a $installer_tag
    tar zcf "../nightly.tar.gz" "$installer"
    cd ..
else
    if [ "${installer_url}" = "" ]; then
        installer_url="http://www.globus.org/${branch}/nightly.tar.gz"
    fi
    curl -s "$installer_url" > nightly.tar.gz
fi
tar zxf nightly.tar.gz
installer_root="$(tar ztf nightly.tar.gz | head -n 1)"
cd "$installer_root"

export GLOBUS_LOCATION=$(pwd)/globus-location
export GPT_LOCATION=$GLOBUS_LOCATION

./configure --prefix=$GLOBUS_LOCATION --with-flavor="$flavor"
# Make core and core-thr first, so we can use -j below
make globus_core globus_core-thr
push_cleanup_hook "sudo rm -rf $GLOBUS_LOCATION"

lrm_targets=""
for lrm in $lrms; do
    case "$lrm" in
        *+)
            # Everything we test with SEG we test also without SEG
            ;;
        *)
            lrm_targets="${lrm_targets:+$lrm_targets }gram5-${lrm}"
            ;;
    esac
done
make -j2 prewsgram globus-data-management-server globus_simple_ca ${lrm_targets} prews-test
make install

. $GLOBUS_LOCATION/etc/globus-user-env.sh

# Set up temporary security environment with host and user certificates
cd $GLOBUS_LOCATION/setup/globus
./setup-simple-ca -noint
push_cleanup_hook "rm -rf $HOME/.globus || true"
cd ../globus_simple_ca*
sudo -E ./setup-gsi
sudo chown -R $(id -un) "$GLOBUS_LOCATION"

grid-cert-request -host $(globus-hostname) -dir ${GLOBUS_LOCATION}/tmp/host
grid-ca-sign -in ${GLOBUS_LOCATION}/tmp/host/hostcert_request.pem \
        -out ${GLOBUS_LOCATION}/tmp/host/hostcert.pem \
        -passin pass:globus

sudo cp ${GLOBUS_LOCATION}/tmp/host/hostcert.pem /etc/grid-security/hostcert.pem
sudo cp ${GLOBUS_LOCATION}/tmp/host/hostkey.pem /etc/grid-security/hostkey.pem
push_cleanup_hook "sudo rm -rf /etc/grid-security/*"

grid-cert-request -cn $(id -un) -nopw -dir $HOME/.globus
grid-ca-sign -in $HOME/.globus/usercert_request.pem \
        -out $HOME/.globus/usercert.pem \
        -passin pass:globus

grid-proxy-init -verify

sudo -E $(which globus-gridftp-server) -S -p 2811
push_cleanup_hook "sudo killall globus-gridftp-server"

sudo -E $(which grid-mapfile-add-entry) \
        -dn "$(grid-cert-info -subject)" \
        -ln "$(id -un)"

cd "$GLOBUS_LOCATION/test"

test_results=0
# Run protocol tests only once---they don't depend on the job manager
cd globus_gram_protocol_test
./TESTS-junit.pl || test_results="$?"
cp globus-gram-protocol-test.xml "${artifactdir}" || true
cd "$OLDPWD"

GATEKEEPER_CONTACT="$(sudo -E $(which globus-gatekeeper) \
        -conf $GLOBUS_LOCATION/etc/globus-gatekeeper.conf)"
GATEKEEPER_CONTACT="${GATEKEEPER_CONTACT#GRAM contact: }"
push_cleanup_hook "sudo killall globus-gatekeeper"
push_cleanup_hook "killall globus-job-manager"

servicedir="${GLOBUS_LOCATION}/etc/grid-services"

# Run client and job manager tests for each lrm which is configured
for lrm in $lrms; do
    # remove first two colon-separated fields to get the DN
    CONTACT_DN="${GATEKEEPER_CONTACT#*:*:}"
    # everything before the DN is the host:port
    CONTACT_HOST_PORT="${GATEKEEPER_CONTACT%:$CONTACT_DN}"

    seg_pidfile="${GLOBUS_LOCATION}/var/seg-${lrm%+}.pid"
    servicefile="${servicedir}/jobmanager-${lrm%+}"
    if [ ! -f "${servicefile}.bak" ]; then
        cp "${servicefile}" "${servicefile}.bak"
        sed -e "s/\$/ -disable-usagestats/" \
            < "${servicefile}.bak" \
            > "${servicefile}"
    fi
    testsuffix="${lrm%+}"

    if [ "${lrm%+}" != "${lrm}" ]; then
        # Using SEG
        sed -e "s/\$/ -seg-module ${lrm%+}/" \
            < "${servicefile}" \
            > "${servicefile}-seg"
        servicefile="${servicefile}-seg"

        globus-job-manager-event-generator \
            -scheduler "${lrm%+}" \
            -background \
            -pidfile "${seg_pidfile}"
        push_cleanup_hook "kill \$(cat ${seg_pidfile}) || true"

        testsuffix="${testsuffix}_SEG"

        # Construct contact string with the lrm name and seg added to it
        CONTACT_STRING="${CONTACT_HOST_PORT}/jobmanager-${lrm%+}-seg:${CONTACT_DN}"
    else
        # Construct contact string with the lrm name added to it
        CONTACT_STRING="${CONTACT_HOST_PORT}/jobmanager-${lrm}:${CONTACT_DN}"
    fi

    # CONTACT_LRM can cause some tests to be skipped, if they use a feature
    # that doesn't work with $lrm
    CONTACT_LRM="${lrm%+}"
    export CONTACT_STRING
    export CONTACT_LRM

    for test in globus_gram_client_test globus_gram_job_manager_test; do
        cd "$test"
        ./TESTS-junit.pl || test_results="$?"
        for x in *.xml; do
            if [ -r "$x" ]; then
                xname="${x%.xml}-${testsuffix}.xml"
                sed -e "s/<testsuite name=\"\([^\"]*\)\" /<testsuite name=\"\1_${testsuffix}\" /" -e "s/classname=\"\([^\"]*\)\"/classname=\"\1_${testsuffix}\"/"< "$x" > "${artifactdir}/$xname"
            fi
        done
        cd "$OLDPWD"
    done
done

exit "$test_results"
