dnl Intended to be used with a Makefile.in generated from installer.sh
AC_INIT(Globus Toolkit, @version@)
AC_CONFIG_FILES(Makefile)
AC_PREFIX_DEFAULT(/usr/local/globus-@version@)

AC_ARG_WITH(gptlocation, AC_HELP_STRING([--with-gptlocation=dir],\
   [If you want to install GPT into an alternate directory.]),\
   [gptlocation=$withval], [if test x$prefix = "xNONE"; then\
   gptlocation=$ac_default_prefix; else gptlocation=$prefix; fi])
AC_SUBST(gptlocation, $gptlocation)

dnl These auto-substitutes let us re-use the Makefile.in from
dnl the source installer.
aixargs=""
AC_SUBST(aixargs, $aixargs)

openssl="globus_binary_openssl"
AC_SUBST(globus_openssl, $openssl)

netlogger=""
AC_SUBST(netlogger, $netlogger)

i18n=" "
AC_ARG_ENABLE(i18n, AC_HELP_STRING([--enable-i18n],\
   [Enable internationalization.  Default is disabled.]),
   [if test $enableval = "yes"; then i18n="i18n"; fi],
   [])
AC_SUBST(i18n, $i18n)

# java
#AC_PATH_PROG(JAVAC_PATH, javac)
#if test "x$JAVAC_PATH" = "x"; then
#    AC_MSG_WARN(A Java compiler is needed for some parts of the toolkit) 
#    AC_MSG_WARN(This message can be ignored if you are only building the C parts of the toolkit)
#else
#    if test "x$JAVA_HOME" = "x"; then
#        AC_MSG_WARN(JAVA_HOME is not set) 
#        AC_MSG_WARN(Most Java versions will not work correctly without JAVA_HOME set)
#    else
#        if test "$JAVAC_PATH" != "$JAVA_HOME/bin/javac"; then
#            AC_MSG_WARN(the javac in your path is not from your \$JAVA_HOME environment)
#        fi
#    fi
#fi

# ant
#AC_PATH_PROG(ANT_PATH, ant)
#if test "x$ANT_PATH" = "x"; then
#   AC_MSG_WARN(ant is needed for some parts of the toolkit) 
#   AC_MSG_WARN([If you know you will not need one, this message can be ignored])
#fi

# XML::Parser
perl -MXML::Parser -e 1 > /dev/null 2>&1
if test $? -ne 0; then
   AC_MSG_WARN([XML::Parser not found, but is required for GRAM])
fi

AC_OUTPUT

