dnl Intended to be used with a Makefile.in generated from installer.sh
AC_INIT(Globus Toolkit, 4.0.0)
AC_CONFIG_FILES(Makefile)
AC_PREFIX_DEFAULT(/usr/local/globus-4.0.0)

AC_ARG_WITH(gptlocation, AC_HELP_STRING([--with-gptlocation=dir],\
   [If you want to install GPT into an alternate directory.]),\
   [gptlocation=$withval], [if test x$prefix = "xNONE"; then\
   gptlocation=$ac_default_prefix; else gptlocation=$prefix; fi])
AC_SUBST(gptlocation, $gptlocation)

prewsgram="prewsgram"
AC_ARG_ENABLE(prewsgram, AC_HELP_STRING([--disable-prewsgram],\
   [Don't build pre-webservices [GRAM].  Default is enabled.]),\
   [if test $enableval = "no"; then prewsgram=" "; fi], [])
AC_SUBST(prewsgram, $prewsgram)
gridftp="gridftp"
AC_ARG_ENABLE(gridftp, AC_HELP_STRING([--disable-gridftp],\
   [Don't build GridFTP.  Default is enabled.]),\
   [if test $enableval = "no"; then gridftp=" "; fi], [])
AC_SUBST(gridftp, $gridftp)
prewsmds=" "
AC_ARG_ENABLE(prewsmds, AC_HELP_STRING([--enable-prewsmds],\
   [Build pre-webservices mds.  Default is disabled.]),
   [if test $enableval = "yes"; then prewsmds="prewsmds"; fi], [])
AC_SUBST(prewsmds, $prewsmds)

dnl Java code
wsjava="gt4-java-ws-core gt4-java-admin"
AC_ARG_ENABLE(wsjava, AC_HELP_STRING([--disable-wsjava],\
   [Don't build java webservices core.  Default is enabled.]),
   [if test $enableval = "no"; then wsjava=" "; fi], [])
AC_SUBST(wsjava, $wsjava)
wsmds="gt4-mds"
AC_ARG_ENABLE(wsmds, AC_HELP_STRING([--disable-wsmds],\
   [Don't build webservices Monitoring and Discovery Services.  Default is enabled.]),
   [if test $enableval = "no"; then wsmds=" "; fi], [])
AC_SUBST(wsmds, $wsmds)
wsdel="gt4-delegation"
AC_ARG_ENABLE(wsdel, AC_HELP_STRING([--disable-wsdel],\
   [Don't build webservices delegation code.  Default is enabled.]),
   [if test $enableval = "no"; then wsdel=" "; fi], [])
AC_SUBST(wsdel, $wsdel)
wsrft="gt4-rft"
AC_ARG_ENABLE(wsrft, AC_HELP_STRING([--disable-wsrft],\
   [Don't build webservices Reliable File Transfer.  Default is enabled.]),
   [if test $enableval = "no"; then wsrft=" "; fi], [])
AC_SUBST(wsrft, $wsrft)

wsgram="gt4-gram"
AC_ARG_ENABLE(wsgram, AC_HELP_STRING([--disable-wsgram],\
   [Don't build webservices [GRAM].  Default is enabled.]),
   [if test $enableval = "no"; then wsgram=" "; fi], [])
AC_SUBST(wsgram, $wsgram)
wsgramcondor=" "
AC_ARG_ENABLE(wsgram-condor, AC_HELP_STRING([--enable-wsgram-condor],\
   [Build GRAM Condor scheduler interface.  Default is disabled.]),
   [if test $enableval = "yes"; then wsgramcondor="gt4-gram-condor"; fi], [])
AC_SUBST(wsgramcondor, $wsgramcondor)
wsgramlsf=" "
AC_ARG_ENABLE(wsgram-lsf, AC_HELP_STRING([--enable-wsgram-lsf],\
   [Build GRAM LSF scheduler interface.  Default is disabled.]),
   [if test $enableval = "yes"; then wsgramlsf="gt4-gram-lsf"; fi], [])
AC_SUBST(wsgramlsf, $wsgramlsf)
wsgrampbs=" "
AC_ARG_ENABLE(wsgram-pbs, AC_HELP_STRING([--enable-wsgram-pbs],\
   [Build GRAM PBS scheduler interface.  Default is disabled.]),
   [if test $enableval = "yes"; then wsgrampbs="gt4-gram-pbs"; fi], [])
AC_SUBST(wsgrampbs, $wsgrampbs)

i18n=" "
AC_ARG_ENABLE(i18n, AC_HELP_STRING([--enable-i18n],\
   [Enable internationalization.  Default is disabled.]),
   [if test $enableval = "yes"; then i18n="i18n"; fi],
   [])
AC_SUBST(i18n, $i18n)
drs=" "
AC_ARG_ENABLE(drs, AC_HELP_STRING([--enable-drs],\
   [Enable Data Replication Service.  Default is disabled.]),
   [if test $enableval = "yes"; then drs="gt4-replicator"; fi],
   [])
AC_SUBST(drs, $drs)

wscas="gt4-cas"
AC_ARG_ENABLE(wscas, AC_HELP_STRING([--disable-wscas],\
   [Don't build webservices Community Authorization Service.  Default is enabled.]),
   [if test $enableval = "no"; then wscas=" "; fi], [])
AC_SUBST(wscas, $wscas)
wsc="gt4-c-ws-core"
AC_ARG_ENABLE(wsc, AC_HELP_STRING([--disable-wsc],\
   [Don't build [C] webservices core.  Default is enabled.]),
   [if test $enableval = "no"; then wsc=" "; fi], [])
AC_SUBST(wsc, $wsc)
tests="prews-test"
AC_ARG_ENABLE(tests, AC_HELP_STRING([--disable-tests],\
   [Don't build [C] [test] packages.  Default is enabled.]),
   [if test $enableval = "no"; then tests=" "; fi], [])
AC_SUBST(tests, $tests)
wstests="wstests"
AC_ARG_ENABLE(wstests, AC_HELP_STRING([--disable-wstests],\
   [Don't build webservices [test] packages.  Default is enabled.]),
   [if test $enableval = "no"; then wstests=" "; fi], [])
AC_SUBST(wstests, $wstests)
myproxy="gsi-myproxy"
AC_ARG_ENABLE(myproxy, AC_HELP_STRING([--disable-myproxy],\
   [Don't build myproxy.  Default is enabled.]),
   [if test $enableval = "no"; then myproxy=" "; fi], [])
AC_SUBST(myproxy, $myproxy)
gsiopenssh="gsi-openssh"
AC_ARG_ENABLE(gsiopenssh, AC_HELP_STRING([--disable-gsiopenssh],\
   [Don't build gsiopenssh.  Default is enabled.]),
   [if test $enableval = "no"; then gsiopenssh=" "; fi], [])
AC_SUBST(gsiopenssh, $gsiopenssh)
webmds="webmds"
AC_ARG_ENABLE(webmds, AC_HELP_STRING([--disable-webmds],\
   [Don't build webmds.  Default is enabled.]),
   [if test $enableval = "no"; then webmds=" "; fi], [])
AC_SUBST(webmds, $webmds)

# java
AC_PATH_PROG(JAVAC_PATH, javac)
if test "x$JAVAC_PATH" = "x"; then
    AC_MSG_WARN(A Java compiler is needed for some parts of the toolkit) 
    AC_MSG_WARN(This message can be ignored if you are only building the C parts of the toolkit)
else
    if test "x$JAVA_HOME" = "x"; then
        AC_MSG_WARN(JAVA_HOME is not set) 
        AC_MSG_WARN(Most Java versions will not work correctly without JAVA_HOME set)
    else
        if test "$JAVAC_PATH" != "$JAVA_HOME/bin/javac"; then
            AC_MSG_WARN(the javac in your path is not from your \$JAVA_HOME environment)
        fi
    fi
fi

# ant
AC_PATH_PROG(ANT_PATH, ant)
if test "x$ANT_PATH" = "x"; then
   AC_MSG_WARN(ant is needed for some parts of the toolkit) 
   AC_MSG_WARN(If you know you will not need one, this message can be ignored)
fi

AC_OUTPUT


