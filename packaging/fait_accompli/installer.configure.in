dnl Intended to be used with a Makefile.in generated from installer.sh
AC_INIT(Globus Toolkit, 3.9.4)
AC_CONFIG_FILES(Makefile)
AC_PREFIX_DEFAULT(/usr/local/globus-3.9.4)
AC_CANONICAL_BUILD
if test "x$flavor" = "x"; then
   case "$build" in
   i*86-*-linux-*)
      flavor=gcc32dbg
   ;;
   power*-ibm-aix5.*)
      flavor=vendorcc32dbg
   ;;
   sparc-sun-solaris*)
      flavor=gcc32dbg
   ;;
   ia64-*-linux-*)
      flavor=gcc64dbg
   ;; 
   x86_64-*-linux-*)
      flavor=gcc64dbg
   ;;
   alphaev67-dec-osf*)
      flavor=vendorcc64dbg
   ;;
   esac
fi

AC_ARG_WITH(flavor, AC_HELP_STRING([--with-flavor=flavor],\
   [Use flavor as the base for GPT builds.]),
   [flavor=$withval], [])

if test "x$flavor" = "x"; then
   echo "Unable to guess flavor. Please use --with-flavor= to specify one"
   exit 1
fi
thr=pthr
AC_SUBST(flavor, $flavor)
AC_SUBST(thr, $thr)

AC_ARG_WITH(buildopts, AC_HELP_STRING([--with-buildopts="args"],\
   [Arguments to pass to gpt-build, like "--verbose" or "--force".]),\
   [buildopts=$withval], [])
AC_SUBST(buildopts, $buildopts)

dnl AC_SUBST(globusloc, prefix)
dnl Pre-webservices code
prewsgram="prewsgram"
AC_ARG_ENABLE(prewsgram, AC_HELP_STRING([--disable-prewsgram],\
   [Don't build pre-webservices [GRAM].  Default is enabled.]),\
   [if test $enableval = "no"; then prewsgram=" "; fi], [])
AC_SUBST(prewsgram, $prewsgram)
prewsgridftp="prewsgridftp"
AC_ARG_ENABLE(prewsgridftp, AC_HELP_STRING([--disable-gridftp],\
   [Don't build GridFTP.  Default is enabled.]),\
   [if test $enableval = "no"; then prewsgridftp=" "; fi], [])
AC_SUBST(prewsgridftp, $prewsgridftp)
prewsmds="prewsmds"
AC_ARG_ENABLE(prewsmds, AC_HELP_STRING([--disable-prewsmds],\
   [Don't build pre-webservices mds.  Default is enabled.]),
   [if test $enableval = "no"; then prewsmds=" "; fi], [])
AC_SUBST(prewsmds, $prewsmds)
AC_ARG_WITH(iodbc, AC_HELP_STRING([--with-iodbc=dir],\
   [Use the iodbc library in dir/lib/libiodbc.so.  Required for [RLS] builds.]),
   [[GLOBUS_IODBC_PATH]=$withval], [])
AC_SUBST(globus_iodbc, $[GLOBUS_IODBC_PATH])
rls="globus-rls-server"
AC_ARG_ENABLE(rls, AC_HELP_STRING([--disable-rls],\
   [Don't build [RLS].  Default is enabled, but you must also specify an [IODBC] driver using --with-iodbc]),
   [if test $enableval = "no"; then rls=" "; fi],
   [if test x$GLOBUS_IODBC_PATH = "x"; then rls=" "; fi])
AC_SUBST(rls, $rls)
dnl Java code
wsjava="gt4-java-ws-core"
AC_ARG_ENABLE(wsjava, AC_HELP_STRING([--disable-wsjava],\
   [Don't build java webservices core.  Default is enabled.]),
   [if test $enableval = "no"; then wsjava=" "; fi], [])
AC_SUBST(wsjava, $wsjava)
wsmds="gt4-mds"
AC_ARG_ENABLE(wsmds, AC_HELP_STRING([--disable-wsmds],\
   [Don't build webservices Monitoring and Discovery Services.  Default is enabled.]),
   [if test $enableval = "no"; then wsmds=" "; fi], [])
AC_SUBST(wsmds, $wsmds)
wsdel="gt4-delegation"
AC_ARG_ENABLE(wsdel, AC_HELP_STRING([--disable-wsdel],\
   [Don't build webservices delegation code.  Default is enabled.]),
   [if test $enableval = "no"; then wsdel=" "; fi], [])
AC_SUBST(wsdel, $wsdel)
wsrft="gt4-rft"
AC_ARG_ENABLE(wsrft, AC_HELP_STRING([--disable-wsrft],\
   [Don't build webservices Reliable File Transfer.  Default is enabled.]),
   [if test $enableval = "no"; then wsrft=" "; fi], [])
AC_SUBST(wsrft, $wsrft)

wsgram="gt4-gram"
AC_ARG_ENABLE(wsgram, AC_HELP_STRING([--disable-wsgram],\
   [Don't build webservices [GRAM].  Default is enabled.]),
   [if test $enableval = "no"; then wsgram=" "; fi], [])
AC_SUBST(wsgram, $wsgram)
wsgramcondor=" "
AC_ARG_ENABLE(wsgram-condor, AC_HELP_STRING([--enable-wsgram-condor],\
   [Build GRAM Condor schduler interface.  Default is disabled.]),
   [if test $enableval = "yes"; then wsgramcondor="gt4-gram-condor"; fi], [])
AC_SUBST(wsgramcondor, $wsgramcondor)
wsgramlsf=" "
AC_ARG_ENABLE(wsgram-lsf, AC_HELP_STRING([--enable-wsgram-lsf],\
   [Build GRAM LSF schduler interface.  Default is disabled.]),
   [if test $enableval = "yes"; then wsgramlsf="gt4-gram-lsf"; fi], [])
AC_SUBST(wsgramlsf, $wsgramlsf)
wsgrampbs=" "
AC_ARG_ENABLE(wsgram-pbs, AC_HELP_STRING([--enable-wsgram-pbs],\
   [Build GRAM PBS schduler interface.  Default is disabled.]),
   [if test $enableval = "yes"; then wsgrampbs="gt4-gram-pbs"; fi], [])
AC_SUBST(wsgrampbs, $wsgrampbs)

i18n=" "
AC_ARG_ENABLE(i18n, AC_HELP_STRING([--enable-i18n],\
   [Enable internationalization.  Default is disabled.]),
   [if test $enableval = "yes"; then i18n="i18n"; fi],
   [])
AC_SUBST(i18n, $i18n)

wscas="gt4-cas"
AC_ARG_ENABLE(wscas, AC_HELP_STRING([--disable-wscas],\
   [Don't build webservices Community Authorization Service.  Default is enabled.]),
   [if test $enableval = "no"; then wscas=" "; fi], [])
AC_SUBST(wscas, $wscas)
wsc="gt4-c-ws-core"
AC_ARG_ENABLE(wsc, AC_HELP_STRING([--disable-wsc],\
   [Don't build [C] webservices core.  Default is enabled.]),
   [if test $enableval = "no"; then wsc=" "; fi], [])
AC_SUBST(wsc, $wsc)
tests="prews-test"
AC_ARG_ENABLE(tests, AC_HELP_STRING([--disable-tests],\
   [Don't build [C] [test] packages.  Default is enabled.]),
   [if test $enableval = "no"; then tests=" "; fi], [])
AC_SUBST(tests, $tests)
wstests="wstests"
AC_ARG_ENABLE(wstests, AC_HELP_STRING([--disable-wstests],\
   [Don't build webservices [test] packages.  Default is enabled.]),
   [if test $enableval = "no"; then wstests=" "; fi], [])
AC_SUBST(wstests, $wstests)
AC_OUTPUT
