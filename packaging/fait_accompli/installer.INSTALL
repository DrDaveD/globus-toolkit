The most up-to-date instructions are stored on the web, at
http://www.globus.org/toolkit/docs/@version@/admin/docbook/ 
(the full reference)
and http://www.globus.org/toolkit/docs/@version@/admin/docbook/quickstart.html
(the fastest way to get up and running).

The instructions below are current as of the date of release.

Required software
    * JDK 1.5.0+
    * Ant 1.6.2+ 
    * openssl 0.9.7+
    * C compiler. If gcc, avoid version 3.2.  3.2.1 and 2.95.x are okay.
    * C++ compiler. Pick whichever version matches your C compiler.
    * GNU tar
    * GNU make
    * GNU sed
    * zlib 1.1.4+
    * sudo (Required for GRAM) 

Optional software:
    * Tomcat (Required for WebMDS at runtime)

Overview:
========
    1.  Installing Globus Toolkit @version@
    2.  Installing optional bundles
    3.  Installing only a subset of GT@version@
    4.  Platform-specific notes


1. Installing Globus Toolkit @version@
==================================
First, download the required software.  Be aware that apache ant
will use the java referred to by JAVA_HOME, not necessarily the first
java executable on your PATH.  Be sure to set JAVA_HOME to the
top-level directory of your java installation before installing.

Create a user named "globus". The globus user should own this
installer directory and the installation directory.  If the installation
directory does not exist, create it now.  

Then, as the globus user, run

globus$ ./configure --prefix=/path/to/install
globus$ make
globus$ make install

If you do not specify a prefix, it will try to install into
/usr/local/globus-@version@ The build will only be successful if
the globus user has write access to the target directory.

Then see http://www-unix.globus.org/toolkit/docs/development/@version@/ or
http://www.globus.org/toolkit/docs/development/@version@/admin/docbook/quickstart.html
for setup details.


2. Installing optional bundles
==============================
If you are installing on a machine or cluster that has schedulers
installed, you can add scheduler packages by adding the following
option to your configure line:
--enable-wsgram-condor        For Condor
--enable-wsgram-lsf           For LSF
--enable-wsgram-pbs           For PBS

RLS will use a builtin IODBC driver unless you specify otherwise.
If you installed IODBC for RLS, add the following to the configure script:
--with-iodbc=/path/to/iodbc

3. Installing only a subset of GT@version@
======================================
You do not have to build every subcomponent of this release.  The
makefile specifies subtargets for different functional subpieces.
See the component map at
http://www.globus.org/toolkit/docs/4.0/admin/docbook/apb.html
for more details.

Makefile targets:
-----------------
i18n              Internationalization libraries
prewsgram         Pre-webservices GRAM
gridftp           GridFTP
prews             Pre-WS GRAM, MDS2, and GridFTP
prews-test        Tests for pre-webservices components
rls               Replica Location Service

Note that all of these targets require the "install" target also.
So, for instance, to build GridFTP alone, you would run:

$ ./configure --prefix=/path/to/install
$ make gridftp install


4. Platform notes
=================
The latest platform notes are at:
http://www.globus.org/toolkit/docs/development/@version@/admin/docbook/gtadmin-platform.html

    * Apple MacOS X
    * Debian
    * Fedora Core
    * HP/UX
    * IBM AIX
    * Red Hat (9, Advanced Server, Enterprise)
    * Sun Solaris
    * SuSE Linux

Apple MacOS X
-------------
No known issues.

Debian
------
No known issues.

Fedora Core
-----------
Change your default Java installation using the alternatives command.
Here's one example of how to do it if you have already installed a non-GCJ
version of the Java2 SDK into /usr/java/j2sdk1.4.2_08:

root# /usr/sbin/alternatives --install /usr/bin/java java /usr/java/j2sdk1.4.2_08/bin/java 2
root# /usr/sbin/alternatives --config java
There are 2 programs which provide 'java'.

  Selection    Command
-----------------------------------------------

*+ 1           /usr/lib/jvm/jre-1.4.2-gcj/bin/java
   2           /usr/java/j2sdk1.4.2_08/bin/java

Enter to keep the current selection[+], or type selection number:
Choose selection 2 to change your default java version to the non-GCJ version.

FreeBSD
-------
No known issues.

HP/UX
-----
For HP-UX/IA64 and for additional details about GT4 on HP-UX/PA-RISC,
please consult the HP GT4 support page at 
http://h30097.www3.hp.com/globus/gt4/index.html

IBM AIX
-------
Supported flavors are vendorcc32dbg/vendorcc32 and
vendorcc64dbg/vendorcc64 using the Visual Age compilers (xlc). No gcc
flavors are supported.

GNU tar is required before IBM tar in the PATH.

The toolkit has been tested on AIX 5.2 with:

    * Visual Age C/C++ 6.0
    * 32 bit version of IBM Java 1.4
    * Apache Ant 1.5.4

Red Hat (9, Advanced Server, Enterprise)
-------
When building from source on a Red Hat Enterprise line version 3 or 4 based OS, GPT might have a problem retrieving exit codes from subshells. You might see errors which says they were both successful and failed:

BUILD SUCCESSFUL
Total time: 11 seconds

ERROR: Build has failed
make: *** [globus_wsrf_servicegroup] Error 10
The workaround is to configure with --with-buildopts="-verbose"



Sun Solaris
-----------
Supported flavors are gcc32, gcc64, vendorcc32 and vendorcc64. The dbg
flavors should work as well. For gcc64, a gcc built to target 64 bit
object files is required.

GPT has problems with the Sun provided perl and tar:
http://www.gridpackagingtools.org/book/latest-stable/ch01s07.html

The toolkit has been tested on Solaris 9 with:

    * Sun Workshop 6 update 2 C 5.3
    * gcc 3.4.3
    * Sun Java 1.4.2_02
    * Apache Ant 1.5.4

SuSE Linux
----------
No issues.

Windows
-------
Only Java-only components will build. Please choose the Java WS Core-only
download.
