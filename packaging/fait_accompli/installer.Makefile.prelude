#Now using GT5 all target
all: gpt gridftp prewsgram rls gsi-myproxy gsi-openssh @i18n@ prews-test globus-gsi-test done
GLOBUS_LOCATION=@prefix@
GPT_LOCATION=@gptlocation@
GLOBUS_IODBC_INCLUDES=@globus_iodbc_includes@
GLOBUS_IODBC_LIBS=@globus_iodbc_libs@
GLOBUS_UNIXODBC_INCLUDES=@globus_unixodbc_includes@
GLOBUS_UNIXODBC_LIBS=@globus_unixodbc_libs@
GSI_OPENSSH_ARGS=@gsiopensshargs@
GLOBUS_VERSION=@versionnum@
GLOBUS_VERSIONNAME=@versionname@
export GLOBUS_IODBC_INCLUDES GLOBUS_IODBC_LIBS GPT_LOCATION GLOBUS_LOCATION 
export GLOBUS_UNIXODBC_INCLUDES GLOBUS_UNIXODBC_LIBS GSI_OPENSSH_ARGS
export GLOBUS_VERSION GLOBUS_VERSIONNAME

BUILD_OPTS=@buildopts@
FLAVOR=@flavor@
THR=@thr@
@aixargs@

# Final info target
done:
	@echo "Your build completed successfully.  Please run ${MAKE} install."

# Cleanup targets
clean:
	:
distclean: clean
	rm -f Makefile config.status config.log

# Functional group dependencies, expressed in bundles.
common: gpt globus_core globus_libtool globus_common globus_common_setup
i18n: gpt common globus-internationalization globus-internationalization-thr
prews: gridftp prewsgram
prewsgram: gpt globus-resource-management-sdk-thr globus-resource-management-server globus-resource-management-client globus-resource-management-sdk gram5-fork
gridftp: gpt globus-data-management-sdk-thr globus-data-management-server-thr globus-data-management-server globus-data-management-client globus-data-management-sdk @netlogger@
rls: gpt globus-rls-server
drs: gpt common globus_rls_client wsjava gt4-delegation gt4-replicator
udt: gpt globus_xio_udt_ref_driver-thr

# GPT targets
gpt: @gptlocation@/sbin/gpt-postinstall
@gptlocation@/sbin/gpt-postinstall:
	cd gpt && OBJECT_MODE=32 ./build_gpt
install: postinstall
postinstall:
	if [ ! -L ${GLOBUS_LOCATION}/etc/globus_packages ]; then \
	   cd ${GLOBUS_LOCATION}/etc/; \
	   ln -sf gpt/packages globus_packages; \
	fi; \
	${GPT_LOCATION}/sbin/gpt-postinstall

gsi-myproxy: gpt globus-gsi globus_usage myproxy
gsi-openssh: gpt globus-gsi gsi_openssh gsi_openssh_setup                       

# Openssl redirector to globus_system_openssl or globus_openssl_backup
globus_openssl: @globus_openssl@
globus_openssl-compile: @globus_openssl@-compile
globus_openssl-thr: @globus_openssl@-thr
globus_openssl-thr-compile: @globus_openssl@-thr-compile
globus_openssl-only: @globus_openssl@-only
globus_openssl-only-thr: @globus_openssl@-only-thr
globus_binary_openssl:
	tar -C ${GLOBUS_LOCATION} -xzf binary-trees/globus_openssl-*/*.tar.gz

# Netlogger incubator
netlogger_c: gpt globus_core globus_common
	${GPT_LOCATION}/sbin/gpt-build  ${BUILD_OPTS} -srcdir=source-trees/netlogger-c-4.0.2 ${FLAVOR}

netlogger_c-thr: gpt globus_core-thr globus_common-thr
	${GPT_LOCATION}/sbin/gpt-build  ${BUILD_OPTS} -srcdir=source-trees-thr/netlogger-c-4.0.2 ${FLAVOR}${THR}

# Bundle dependencies, expressed in packages.
