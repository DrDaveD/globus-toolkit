#Now using GT5 all target
srcdir=@srcdir@
prefix=@prefix@
exec_prefix=@exec_prefix@
libdir=@libdir@
LIBPATH_VARIABLE=@LIBPATH_VARIABLE@

CONFIG_SITE=@INSTALLER_ROOT@/config.site
export CONFIG_SITE

all: gpt gridftp gram gsi-myproxy gsi-openssh done
GLOBUS_LOCATION=@prefix@
GPT_LOCATION=@gptlocation@
GLOBUS_IODBC_INCLUDES=@globus_iodbc_includes@
GLOBUS_IODBC_LIBS=@globus_iodbc_libs@
GLOBUS_UNIXODBC_INCLUDES=@globus_unixodbc_includes@
GLOBUS_UNIXODBC_LIBS=@globus_unixodbc_libs@
GSI_OPENSSH_ARGS=@gsiopensshargs@
GLOBUS_VERSION=@versionnum@
GLOBUS_VERSIONNAME=@versionname@
LOOK_FOR_FC_GLOBUS_INCLUDE=yes
export PERL5LIB="$(GPT_LOCATION)/lib/perl:$(shell echo $PERL5LIB)"
export GLOBUS_IODBC_INCLUDES GLOBUS_IODBC_LIBS GPT_LOCATION GLOBUS_LOCATION 
export GLOBUS_UNIXODBC_INCLUDES GLOBUS_UNIXODBC_LIBS GSI_OPENSSH_ARGS
export GLOBUS_VERSION GLOBUS_VERSIONNAME
export LOOK_FOR_FC_GLOBUS_INCLUDE

BUILD_OPTS=@buildopts@
FLAVOR=@flavor@
@aixargs@

# Final info target
done:
	@echo "Your build completed successfully.  Please run ${MAKE} install."

# Cleanup targets
clean:
	-for d in $(SUBDIRS); do (cd $$d; $(MAKE) clean ); done
distclean:
	-for d in $(SUBDIRS); do (cd $$d; $(MAKE) distclean ); done
	rm -f Makefile config.status config.log

# Functional group dependencies, expressed in bundles.
common: gpt globus_core globus_common
i18n: gpt common globus-internationalization
prews: gridftp prewsgram
gridftp: gpt globus-data-management-server globus-data-management-client globus-data-management-sdk @netlogger@
gram: gpt globus-resource-management-server globus-resource-management-client globus-resource-management-sdk globus_user_env

# GPT targets
gpt: @gptlocation@/sbin/gpt-postinstall
@gptlocation@/sbin/gpt-postinstall:
	cd gpt && OBJECT_MODE=32 ./configure --with-perlmoduledir=$(GPT_LOCATION)/lib/perl ; \
	make; make install; make install-man;
install: postinstall
postinstall:
	if [ ! -L ${GLOBUS_LOCATION}/etc/globus_packages ]; then \
	   cd ${GLOBUS_LOCATION}/etc/; \
	   ln -sf gpt/packages globus_packages; \
	fi; \
	${GPT_LOCATION}/sbin/gpt-postinstall

gsi-myproxy: gpt globus-gsi globus_usage myproxy
gsi-openssh: gpt globus-gsi gsi_openssh gsi_openssh_setup                       

globus_openssl: globus_system_openssl
globus_openssl-compile: globus_system_openssl-compile
globus_openssl-only: globus_system_openssl-only
globus_binary_openssl:
	tar -C ${GLOBUS_LOCATION} -xzf binary-trees/globus_openssl-*/*.tar.gz

# Netlogger incubator
netlogger_c: gpt globus_core globus_common
	${GPT_LOCATION}/sbin/gpt-build  ${BUILD_OPTS} -srcdir=source-trees/netlogger-c-4.0.2 ${FLAVOR}

# UDT
udt: gpt globus_xio_udt_ref_driver

# Bundle dependencies, expressed in packages.
