#!/usr/bin/perl -w

use strict;

use Getopt::Long;

my $opt_debug_pgms = 0;

my @packages;
my %pgms;

my $package;

my $name;
my $flavor;
my $type;


GetOptions(
    "prefer-debug-pgms"   => \$opt_debug_pgms
);


sub pick_best_flavor
{
    my $ref1 = shift;
    my $ref2 = shift;

    # empty packages always loose
    if ( ! defined(%$ref1) ) { return $ref2; }
    if ( ! defined(%$ref2) ) { return $ref1; }
    
    my %pgm1 = %$ref1;
    my %pgm2 = %$ref2;

    my $flavor1 = $pgm1{'flavor'};
    my $flavor2 = $pgm2{'flavor'};

    my $type1 = $pgm1{'type'};
    my $type2 = $pgm2{'type'};

    # static always win - as the flavor takes extra work to make
    # we do not worry about bitness and dbg/non-dbg
    if ($type1 =~ m/static/ and !($type2 =~ m/static/) ) { 
        return $ref1;
    }
    if ($type2 =~ m/static/ and !($type1 =~ m/static/) ) { 
        return $ref2;
    }

    if ($opt_debug_pgms)
    {
        # dbg wins over non-dbg
        if ( $flavor1 =~ m/dbg/ and !($flavor2 =~ m/dbg/) ) { return $ref1; }
        if ( $flavor2 =~ m/dbg/ and !($flavor1 =~ m/dbg/) ) { return $ref2; }
    }
    else
    {
        # non-dbg wins over dbg
        if ( !($flavor1 =~ m/dbg/) and $flavor2 =~ m/dbg/) { return $ref1; }
        if ( !($flavor2 =~ m/dbg/) and $flavor1 =~ m/dbg/) { return $ref2; }
    }

    # 64 bit wins over 32 bit
    if ($flavor1 =~ m/64/ and $flavor2 =~ m/32/) { return $ref1; }
    if ($flavor2 =~ m/64/ and $flavor1 =~ m/32/) { return $ref2; }

    # non-pthr wins over pthr
    if ( !($flavor1 =~ m/pthr/) and $flavor2 =~ m/pthr/ ) { return $ref1; }
    if ( !($flavor2 =~ m/ptrh/) and $flavor1 =~ m/pthr/ ) { return $ref2; }

    # vendorcc wins over gcc
    if ($flavor1 =~ m/vendorcc/ and $flavor2 =~ m/gcc/) { return $ref1; }
    if ($flavor2 =~ m/vendorcc/ and $flavor1 =~ m/gcc/) { return $ref2; }

    # at this point it does not matter which flavor we choose
    return $ref1;
}


sub add_package
{
    my $name   = shift;
    my $flavor = shift;
    my $type   = shift;

    push(@packages, "            <Package PackageFlavor=\"$flavor\"" .
                    " PackageName=\"$name\" PackageType=\"$type\" />");
}


open(QUERY, "gpt-query |");
while (<QUERY>)
{
    m/^\s+(\S+)-(\S+)-(\S+)\s/;

    if ($1)
    {
        $name   = $1;
        $flavor = $2;
        $type   = $3;

        # pgms are the only ones which can conflict
        # store the best flavor choice in the pgm flavor list
        # the idea is to keep only the best flavor of each package
        if ($name eq "globus_core")
        {
            # should we always skip these packages?
        }
        elsif ($type eq "pgm" or $type eq "pgm_static")
        {
            my %pgm = ( flavor => $flavor, type => $type );
            $pgms{$name} = pick_best_flavor(\%pgm, \%{$pgms{$name}});
        }
        else
        {
            add_package($name, $flavor, $type);
        }
    }
}
close(QUERY);

foreach $name (sort keys %pgms)
{
    my $flavor = $pgms{$name}{'flavor'};
    my $type = $pgms{$name}{'type'};

    add_package($name, $flavor, $type);
}


print <<EOT
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE GPTBundleData SYSTEM "gpt_bundle.dtd">
<GPTBundleData Name="notnamed" >
    <BundleInfo >
        <Description >EMPTY</Description>
        <PackagingTool ToolName="GPT" ToolVersion="3.2" />
        <ContactInfo ContactEmail="EMPTY" ContactName="EMPTY" />
        <BundleDocs BundleDocsDesc="EMPTY" BundleDocsURL="EMPTY" />
    </BundleInfo>
    <BundleReleaseInfo >
        <BundleStability Release="EMPTY" />
        <BundleVersion Age="EMPTY" Major="EMPTY" Minor="EMPTY" />
        <VersionLabel >nmi-7.0</VersionLabel>
        <TypeOfBundle ContentsType="gpt" />
    </BundleReleaseInfo>
    <PackageList >
        <IncludedPackages >
EOT
;

foreach $package (@packages)
{
    print "$package\n";
}

print <<EOT
        </IncludedPackages>
        <ExcludedPackages >
        </ExcludedPackages>
        <PackageFlags >
        </PackageFlags>
    </PackageList>
</GPTBundleData>
EOT
;

exit 0;

