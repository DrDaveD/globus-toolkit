#!/usr/bin/make -f
# -*- makefile -*-

DEB_HOST_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)

ifneq (,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
NUMJOBS = $(patsubst parallel=%,%,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
MAKEFLAGS += -j$(NUMJOBS)
endif

include /usr/share/quilt/quilt.make

name = globus-gram-job-manager-fork
_name = globus_gram_job_manager_fork
version = 1.0

INSTALLDIR = $(CURDIR)/debian/tmp
GLOBUSPACKAGEDIR = $(INSTALLDIR)$(_datadir)/globus/packages

_prefix = /usr
_bindir = $(_prefix)/bin
_sbindir = $(_prefix)/sbin
_libdir = $(_prefix)/lib
_datadir = $(_prefix)/share
_mandir = $(_datadir)/man
_docdir = $(_datadir)/doc

DEB_BUILD_ARCH_CPU ?= $(shell dpkg-architecture -qDEB_BUILD_ARCH_CPU)

ifneq (,$(filter $(DEB_HOST_ARCH_CPU), amd64 alpha ia64 s390x ppc64 sparc64))
flavor = gcc64
else
flavor = gcc32
endif

perl_vendorlib = $(shell eval "`perl -V:installvendorlib`"; echo $$installvendorlib)

configure: configure-stamp
	:

configure-stamp: $(QUILT_STAMPFN)
	dh_testdir

	/usr/share/globus/globus-bootstrap.sh

	for f in config.sub config.guess ; do \
	  if [ -e /usr/share/misc/$$f -a ! -e $$f.dist ] ; then \
	    mv $$f $$f.dist ; \
	    cp -f /usr/share/misc/$$f $$f ; \
	  fi ; \
	done

	./configure \
	   --host=$(DEB_HOST_GNU_TYPE) \
	   --build=$(DEB_BUILD_GNU_TYPE) \
	   --prefix=$(_prefix) \
	   --mandir='$${datadir}/man' \
	   --infodir='$${datadir}/info' \
	   --with-flavor=$(flavor) \
	   --enable-doxygen \
	   --docdir='$${datadir}/doc/$(name)' \
	   --disable-static

	touch $@

build: build-stamp
	:

build-stamp: configure-stamp
	dh_testdir

	$(MAKE)

	touch $@

unpatch: cleanup

clean: unpatch
	:

cleanup:
	dh_testdir
	dh_testroot

	if [ -r Makefile ] ; then $(MAKE) distclean ; fi

	for f in config.sub config.guess ; do \
	  if [ -e $$f.dist ] ; then \
	    mv -f $$f.dist $$f ; \
	  fi ; \
	done

	# Remove autogenerated files

	rm -f aclocal.m4
	rm -f configure
	rm -f config.guess
	rm -f config.sub
	rm -f ltmain.sh
	rm -f mkinstalldirs

	rm -f doxygen/Doxyfile*
	rm -f doxygen/Makefile.am
	rm -f pkgdata/Makefile.am
	rm -f pkgdata/*.filelist
	rm -f pkgdata/*.gpt
	rm -f globus_automake*
	rm -rf autom4te.cache

	rm -rf doxygen/doc

	find . -name Makefile.in -exec rm {} ';'

	rm -f build-stamp configure-stamp

	dh_clean debian/*.install

install: build-stamp
	dh_testdir
	dh_testroot
	dh_clean -k

	$(MAKE) install DESTDIR=$(INSTALLDIR)

	# Remove jobmanager-fork from install dir so that it can be
	# added/removed by post scripts
	rm $(INSTALLDIR)/etc/grid-services/jobmanager-fork

	# Remove .pc and .la file
	rm $(INSTALLDIR)/$(_libdir)/pkgconfig/globus-gram-job-manager-fork.pc
	rm $(INSTALLDIR)/$(_libdir)/*.la
	sed -i -e '/globus-gram-job-manager-fork.pc/d' \
	       -e '/\.la$$/d' \
	   $(GLOBUSPACKAGEDIR)/$(_name)/$(flavor)_dev.filelist

	# Generate package filelists. Move seg-related things into the 
	# setup-seg package
	cat $(GLOBUSPACKAGEDIR)/$(_name)/$(flavor)_pgm.filelist \
	    $(GLOBUSPACKAGEDIR)/$(_name)/$(flavor)_rtl.filelist \
	    $(GLOBUSPACKAGEDIR)/$(_name)/noflavor_data.filelist \
	  | grep -v 'libglobus' \
	  | grep -v '^/etc' \
	  | sed s!^!debian/tmp$(_prefix)! > debian/$(name).install

	cat $(GLOBUSPACKAGEDIR)/$(_name)/noflavor_data.filelist \
	  | grep '^/etc' \
	  | grep -v '/available' \
	  | sed s!^!debian/tmp! >> debian/$(name).install

	cat $(GLOBUSPACKAGEDIR)/$(_name)/$(flavor)_rtl.filelist \
	  | grep 'libglobus' \
	  | sed s!^!debian/tmp$(_prefix)! > debian/$(name)-setup-seg.install

	cat $(GLOBUSPACKAGEDIR)/$(_name)/$(flavor)_dev.filelist \
	  | sed s!^!debian/tmp$(_prefix)! >> debian/$(name)-setup-seg.install

	cat $(GLOBUSPACKAGEDIR)/$(_name)/noflavor_data.filelist \
	  | grep -E 'seg|scheduler-event-generator' \
	  | sed s!^!debian/tmp! >> debian/$(name)-setup-seg.install

	cat $(GLOBUSPACKAGEDIR)/$(_name)/noflavor_data.filelist \
	  | grep poll \
	  | sed s!^!debian/tmp! > debian/$(name)-setup-poll.install

	cat $(GLOBUSPACKAGEDIR)/$(_name)/noflavor_doc.filelist \
	  | sed s!^!debian/tmp$(_prefix)! > debian/$(name)-doc.install

binary-arch: install
	dh_testdir
	dh_testroot
	mkdir -p debian/$(name)-doc$(_docdir)
	ln -s $(name) debian/$(name)-doc$(_docdir)/$(name)-doc
	dh_installchangelogs
	dh_installdocs
	dh_install --fail-missing
	dh_installman
	dh_link
	dh_strip
	dh_compress -X .tag
	dh_fixperms
	dh_perl
	dh_makeshlibs
	dh_installdeb
	dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dh_builddeb


binary: binary binary-arch
	:

.PHONY: build clean binary binary-arch binary install configure
