<project default="all" basedir=".">

  <target name="all" depends="gar"/>

  <property file="${user.home}/build.properties"/>
  <property file="build.properties"/>
  <property name="ogsa.root" value="../../../ogsa/impl/java"/>
  <property file="${ogsa.root}/ogsa.properties"/>

  <property name="build.services" value="build-services.xml" />
  <property name="build.packages" value="build-packages.xml" />
  <property name="src.dir" value="src"/>
  <property name="server.deploy" value="server-deploy.wsdd"/>
  <property name="server.config" value="server-config.wsdd"/>
  <property name="client.deploy" value="client-deploy.wsdd"/>
  <property name="client.config" value="client-config.wsdd"/>
  <property name="core.config" value="${ogsa.root}/${server.config}"/>
  <property name="schema.dir" value="schema"/>
  <property name="schema.origin" value="${ogsa.root}/schema"/>
  <property name="throughput.schema.dir" value="testing/throughput"/>
  <property name="mapping.file" value="NStoPkg.properties.throughput"/>
  <property name="etc.dir" value="etc" />
  <property name="lib.dir" value="lib" />
  <property name="build.dir" value="build" />
  <property name="build.lib" value="${build.dir}/lib"/>
  <property name="build.dest" value="${build.dir}/classes"/>
  <property name="build.stubs" value="${build.dir}/stubs"/>
  <property name="jar.name" value="testing-throughput.jar" />
  <property name="gar.name" value="testing-throughput.gar" />
  <property name="test-reports.dir" value="test-reports" />
  <property name="container.initialization" value="eager" />
  <property name="log.dir" value="logs" />
  <property name="service.host" value="localhost" />
  <property name="service.port" value="8080" />
  <property name="factory.type" value="Fork" />
  <property name="factory.url"  value="http://${service.host}:${service.port}/ogsa/services/base/gram/Master${factory.type}ManagedJobFactoryService"/>

  <target name="setenv">
    <!--provide a property for when we must be-->
    <!--ensured of an absolute path for ogsa.root-->
    <basename property="ogsa.root.base" file="${ogsa.root}"/>
    <dirname property="absolute.ogsa.root.parent.path" file="${ogsa.root}"/>
    <property   name="absolute.ogsa.root"
                value="${absolute.ogsa.root.parent.path}/${ogsa.root.base}"/>
    <echo message="ogsa.root: ${absolute.ogsa.root}"/>

    <basename property="cwd.base" file="./"/>
    <dirname property="cwd.parent.path" file="./"/>
    <property   name="cwd"
                value="${cwd.parent.path}/${cwd.base}"/>
    <echo message="cwd: ${cwd}"/>

    <path id="classpath">
        <pathelement location="."/>
        <pathelement location="${java.home}/../lib/tools.jar"/>
        <pathelement location="${build.dest}"/>
        <pathelement location="${ogsa.root}/build/classes"/>
        <pathelement location="${ogsa.root}/lib/ogsa.jar"/>
        <fileset dir="${ogsa.root}/lib">
            <include name="*.jar"/>
            <exclude name="ogsa.jar"/>
            <exclude name="${jar.name}"/>
        </fileset>
        <!--
        <fileset dir="${lib.dir}">
            <include name="tar.jar"/>
        </fileset>
        -->
        <pathelement path="${java.class.path}"/>
    </path>

    <path id="test-classpath">
        <pathelement location="${build.dest}" />
        <path refid="classpath"/>
    </path>

    <mkdir dir="${build.dest}"/>
    <mkdir dir="${build.lib}"/>
    <mkdir dir="${log.dir}"/>

    <available property="config.present" file="${server.deploy}" />

    <available property="stubs.present" file="${build.stubs}" type="dir"/>
  </target>

  <target name="copySchemaDir">
    <copy toDir="${schema.dir}">
        <fileset dir="${schema.origin}" casesensitive="yes">
            <exclude name="fusion/throughput/*"/>
        </fileset>
    </copy>
  </target>

  <!-- =================================================================== -->
  <!-- Generate Service and Binding wsdls from port type wsdls             -->
  <!-- =================================================================== -->
  <target name="generateWSDL" unless="stubs.present" depends="setenv">
    <!--
    <ant target="copySchemaDir"/>

    <ant antfile="${ogsa.root}/${build.services}" target="GWSDL2WSDL">
        <property name="build.schema.dir" value="${throughput.schema.dir}"/>
        <property name="wsdl.root" value="relocatable_throughput_types"/>
    </ant>
    <ant antfile="${ogsa.root}/${build.services}" target="generateBinding">
        <property name="binding.root" value="relocatable_throughput"/>
        <property name="build.schema.dir" value="${throughput.schema.dir}"/>
        <property name="porttype.wsdl"
                 value="relocatable_throughput_types.wsdl"/>
    </ant>
    -->
  </target>

  <!-- =================================================================== -->
  <!-- Generate Stubs from schemas                                         -->
  <!-- =================================================================== -->
  <target name="stubs" unless="stubs.present" depends="generateWSDL">
    <!--
    <ant antfile="${ogsa.root}/${build.services}" target="mergePackageMapping">
        <property name="mapping.file" value="${mapping.file}"/>
    </ant>
  
    <ant antfile="${ogsa.root}/${build.services}" target="generateStubsNS"
         inheritrefs="false">
        <property name="build.schema" value="${schema.dir}"/>
        <property name="schema.file.dir" value="${throughput.schema.dir}"/>
        <property name="schema.file"
                  value="relocatable_throughput_types.wsdl"/>
        <property name="stubs.dest" value="../${build.stubs}"/>
        <reference refid="classpath"/>
    </ant>
    -->
  </target>

  <!-- =================================================================== -->
  <!-- Compiles the source directory                                       -->
  <!-- =================================================================== -->
  <target name="compile" depends="stubs">
    <!--
    <javac  srcdir="${build.stubs}"
            destdir="${build.dest}"
            debug="${debug}"
            deprecation="${deprecation}"
            classpathref="classpath">
    </javac>
    -->

    <javac  srcdir="${src.dir}"
            destdir="${build.dest}"
            debug="${debug}"
            deprecation="${deprecation}"
            classpathref="classpath">
      <exclude name="**/test/*" />
    </javac>
  </target>

  <target name="jar" depends="compile">
    <delete includeEmptyDirs="true" quiet="true">
      <fileset dir="${build.dest}/org">
        <exclude name="**/throughput/**"/>
      </fileset>
    </delete>

    <jar jarfile="${build.lib}/${jar.name}" basedir="${build.dest}" >
      <include name="org/globus/ogsa/base/gram/testing/throughput/**" />
      <include name="*.wsdd" />
    </jar>
  </target>

  <target name="buildTest" depends="compile">
    <javac  srcdir="${src.dir}" destdir="${build.dest}"
            debug="${debug}">
      <classpath>
        <pathelement location="${build.lib}/${jar.name}"/>
        <path refid="test-classpath"/>
      </classpath>
      <include name="**/test/*.java" />
    </javac>
  </target>

  <!-- merge the core server config and local server
       deployment descriptor for use with the test server -->
  <target name="deployServer" depends="setenv">
    <copy file="${core.config}" toFile="${server.config}"/>
    <java classname="org.apache.axis.utils.Admin"
          classpathref="classpath"
          fork="yes"
          failonerror="true">
      <arg value="server"/>
      <arg value="${server.deploy}"/>
    </java>
  </target>

  <target name="test" depends="buildTest,deployServer">
    <mkdir dir="${basedir}/${test-reports.dir}" />
      
    <junit printsummary="yes" haltonfailure="yes" fork="yes">
      <classpath refid="test-classpath" />
      <formatter type="xml" />
      <batchtest todir="${test-reports.dir}">
        <fileset dir="${build.dir}/classes">
          <!-- Convention: each package that's being tested
                has its own PackageTests class collecting all the tests -->
          <include name="**/test/PackageTests.class"/>
        </fileset>
      </batchtest>
      <jvmarg value="-Dignore=ignore" />
    </junit>
  </target>

  <!-- Gar Packaging -->
  <target name="gar" depends="jar">
    <!-- copy .in file and replace tokens -->
    <!--
    <copy file="${server.deploy}.in" toFile="${server.deploy}"/>
    <replace file="${server.deploy}"
            token="GLOBUS_LOCATION"
            value="${absolute.ogsa.root}"/>

    <copy toDir="${build.lib}">
        <fileset dir="${lib.dir}" casesensitive="yes">
            <include name="*.jar"/>
        </fileset>
    </copy>
    -->

    <ant antfile="${ogsa.root}/build-packages.xml" target="makeGar">
      <property name="gar.name" value="${build.lib}/${gar.name}"/>
      <!--
      <property name="garlib.dir" value="${build.lib}"/>
      <property name="garserverdeployment.file" value="${server.deploy}"/>
      <property name="garclientdeployment.file" value="${client.deploy}"/>
      <property name="garschema.origin" value="${schema.dir}/${throughput.schema.dir}"/>
      <property name="garschema.path" value="fusion/throughput"/>
      -->
    </ant>
  </target>

  <!-- =================================================================== -->
  <!-- Cleans everything                                                   -->
  <!-- =================================================================== -->
  <target name="clean">
    <antcall target="cleanBuild"/>
    <delete file="${build.lib}/${jar.name}" quiet="true"/>
    <delete file="${build.lib}/${gar.name}" quiet="true"/>
  </target>

  <target name="cleanBuild">
    <delete dir="${build.dir}" quiet="true"/>
  </target>

  <target name="cleanAll" depends="clean">
    <!--
    <delete file="${server.deploy}" quiet="true"/>

    <delete includeEmptyDirs="true" quiet="true">
      <fileset dir="${schema.dir}">
          <exclude name="testing/throughput/throughput_types.wsdl"/>
      </fileset>
    </delete>
    -->

    <delete includeEmptyDirs="true" quiet="true">
      <fileset dir="./">
        <include name="junit*"/>
      </fileset>
    </delete>

    <delete includeEmptyDirs="true" quiet="true">
      <fileset dir="${test-reports.dir}"/>
    </delete>
  </target>

  <target name="deployGar" depends="gar">
    <copy todir="${ogsa.root}/lib" file="${build.lib}/${gar.name}"/>
    <ant antfile="build-packages.xml" target="deployGar" dir="${ogsa.root}">
      <property name="gar.name" value="lib/${gar.name}"/>       
    </ant>
  </target>

 <!--<target name="startContainer" depends="deployServer">-->
 <target name="startContainer" depends="deployServer">
   <java classname      = "org.globus.ogsa.server.ServiceContainer"
         fork           = "yes"
         classpathref   = "classpath" >
     <arg line="-p ${service.port}" />
     <arg line="-${container.initialization}" />
   </java>
  </target>

  <target name="runTestApp" depends="compile,copySchemaDir">
    <echo message="running Throughput Tester"/>

    <copy tofile="./date.xml" file="./date.xml.in"/>
    <replace file="./date.xml"
             token="GLOBUS_LOCATION"
             value="${absolute.ogsa.root}"/>
    <replace file="./date.xml" token="CWD" value="${cwd}"/>

    <echo message="Host: ${service.host}"/>
    <echo message="Port: ${service.port}"/>
    <echo message="Count: ${load}"/>
    <echo message="Parallelism: ${parallelism}"/>
    <echo message="Duration: ${duration}"/>

    <java classname="org.globus.ogsa.base.gram.testing.throughput.ThroughputTester"
          fork="yes"
          classpathref="classpath" failonerror="true" >

      <jvmarg value="-Xdebug"/>
      <jvmarg value="-Xrunjdwp:transport=dt_socket,address=31420,server=y,suspend=n"/>
      <arg line="--factory ${factory.url}"/>
      <arg line="--file ./date.xml"/>
      <arg line="--load ${load}"/>
      <arg line="--parallelism ${parallelism}"/>
      <arg line="--duration ${duration}"/>
    </java>
  </target>

</project>
