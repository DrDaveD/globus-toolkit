# Makefile.in generated automatically by automake 1.5 from Makefile.am.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@





SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ../..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_HEADER = $(INSTALL_DATA)
transform = @program_transform_name@
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = @host_alias@
host_triplet = @host@
AMTAR = @AMTAR@
AR = @AR@
ARFLAGS = @ARFLAGS@
AS = @AS@
AWK = @AWK@
CC = @CC@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CROSS = @CROSS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXFLAGS = @CXXFLAGS@
DEPDIR = @DEPDIR@
DIRT_BRANCH_ID = @DIRT_BRANCH_ID@
DIRT_TIMESTAMP = @DIRT_TIMESTAMP@
DLLTOOL = @DLLTOOL@
DOXYGEN = @DOXYGEN@
ECHO = @ECHO@
EXEEXT = @EXEEXT@
F77 = @F77@
F77FLAGS = @F77FLAGS@
F90 = @F90@
F90FLAGS = @F90FLAGS@
FILELIST_FILE = @FILELIST_FILE@
GCJ = @GCJ@
GCJFLAGS = @GCJFLAGS@
GLOBUS_FLAVOR_NAME = @GLOBUS_FLAVOR_NAME@
GPT_CFLAGS = @GPT_CFLAGS@
GPT_CONFIG_CFLAGS = @GPT_CONFIG_CFLAGS@
GPT_CONFIG_INCLUDES = @GPT_CONFIG_INCLUDES@
GPT_CONFIG_LIBS = @GPT_CONFIG_LIBS@
GPT_CONFIG_PKG_LIBS = @GPT_CONFIG_PKG_LIBS@
GPT_EXTERNAL_INCLUDES = @GPT_EXTERNAL_INCLUDES@
GPT_EXTERNAL_LIBS = @GPT_EXTERNAL_LIBS@
GPT_INCLUDES = @GPT_INCLUDES@
GPT_LDFLAGS = @GPT_LDFLAGS@
GPT_LIBS = @GPT_LIBS@
GPT_LIB_LINKS = @GPT_LIB_LINKS@
GPT_LINKTYPE = @GPT_LINKTYPE@
GPT_LOCATION = @GPT_LOCATION@
GPT_MAJOR_VERSION = @GPT_MAJOR_VERSION@
GPT_MINOR_VERSION = @GPT_MINOR_VERSION@
GPT_PGM_LINKS = @GPT_PGM_LINKS@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
INSURE = @INSURE@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
MAINT = @MAINT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
RANLIB = @RANLIB@
RC = @RC@
STRIP = @STRIP@
VERSION = @VERSION@
am__include = @am__include@
am__quote = @am__quote@
builddir = @builddir@
cross_compiling = @cross_compiling@
install_sh = @install_sh@

PERL = @PERL@

setupdir = $(GLOBUS_LOCATION)/setup/globus

testdir = $(GLOBUS_LOCATION)/test

scriptsysconfdir = $(GLOBUS_LOCATION)/etc

flavorincludedir = $(GLOBUS_LOCATION)/include/$(GLOBUS_FLAVOR_NAME)

pkgdir = $(GLOBUS_LOCATION)/etc/globus_packages/$(PACKAGE)

aclocaldir = $(GLOBUS_LOCATION)/share/globus_aclocal

amdirdir = $(GLOBUS_LOCATION)/share/globus_amdir

doxygendir = $(GLOBUS_LOCATION)/share/doxygen

docdir = $(GLOBUS_LOCATION)/share/doc

LINK_BAK = orig
AUTOMAKE_OPTIONS = no-dependencies

opensslincludedir = $(GLOBUS_LOCATION)/include/$(GLOBUS_FLAVOR_NAME)/openssl

Sources = \
	a_object.c a_bitstr.c a_utctm.c a_gentm.c \
	a_time.c a_int.c a_octet.c a_null.c a_print.c \
	a_type.c a_set.c a_dup.c a_d2i_fp.c a_i2d_fp.c a_bmp.c \
	a_enum.c a_vis.c a_utf8.c a_sign.c a_digest.c \
	a_verify.c a_mbstr.c a_strex.c x_algor.c x_val.c \
	x_pubkey.c x_sig.c x_req.c x_attrib.c x_name.c \
	x_cinf.c x_x509.c x_x509a.c x_crl.c x_info.c \
	x_spki.c nsseq.c d2i_r_pr.c i2d_r_pr.c d2i_r_pu.c \
	i2d_r_pu.c d2i_s_pr.c i2d_s_pr.c d2i_s_pu.c \
	i2d_s_pu.c d2i_pu.c d2i_pr.c i2d_pu.c i2d_pr.c\
	t_req.c t_x509.c t_x509a.c t_crl.c t_pkey.c t_spki.c \
	t_bitst.c p7_i_s.c p7_signi.c p7_signd.c p7_recip.c \
	p7_enc_c.c p7_evp.c p7_dgst.c p7_s_e.c p7_enc.c \
	p7_lib.c f_int.c f_string.c i2d_dhp.c i2d_dsap.c \
	d2i_dhp.c d2i_dsap.c n_pkey.c f_enum.c a_hdr.c \
	x_pkey.c a_bool.c x_exten.c asn1_par.c asn1_lib.c \
	asn1_err.c a_meth.c a_bytes.c a_strnid.c evp_asn1.c \
	asn_pack.c p5_pbe.c p5_pbev2.c p8_pkey.c


opensslinclude_HEADERS = \
	asn1.h \
	asn1_mac.h


noinst_HEADERS = \
	charmap.h


noinst_LTLIBRARIES = libasn1_$(GLOBUS_FLAVOR_NAME).la

INCLUDES = $(GPT_INCLUDES) -I$(top_srcdir)/include

libasn1___GLOBUS_FLAVOR_NAME__la_SOURCES = $(Sources)

libasn1___GLOBUS_FLAVOR_NAME__la_LIBADD = $(GPT_LIB_LINKS) 

libasn1___GLOBUS_FLAVOR_NAME__la_LDFLAGS = $(GPT_LDFLAGS)
subdir = crypto/asn1
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/crypto/opensslconf.h
CONFIG_CLEAN_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)

libasn1___GLOBUS_FLAVOR_NAME__la_DEPENDENCIES =
am_libasn1___GLOBUS_FLAVOR_NAME__la_OBJECTS = a_object.lo a_bitstr.lo \
	a_utctm.lo a_gentm.lo a_time.lo a_int.lo a_octet.lo a_null.lo \
	a_print.lo a_type.lo a_set.lo a_dup.lo a_d2i_fp.lo a_i2d_fp.lo \
	a_bmp.lo a_enum.lo a_vis.lo a_utf8.lo a_sign.lo a_digest.lo \
	a_verify.lo a_mbstr.lo a_strex.lo x_algor.lo x_val.lo \
	x_pubkey.lo x_sig.lo x_req.lo x_attrib.lo x_name.lo x_cinf.lo \
	x_x509.lo x_x509a.lo x_crl.lo x_info.lo x_spki.lo nsseq.lo \
	d2i_r_pr.lo i2d_r_pr.lo d2i_r_pu.lo i2d_r_pu.lo d2i_s_pr.lo \
	i2d_s_pr.lo d2i_s_pu.lo i2d_s_pu.lo d2i_pu.lo d2i_pr.lo \
	i2d_pu.lo i2d_pr.lo t_req.lo t_x509.lo t_x509a.lo t_crl.lo \
	t_pkey.lo t_spki.lo t_bitst.lo p7_i_s.lo p7_signi.lo \
	p7_signd.lo p7_recip.lo p7_enc_c.lo p7_evp.lo p7_dgst.lo \
	p7_s_e.lo p7_enc.lo p7_lib.lo f_int.lo f_string.lo i2d_dhp.lo \
	i2d_dsap.lo d2i_dhp.lo d2i_dsap.lo n_pkey.lo f_enum.lo a_hdr.lo \
	x_pkey.lo a_bool.lo x_exten.lo asn1_par.lo asn1_lib.lo \
	asn1_err.lo a_meth.lo a_bytes.lo a_strnid.lo evp_asn1.lo \
	asn_pack.lo p5_pbe.lo p5_pbev2.lo p8_pkey.lo
libasn1___GLOBUS_FLAVOR_NAME__la_OBJECTS = \
	$(am_libasn1___GLOBUS_FLAVOR_NAME__la_OBJECTS)

DEFS = @DEFS@
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)/crypto
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
depcomp =
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) \
	$(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(libasn1___GLOBUS_FLAVOR_NAME__la_SOURCES)
HEADERS = $(noinst_HEADERS) $(opensslinclude_HEADERS)

DIST_COMMON = $(noinst_HEADERS) $(opensslinclude_HEADERS) Makefile.am \
	Makefile.in
SOURCES = $(libasn1___GLOBUS_FLAVOR_NAME__la_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am $(top_srcdir)/globus_automake_pre $(top_srcdir)/globus_openssl_pre $(top_srcdir)/globus_openssl_post $(top_srcdir)/globus_automake_post $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  crypto/asn1/Makefile
Makefile: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && \
	  CONFIG_HEADERS= CONFIG_LINKS= \
	  CONFIG_FILES=$(subdir)/$@ $(SHELL) ./config.status

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
libasn1_$(GLOBUS_FLAVOR_NAME).la: $(libasn1___GLOBUS_FLAVOR_NAME__la_OBJECTS) $(libasn1___GLOBUS_FLAVOR_NAME__la_DEPENDENCIES) 
	$(LINK)  $(libasn1___GLOBUS_FLAVOR_NAME__la_LDFLAGS) $(libasn1___GLOBUS_FLAVOR_NAME__la_OBJECTS) $(libasn1___GLOBUS_FLAVOR_NAME__la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

.c.o:
	$(COMPILE) -c `test -f $< || echo '$(srcdir)/'`$<

.c.obj:
	$(COMPILE) -c `cygpath -w $<`

.c.lo:
	$(LTCOMPILE) -c -o $@ `test -f $< || echo '$(srcdir)/'`$<
uninstall-info-am:
install-opensslincludeHEADERS: $(opensslinclude_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(opensslincludedir)
	@list='$(opensslinclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(INSTALL_HEADER) $$d$$p $(DESTDIR)$(opensslincludedir)/$$f"; \
	  $(INSTALL_HEADER) $$d$$p $(DESTDIR)$(opensslincludedir)/$$f; \
	done

uninstall-opensslincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(opensslinclude_HEADERS)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(opensslincludedir)/$$f"; \
	  rm -f $(DESTDIR)$(opensslincludedir)/$$f; \
	done

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique $(LISP)

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || etags $(ETAGS_ARGS) $$tags  $$unique $(LISP)

GTAGS:
	here=`CDPATH=: && cd $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH

DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ../..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@for file in $(DISTFILES); do \
	  if test -f $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    $(mkinstalldirs) "$(distdir)/$$dir"; \
	  fi; \
	  if test -d $$d/$$file; then \
	    cp -pR $$d/$$file $(distdir) \
	    || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(opensslincludedir)

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES) stamp-h stamp-h[0-9]*

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
	mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am: install-opensslincludeHEADERS

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

uninstall-am: uninstall-info-am uninstall-opensslincludeHEADERS

.PHONY: GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstLTLIBRARIES distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am info info-am install \
	install-am install-data install-data-am install-exec \
	install-exec-am install-info install-info-am install-man \
	install-opensslincludeHEADERS install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool tags uninstall \
	uninstall-am uninstall-info-am uninstall-opensslincludeHEADERS


links: $(opensslinclude_HEADERS) $(Test_Sources)
	@if test -n "$(opensslinclude_HEADERS)"; then \
		$(PERL) $(top_builddir)/util/mklink.pl \
			$(top_builddir)/include/openssl/  \
			$(opensslinclude_HEADERS); \
	fi;
	@if test -n "$(Test_Sources)"; then \
		$(PERL) $(top_builddir)/util/mklink.pl \
		$(top_builddir)/test $(Test_Sources); \
	fi;
	@for i in $(SUBDIRS) ""; do \
		if test -n "$$i"; then \
			(cd $$i; $(MAKE) links ); \
		fi; \
	done;
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
link-am:

unlink-am:

filelist-am:

link: link-recursive link-noinstHEADERS link-noinstLTLIBRARIES link-opensslincludeHEADERS 
	:

unlink: unlink-recursive unlink-noinstHEADERS unlink-noinstLTLIBRARIES unlink-opensslincludeHEADERS 
	:

.PHONY: link unlink link-recursive unlink-recursive link-am unlink-am filelist-amlink-noinstHEADERS unlink-noinstHEADERS filelist-noinstHEADERS link-noinstLTLIBRARIES unlink-noinstLTLIBRARIES filelist-noinstLTLIBRARIES link-opensslincludeHEADERS unlink-opensslincludeHEADERS filelist-opensslincludeHEADERS 

filelist: filelist-recursive filelist-noinstHEADERS filelist-noinstLTLIBRARIES filelist-opensslincludeHEADERS 
	:




link-noinstHEADERS: $(noinst_HEADERS)
	@$(NORMAL_INSTALL)
	@$(mkinstalldirs) $(DESTDIR)$(noinstdir)
	@list='$(noinst_HEADERS)'; for p in $$list; do \
	  	mydir=`pwd`; \
		target_p="$(DESTDIR)$(noinstdir)/$$p"; \
		cd $(srcdir); \
		fullsrcdir=`pwd`; \
		cd $$mydir; \
		if test -f "$$p"; then d="$$mydir/"; else d="$$fullsrcdir/"; fi; \
		if test -f $$target_p -a ! -h $$target_p; then \
			echo "mv $$target_p $$target_p.$(LINK_BAK)"; \
			mv $$target_p $$target_p.$(LINK_BAK); \
		fi; \
		if test ! -h $$target_p; then \
			echo "ln -s $$d$$p $$target_p"; \
			ln -s $$d$$p $$target_p; \
		fi; \
	done

unlink-noinstHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(noinst_HEADERS)'; for p in $$list; do \
		target_p="$(DESTDIR)$(noinstdir)/$$p"; \
		if test -h $$target_p; then \
			echo "rm $$target_p"; \
			rm $$target_p; \
		fi; \
		if test -f $$target_p.$(LINK_BAK); then \
			echo "mv $$target_p.$(LINK_BAK) $$target_p"; \
			mv $$target_p.$(LINK_BAK) $$target_p; \
		fi; \
	done

filelist-noinstHEADERS:
	@list='$(noinst_HEADERS)'; for p in $$list; do \
	  echo "$(DESTDIR)$(noinstdir)/$$p" >> $(FILELIST_FILE); \
	done





link-noinstLTLIBRARIES: $(noinst_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@$(mkinstalldirs) $(DESTDIR)$(noinstdir)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	  	mydir=`pwd`; \
	    	target_p=$(DESTDIR)$(noinstdir)/$$p; \
		target_dir="$(DESTDIR)$(noinstdir)/"; \
		root_p=`echo $$p | sed "s,.la,,"`; \
		liblist=`ls $$mydir/.libs/$$root_p.so*`; for so in $$liblist; do \
			if test ! -h $$so; then \
				so_name=`echo $$so | sed "s,$$mydir/.libs/,,"`; \
				so_list="$$so_list $$so_name"; \
			fi; \
		done; \
		if test -f $$target_p -a ! -h $$target_p; then \
			echo "mv $$target_p $$target_p.$(LINK_BAK)"; \
			mv $$target_p $$target_p.$(LINK_BAK); \
			for so in $$so_list; do \
				echo "mv $$target_dir/$$so $$target_dir/$$so.$(LINK_BAK)"; \
				mv $$target_dir/$$so $$target_dir/$$so.$(LINK_BAK); \
			done; \
		fi; \
		if test ! -h $$target_p; then \
			echo "ln -s $$mydir/$$p $$target_p"; \
			ln -s $$mydir/$$p $$target_p; \
			for so in $$so_list; do \
				echo "ln -s $$mydir/.libs/$$so $$target_dir/$$so"; \
				ln -s $$mydir/.libs/$$so $$target_dir/$$so; \
			done; \
		fi; \
	  else :; fi; \
	done

unlink-noinstLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	    	target_p=$(DESTDIR)$(noinstdir)/$$p; \
		target_dir="$(DESTDIR)$(noinstdir)/"; \
		root_p=`echo $$p | sed "s,.la,,"`; \
		so_list=`ls $$target_dir/$$root_p.so*.$(LINK_BAK)`; \
		if test -h $$target_p; then \
			echo "rm $$target_p"; \
			rm $$target_p; \
			for so in $$so_list; do \
				so_name=`echo $$so | sed "s,.$(LINK_BAK),,"`; \
				echo "rm $$so_name"; \
				rm $$so_name; \
			done; \
		fi; \
		if test -f $$target_p.$(LINK_BAK); then \
			echo "mv $$target_p.$(LINK_BAK) $$target_p"; \
			mv $$target_p.$(LINK_BAK) $$target_p; \
			for so in $$so_list; do \
				so_name=`echo $$so | sed "s,.$(LINK_BAK),,"`; \
				mv $$so_name.$(LINK_BAK) $$so_name; \
			done; \
		fi; \
	done

filelist-noinstLTLIBRARIES: $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  $(GPT_LOCATION)/sbin/gpt_get_lib_names $$p $(DESTDIR)$(noinstdir) >> $(FILELIST_FILE); \
	done





link-opensslincludeHEADERS: $(opensslinclude_HEADERS)
	@$(NORMAL_INSTALL)
	@$(mkinstalldirs) $(DESTDIR)$(opensslincludedir)
	@list='$(opensslinclude_HEADERS)'; for p in $$list; do \
	  	mydir=`pwd`; \
		target_p="$(DESTDIR)$(opensslincludedir)/$$p"; \
		cd $(srcdir); \
		fullsrcdir=`pwd`; \
		cd $$mydir; \
		if test -f "$$p"; then d="$$mydir/"; else d="$$fullsrcdir/"; fi; \
		if test -f $$target_p -a ! -h $$target_p; then \
			echo "mv $$target_p $$target_p.$(LINK_BAK)"; \
			mv $$target_p $$target_p.$(LINK_BAK); \
		fi; \
		if test ! -h $$target_p; then \
			echo "ln -s $$d$$p $$target_p"; \
			ln -s $$d$$p $$target_p; \
		fi; \
	done

unlink-opensslincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(opensslinclude_HEADERS)'; for p in $$list; do \
		target_p="$(DESTDIR)$(opensslincludedir)/$$p"; \
		if test -h $$target_p; then \
			echo "rm $$target_p"; \
			rm $$target_p; \
		fi; \
		if test -f $$target_p.$(LINK_BAK); then \
			echo "mv $$target_p.$(LINK_BAK) $$target_p"; \
			mv $$target_p.$(LINK_BAK) $$target_p; \
		fi; \
	done

filelist-opensslincludeHEADERS:
	@list='$(opensslinclude_HEADERS)'; for p in $$list; do \
	  echo "$(DESTDIR)$(opensslincludedir)/$$p" >> $(FILELIST_FILE); \
	done


link-recursive unlink-recursive filelist-recursive:
	@set fnord $(MAKEFLAGS); amf=$$2; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

