# Makefile.in generated automatically by automake 1.5 from Makefile.am.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@





SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_HEADER = $(INSTALL_DATA)
transform = @program_transform_name@
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = @host_alias@
host_triplet = @host@
AMTAR = @AMTAR@
AR = @AR@
ARFLAGS = @ARFLAGS@
AS = @AS@
AWK = @AWK@
CC = @CC@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CROSS = @CROSS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXFLAGS = @CXXFLAGS@
DEPDIR = @DEPDIR@
DIRT_BRANCH_ID = @DIRT_BRANCH_ID@
DIRT_TIMESTAMP = @DIRT_TIMESTAMP@
DLLTOOL = @DLLTOOL@
DOXYGEN = @DOXYGEN@
ECHO = @ECHO@
EXEEXT = @EXEEXT@
F77 = @F77@
F77FLAGS = @F77FLAGS@
F90 = @F90@
F90FLAGS = @F90FLAGS@
FILELIST_FILE = @FILELIST_FILE@
GCJ = @GCJ@
GCJFLAGS = @GCJFLAGS@
GLOBUS_FLAVOR_NAME = @GLOBUS_FLAVOR_NAME@
GPT_CFLAGS = @GPT_CFLAGS@
GPT_CONFIG_CFLAGS = @GPT_CONFIG_CFLAGS@
GPT_CONFIG_INCLUDES = @GPT_CONFIG_INCLUDES@
GPT_CONFIG_LIBS = @GPT_CONFIG_LIBS@
GPT_CONFIG_PKG_LIBS = @GPT_CONFIG_PKG_LIBS@
GPT_EXTERNAL_INCLUDES = @GPT_EXTERNAL_INCLUDES@
GPT_EXTERNAL_LIBS = @GPT_EXTERNAL_LIBS@
GPT_INCLUDES = @GPT_INCLUDES@
GPT_LDFLAGS = @GPT_LDFLAGS@
GPT_LIBS = @GPT_LIBS@
GPT_LIB_LINKS = @GPT_LIB_LINKS@
GPT_LINKTYPE = @GPT_LINKTYPE@
GPT_LOCATION = @GPT_LOCATION@
GPT_MAJOR_VERSION = @GPT_MAJOR_VERSION@
GPT_MINOR_VERSION = @GPT_MINOR_VERSION@
GPT_PGM_LINKS = @GPT_PGM_LINKS@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
INSURE = @INSURE@
LD = @LD@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
MAINT = @MAINT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
RANLIB = @RANLIB@
RC = @RC@
STRIP = @STRIP@
VERSION = @VERSION@
am__include = @am__include@
am__quote = @am__quote@
builddir = @builddir@
cross_compiling = @cross_compiling@
install_sh = @install_sh@

LDFLAGS = $(GPT_LDFLAGS)

PERL = @PERL@

setupdir = $(GLOBUS_LOCATION)/setup/globus

testdir = $(GLOBUS_LOCATION)/test

scriptsysconfdir = $(GLOBUS_LOCATION)/etc

flavorincludedir = $(GLOBUS_LOCATION)/include/$(GLOBUS_FLAVOR_NAME)

pkgdir = $(GLOBUS_LOCATION)/etc/globus_packages/$(PACKAGE)

aclocaldir = $(GLOBUS_LOCATION)/share/globus_aclocal

amdirdir = $(GLOBUS_LOCATION)/share/globus_amdir

doxygendir = $(GLOBUS_LOCATION)/share/doxygen

docdir = $(GLOBUS_LOCATION)/share/doc

LINK_BAK = orig
AUTOMAKE_OPTIONS = no-dependencies

opensslincludedir = $(GLOBUS_LOCATION)/include/$(GLOBUS_FLAVOR_NAME)/openssl

Test_Sources = \
	pkcs7-1.pem \
	pkcs7.pem \
	testcrl.pem \
	testp7.pem \
	testreq2.pem \
	testrsa.pem \
	testsid.pem \
	testx509.pem \
	v3-cert1.pem \
	v3-cert2.pem \
	CAss.cnf \
	CAssdh.cnf \
	CAssdsa.cnf \
	CAssrsa.cnf \
	Sssdsa.cnf \
	Sssrsa.cnf \
	Uss.cnf \
	test.cnf \
	tx509 \
	trsa \
	tcrl \
	tsid \
	treq \
	testreq2.pem \
	tpkcs7 \
	tpkcs7d \
	bctest \
	testenc \
	testgen \
	testss \
	testssl \
	testca


Test_Programs = \
	exptest \
	bntest \
	ideatest \
	shatest \
	sha1test \
	mdc2test \
	rmdtest \
	md2test \
	md4test \
	md5test \
	hmactest \
	rc2test \
	rc4test \
	rc5test \
	bftest \
	casttest \
	destest \
	randtest \
	dhtest \
	dsatest \
	ssltest \
	rsa_test


Test_Targets = \
	test_des \
	test_idea \
	test_sha \
	test_md4 \
	test_md5 \
	test_hmac \
	test_md2 \
	test_mdc2 \
	test_rmd \
	test_rc2 \
	test_rc4 \
	test_rc5 \
	test_bf \
	test_cast \
	test_rand \
	test_bn \
	test_enc \
	test_x509 \
	test_rsa \
	test_crl \
	test_sid \
	test_gen \
	test_req \
	test_pkcs7 \
	test_verify \
	test_dh \
	test_dsa \
	test_ss \
	test_ca \
	test_ssl


INCLUDES = $(GPT_INCLUDES) -I$(top_srcdir)/include

LDADD = $(top_srcdir)/ssl/libssl_$(GLOBUS_FLAVOR_NAME).la $(top_srcdir)/crypto/libcrypto_$(GLOBUS_FLAVOR_NAME).la $(GPT_LIB_LINKS)

noinst_PROGRAMS = $(Test_Programs)

nodist_exptest_SOURCES = exptest.c
nodist_bntest_SOURCES = bntest.c
nodist_ideatest_SOURCES = ideatest.c
nodist_shatest_SOURCES = shatest.c
nodist_sha1test_SOURCES = sha1test.c
nodist_mdc2test_SOURCES = mdc2test.c
nodist_rmdtest_SOURCES = rmdtest.c
nodist_md2test_SOURCES = md2test.c
nodist_md4test_SOURCES = md4test.c
nodist_md5test_SOURCES = md5test.c
nodist_hmactest_SOURCES = hmactest.c
nodist_rc2test_SOURCES = rc2test.c
nodist_rc4test_SOURCES = rc4test.c
nodist_rc5test_SOURCES = rc5test.c
nodist_bftest_SOURCES = bftest.c
nodist_casttest_SOURCES = casttest.c
nodist_destest_SOURCES = destest.c
nodist_randtest_SOURCES = randtest.c
nodist_dhtest_SOURCES = dhtest.c
nodist_dsatest_SOURCES = dsatest.c
nodist_ssltest_SOURCES = ssltest.c
nodist_rsa_test_SOURCES = rsa_test.c

EXTRA_DIST = $(Test_Sources)
subdir = test
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/crypto/opensslconf.h
CONFIG_CLEAN_FILES =
noinst_PROGRAMS = exptest$(EXEEXT) bntest$(EXEEXT) ideatest$(EXEEXT) \
	shatest$(EXEEXT) sha1test$(EXEEXT) mdc2test$(EXEEXT) \
	rmdtest$(EXEEXT) md2test$(EXEEXT) md4test$(EXEEXT) \
	md5test$(EXEEXT) hmactest$(EXEEXT) rc2test$(EXEEXT) \
	rc4test$(EXEEXT) rc5test$(EXEEXT) bftest$(EXEEXT) \
	casttest$(EXEEXT) destest$(EXEEXT) randtest$(EXEEXT) \
	dhtest$(EXEEXT) dsatest$(EXEEXT) ssltest$(EXEEXT) \
	rsa_test$(EXEEXT)
PROGRAMS = $(noinst_PROGRAMS)

nodist_bftest_OBJECTS = bftest.$(OBJEXT)
bftest_OBJECTS = $(nodist_bftest_OBJECTS)
bftest_LDADD = $(LDADD)
bftest_DEPENDENCIES = $(top_srcdir)/ssl/libssl_$(GLOBUS_FLAVOR_NAME).la \
	$(top_srcdir)/crypto/libcrypto_$(GLOBUS_FLAVOR_NAME).la
bftest_LDFLAGS =
nodist_bntest_OBJECTS = bntest.$(OBJEXT)
bntest_OBJECTS = $(nodist_bntest_OBJECTS)
bntest_LDADD = $(LDADD)
bntest_DEPENDENCIES = $(top_srcdir)/ssl/libssl_$(GLOBUS_FLAVOR_NAME).la \
	$(top_srcdir)/crypto/libcrypto_$(GLOBUS_FLAVOR_NAME).la
bntest_LDFLAGS =
nodist_casttest_OBJECTS = casttest.$(OBJEXT)
casttest_OBJECTS = $(nodist_casttest_OBJECTS)
casttest_LDADD = $(LDADD)
casttest_DEPENDENCIES = \
	$(top_srcdir)/ssl/libssl_$(GLOBUS_FLAVOR_NAME).la \
	$(top_srcdir)/crypto/libcrypto_$(GLOBUS_FLAVOR_NAME).la
casttest_LDFLAGS =
nodist_destest_OBJECTS = destest.$(OBJEXT)
destest_OBJECTS = $(nodist_destest_OBJECTS)
destest_LDADD = $(LDADD)
destest_DEPENDENCIES = $(top_srcdir)/ssl/libssl_$(GLOBUS_FLAVOR_NAME).la \
	$(top_srcdir)/crypto/libcrypto_$(GLOBUS_FLAVOR_NAME).la
destest_LDFLAGS =
nodist_dhtest_OBJECTS = dhtest.$(OBJEXT)
dhtest_OBJECTS = $(nodist_dhtest_OBJECTS)
dhtest_LDADD = $(LDADD)
dhtest_DEPENDENCIES = $(top_srcdir)/ssl/libssl_$(GLOBUS_FLAVOR_NAME).la \
	$(top_srcdir)/crypto/libcrypto_$(GLOBUS_FLAVOR_NAME).la
dhtest_LDFLAGS =
nodist_dsatest_OBJECTS = dsatest.$(OBJEXT)
dsatest_OBJECTS = $(nodist_dsatest_OBJECTS)
dsatest_LDADD = $(LDADD)
dsatest_DEPENDENCIES = $(top_srcdir)/ssl/libssl_$(GLOBUS_FLAVOR_NAME).la \
	$(top_srcdir)/crypto/libcrypto_$(GLOBUS_FLAVOR_NAME).la
dsatest_LDFLAGS =
nodist_exptest_OBJECTS = exptest.$(OBJEXT)
exptest_OBJECTS = $(nodist_exptest_OBJECTS)
exptest_LDADD = $(LDADD)
exptest_DEPENDENCIES = $(top_srcdir)/ssl/libssl_$(GLOBUS_FLAVOR_NAME).la \
	$(top_srcdir)/crypto/libcrypto_$(GLOBUS_FLAVOR_NAME).la
exptest_LDFLAGS =
nodist_hmactest_OBJECTS = hmactest.$(OBJEXT)
hmactest_OBJECTS = $(nodist_hmactest_OBJECTS)
hmactest_LDADD = $(LDADD)
hmactest_DEPENDENCIES = \
	$(top_srcdir)/ssl/libssl_$(GLOBUS_FLAVOR_NAME).la \
	$(top_srcdir)/crypto/libcrypto_$(GLOBUS_FLAVOR_NAME).la
hmactest_LDFLAGS =
nodist_ideatest_OBJECTS = ideatest.$(OBJEXT)
ideatest_OBJECTS = $(nodist_ideatest_OBJECTS)
ideatest_LDADD = $(LDADD)
ideatest_DEPENDENCIES = \
	$(top_srcdir)/ssl/libssl_$(GLOBUS_FLAVOR_NAME).la \
	$(top_srcdir)/crypto/libcrypto_$(GLOBUS_FLAVOR_NAME).la
ideatest_LDFLAGS =
nodist_md2test_OBJECTS = md2test.$(OBJEXT)
md2test_OBJECTS = $(nodist_md2test_OBJECTS)
md2test_LDADD = $(LDADD)
md2test_DEPENDENCIES = $(top_srcdir)/ssl/libssl_$(GLOBUS_FLAVOR_NAME).la \
	$(top_srcdir)/crypto/libcrypto_$(GLOBUS_FLAVOR_NAME).la
md2test_LDFLAGS =
nodist_md4test_OBJECTS = md4test.$(OBJEXT)
md4test_OBJECTS = $(nodist_md4test_OBJECTS)
md4test_LDADD = $(LDADD)
md4test_DEPENDENCIES = $(top_srcdir)/ssl/libssl_$(GLOBUS_FLAVOR_NAME).la \
	$(top_srcdir)/crypto/libcrypto_$(GLOBUS_FLAVOR_NAME).la
md4test_LDFLAGS =
nodist_md5test_OBJECTS = md5test.$(OBJEXT)
md5test_OBJECTS = $(nodist_md5test_OBJECTS)
md5test_LDADD = $(LDADD)
md5test_DEPENDENCIES = $(top_srcdir)/ssl/libssl_$(GLOBUS_FLAVOR_NAME).la \
	$(top_srcdir)/crypto/libcrypto_$(GLOBUS_FLAVOR_NAME).la
md5test_LDFLAGS =
nodist_mdc2test_OBJECTS = mdc2test.$(OBJEXT)
mdc2test_OBJECTS = $(nodist_mdc2test_OBJECTS)
mdc2test_LDADD = $(LDADD)
mdc2test_DEPENDENCIES = \
	$(top_srcdir)/ssl/libssl_$(GLOBUS_FLAVOR_NAME).la \
	$(top_srcdir)/crypto/libcrypto_$(GLOBUS_FLAVOR_NAME).la
mdc2test_LDFLAGS =
nodist_randtest_OBJECTS = randtest.$(OBJEXT)
randtest_OBJECTS = $(nodist_randtest_OBJECTS)
randtest_LDADD = $(LDADD)
randtest_DEPENDENCIES = \
	$(top_srcdir)/ssl/libssl_$(GLOBUS_FLAVOR_NAME).la \
	$(top_srcdir)/crypto/libcrypto_$(GLOBUS_FLAVOR_NAME).la
randtest_LDFLAGS =
nodist_rc2test_OBJECTS = rc2test.$(OBJEXT)
rc2test_OBJECTS = $(nodist_rc2test_OBJECTS)
rc2test_LDADD = $(LDADD)
rc2test_DEPENDENCIES = $(top_srcdir)/ssl/libssl_$(GLOBUS_FLAVOR_NAME).la \
	$(top_srcdir)/crypto/libcrypto_$(GLOBUS_FLAVOR_NAME).la
rc2test_LDFLAGS =
nodist_rc4test_OBJECTS = rc4test.$(OBJEXT)
rc4test_OBJECTS = $(nodist_rc4test_OBJECTS)
rc4test_LDADD = $(LDADD)
rc4test_DEPENDENCIES = $(top_srcdir)/ssl/libssl_$(GLOBUS_FLAVOR_NAME).la \
	$(top_srcdir)/crypto/libcrypto_$(GLOBUS_FLAVOR_NAME).la
rc4test_LDFLAGS =
nodist_rc5test_OBJECTS = rc5test.$(OBJEXT)
rc5test_OBJECTS = $(nodist_rc5test_OBJECTS)
rc5test_LDADD = $(LDADD)
rc5test_DEPENDENCIES = $(top_srcdir)/ssl/libssl_$(GLOBUS_FLAVOR_NAME).la \
	$(top_srcdir)/crypto/libcrypto_$(GLOBUS_FLAVOR_NAME).la
rc5test_LDFLAGS =
nodist_rmdtest_OBJECTS = rmdtest.$(OBJEXT)
rmdtest_OBJECTS = $(nodist_rmdtest_OBJECTS)
rmdtest_LDADD = $(LDADD)
rmdtest_DEPENDENCIES = $(top_srcdir)/ssl/libssl_$(GLOBUS_FLAVOR_NAME).la \
	$(top_srcdir)/crypto/libcrypto_$(GLOBUS_FLAVOR_NAME).la
rmdtest_LDFLAGS =
nodist_rsa_test_OBJECTS = rsa_test.$(OBJEXT)
rsa_test_OBJECTS = $(nodist_rsa_test_OBJECTS)
rsa_test_LDADD = $(LDADD)
rsa_test_DEPENDENCIES = \
	$(top_srcdir)/ssl/libssl_$(GLOBUS_FLAVOR_NAME).la \
	$(top_srcdir)/crypto/libcrypto_$(GLOBUS_FLAVOR_NAME).la
rsa_test_LDFLAGS =
nodist_sha1test_OBJECTS = sha1test.$(OBJEXT)
sha1test_OBJECTS = $(nodist_sha1test_OBJECTS)
sha1test_LDADD = $(LDADD)
sha1test_DEPENDENCIES = \
	$(top_srcdir)/ssl/libssl_$(GLOBUS_FLAVOR_NAME).la \
	$(top_srcdir)/crypto/libcrypto_$(GLOBUS_FLAVOR_NAME).la
sha1test_LDFLAGS =
nodist_shatest_OBJECTS = shatest.$(OBJEXT)
shatest_OBJECTS = $(nodist_shatest_OBJECTS)
shatest_LDADD = $(LDADD)
shatest_DEPENDENCIES = $(top_srcdir)/ssl/libssl_$(GLOBUS_FLAVOR_NAME).la \
	$(top_srcdir)/crypto/libcrypto_$(GLOBUS_FLAVOR_NAME).la
shatest_LDFLAGS =
nodist_ssltest_OBJECTS = ssltest.$(OBJEXT)
ssltest_OBJECTS = $(nodist_ssltest_OBJECTS)
ssltest_LDADD = $(LDADD)
ssltest_DEPENDENCIES = $(top_srcdir)/ssl/libssl_$(GLOBUS_FLAVOR_NAME).la \
	$(top_srcdir)/crypto/libcrypto_$(GLOBUS_FLAVOR_NAME).la
ssltest_LDFLAGS =

DEFS = @DEFS@
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)/crypto
CPPFLAGS = @CPPFLAGS@
LIBS = @LIBS@
depcomp =
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) \
	$(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES =
DIST_COMMON = Makefile.am Makefile.in
SOURCES = $(nodist_bftest_SOURCES) $(nodist_bntest_SOURCES) $(nodist_casttest_SOURCES) $(nodist_destest_SOURCES) $(nodist_dhtest_SOURCES) $(nodist_dsatest_SOURCES) $(nodist_exptest_SOURCES) $(nodist_hmactest_SOURCES) $(nodist_ideatest_SOURCES) $(nodist_md2test_SOURCES) $(nodist_md4test_SOURCES) $(nodist_md5test_SOURCES) $(nodist_mdc2test_SOURCES) $(nodist_randtest_SOURCES) $(nodist_rc2test_SOURCES) $(nodist_rc4test_SOURCES) $(nodist_rc5test_SOURCES) $(nodist_rmdtest_SOURCES) $(nodist_rsa_test_SOURCES) $(nodist_sha1test_SOURCES) $(nodist_shatest_SOURCES) $(nodist_ssltest_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am $(top_srcdir)/globus_automake_pre $(top_srcdir)/globus_openssl_pre $(top_srcdir)/globus_automake_post $(top_srcdir)/globus_openssl_post $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  test/Makefile
Makefile: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && \
	  CONFIG_HEADERS= CONFIG_LINKS= \
	  CONFIG_FILES=$(subdir)/$@ $(SHELL) ./config.status

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)
bftest$(EXEEXT): $(bftest_OBJECTS) $(bftest_DEPENDENCIES) 
	@rm -f bftest$(EXEEXT)
	$(LINK) $(bftest_LDFLAGS) $(bftest_OBJECTS) $(bftest_LDADD) $(LIBS)
bntest$(EXEEXT): $(bntest_OBJECTS) $(bntest_DEPENDENCIES) 
	@rm -f bntest$(EXEEXT)
	$(LINK) $(bntest_LDFLAGS) $(bntest_OBJECTS) $(bntest_LDADD) $(LIBS)
casttest$(EXEEXT): $(casttest_OBJECTS) $(casttest_DEPENDENCIES) 
	@rm -f casttest$(EXEEXT)
	$(LINK) $(casttest_LDFLAGS) $(casttest_OBJECTS) $(casttest_LDADD) $(LIBS)
destest$(EXEEXT): $(destest_OBJECTS) $(destest_DEPENDENCIES) 
	@rm -f destest$(EXEEXT)
	$(LINK) $(destest_LDFLAGS) $(destest_OBJECTS) $(destest_LDADD) $(LIBS)
dhtest$(EXEEXT): $(dhtest_OBJECTS) $(dhtest_DEPENDENCIES) 
	@rm -f dhtest$(EXEEXT)
	$(LINK) $(dhtest_LDFLAGS) $(dhtest_OBJECTS) $(dhtest_LDADD) $(LIBS)
dsatest$(EXEEXT): $(dsatest_OBJECTS) $(dsatest_DEPENDENCIES) 
	@rm -f dsatest$(EXEEXT)
	$(LINK) $(dsatest_LDFLAGS) $(dsatest_OBJECTS) $(dsatest_LDADD) $(LIBS)
exptest$(EXEEXT): $(exptest_OBJECTS) $(exptest_DEPENDENCIES) 
	@rm -f exptest$(EXEEXT)
	$(LINK) $(exptest_LDFLAGS) $(exptest_OBJECTS) $(exptest_LDADD) $(LIBS)
hmactest$(EXEEXT): $(hmactest_OBJECTS) $(hmactest_DEPENDENCIES) 
	@rm -f hmactest$(EXEEXT)
	$(LINK) $(hmactest_LDFLAGS) $(hmactest_OBJECTS) $(hmactest_LDADD) $(LIBS)
ideatest$(EXEEXT): $(ideatest_OBJECTS) $(ideatest_DEPENDENCIES) 
	@rm -f ideatest$(EXEEXT)
	$(LINK) $(ideatest_LDFLAGS) $(ideatest_OBJECTS) $(ideatest_LDADD) $(LIBS)
md2test$(EXEEXT): $(md2test_OBJECTS) $(md2test_DEPENDENCIES) 
	@rm -f md2test$(EXEEXT)
	$(LINK) $(md2test_LDFLAGS) $(md2test_OBJECTS) $(md2test_LDADD) $(LIBS)
md4test$(EXEEXT): $(md4test_OBJECTS) $(md4test_DEPENDENCIES) 
	@rm -f md4test$(EXEEXT)
	$(LINK) $(md4test_LDFLAGS) $(md4test_OBJECTS) $(md4test_LDADD) $(LIBS)
md5test$(EXEEXT): $(md5test_OBJECTS) $(md5test_DEPENDENCIES) 
	@rm -f md5test$(EXEEXT)
	$(LINK) $(md5test_LDFLAGS) $(md5test_OBJECTS) $(md5test_LDADD) $(LIBS)
mdc2test$(EXEEXT): $(mdc2test_OBJECTS) $(mdc2test_DEPENDENCIES) 
	@rm -f mdc2test$(EXEEXT)
	$(LINK) $(mdc2test_LDFLAGS) $(mdc2test_OBJECTS) $(mdc2test_LDADD) $(LIBS)
randtest$(EXEEXT): $(randtest_OBJECTS) $(randtest_DEPENDENCIES) 
	@rm -f randtest$(EXEEXT)
	$(LINK) $(randtest_LDFLAGS) $(randtest_OBJECTS) $(randtest_LDADD) $(LIBS)
rc2test$(EXEEXT): $(rc2test_OBJECTS) $(rc2test_DEPENDENCIES) 
	@rm -f rc2test$(EXEEXT)
	$(LINK) $(rc2test_LDFLAGS) $(rc2test_OBJECTS) $(rc2test_LDADD) $(LIBS)
rc4test$(EXEEXT): $(rc4test_OBJECTS) $(rc4test_DEPENDENCIES) 
	@rm -f rc4test$(EXEEXT)
	$(LINK) $(rc4test_LDFLAGS) $(rc4test_OBJECTS) $(rc4test_LDADD) $(LIBS)
rc5test$(EXEEXT): $(rc5test_OBJECTS) $(rc5test_DEPENDENCIES) 
	@rm -f rc5test$(EXEEXT)
	$(LINK) $(rc5test_LDFLAGS) $(rc5test_OBJECTS) $(rc5test_LDADD) $(LIBS)
rmdtest$(EXEEXT): $(rmdtest_OBJECTS) $(rmdtest_DEPENDENCIES) 
	@rm -f rmdtest$(EXEEXT)
	$(LINK) $(rmdtest_LDFLAGS) $(rmdtest_OBJECTS) $(rmdtest_LDADD) $(LIBS)
rsa_test$(EXEEXT): $(rsa_test_OBJECTS) $(rsa_test_DEPENDENCIES) 
	@rm -f rsa_test$(EXEEXT)
	$(LINK) $(rsa_test_LDFLAGS) $(rsa_test_OBJECTS) $(rsa_test_LDADD) $(LIBS)
sha1test$(EXEEXT): $(sha1test_OBJECTS) $(sha1test_DEPENDENCIES) 
	@rm -f sha1test$(EXEEXT)
	$(LINK) $(sha1test_LDFLAGS) $(sha1test_OBJECTS) $(sha1test_LDADD) $(LIBS)
shatest$(EXEEXT): $(shatest_OBJECTS) $(shatest_DEPENDENCIES) 
	@rm -f shatest$(EXEEXT)
	$(LINK) $(shatest_LDFLAGS) $(shatest_OBJECTS) $(shatest_LDADD) $(LIBS)
ssltest$(EXEEXT): $(ssltest_OBJECTS) $(ssltest_DEPENDENCIES) 
	@rm -f ssltest$(EXEEXT)
	$(LINK) $(ssltest_LDFLAGS) $(ssltest_OBJECTS) $(ssltest_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

.c.o:
	$(COMPILE) -c `test -f $< || echo '$(srcdir)/'`$<

.c.obj:
	$(COMPILE) -c `cygpath -w $<`

.c.lo:
	$(LTCOMPILE) -c -o $@ `test -f $< || echo '$(srcdir)/'`$<
uninstall-info-am:

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique $(LISP)

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || etags $(ETAGS_ARGS) $$tags  $$unique $(LISP)

GTAGS:
	here=`CDPATH=: && cd $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH

DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@for file in $(DISTFILES); do \
	  if test -f $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    $(mkinstalldirs) "$(distdir)/$$dir"; \
	  fi; \
	  if test -d $$d/$$file; then \
	    cp -pR $$d/$$file $(distdir) \
	    || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)

installdirs:

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES) stamp-h stamp-h[0-9]*

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-local clean-noinstPROGRAMS \
	mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

uninstall-am: uninstall-info-am

.PHONY: GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-local clean-noinstPROGRAMS distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am info info-am install \
	install-am install-data install-data-am install-exec \
	install-exec-am install-info install-info-am install-man \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	tags uninstall uninstall-am uninstall-info-am


tests: $(Test_Programs) $(Test_Targets)

test_des:
	./destest

test_idea:
	./ideatest

test_sha:
	./shatest
	./sha1test

test_mdc2:
	./mdc2test

test_md5:
	./md5test

test_md4:
	./md4test

test_hmac:
	./hmactest

test_md2:
	./md2test

test_rmd:
	./rmdtest

test_bf:
	./bftest

test_cast:
	./casttest

test_rc2:
	./rc2test

test_rc4:
	./rc4test

test_rc5:
	./rc5test

test_rand:
	./randtest

test_enc:
	@sh ./testenc

test_x509:
	echo test normal x509v1 certificate
	sh ./tx509 2>/dev/null
	echo test first x509v3 certificate
	sh ./tx509 v3-cert1.pem 2>/dev/null
	echo test second x509v3 certificate
	sh ./tx509 v3-cert2.pem 2>/dev/null

test_rsa:
	@sh ./trsa 2>/dev/null
	./rsa_test

test_crl:
	@sh ./tcrl 2>/dev/null

test_sid:
	@sh ./tsid 2>/dev/null

test_req:
	@sh ./treq 2>/dev/null
	@sh ./treq testreq2.pem 2>/dev/null

test_pkcs7:
	@sh ./tpkcs7 2>/dev/null
	@sh ./tpkcs7d 2>/dev/null

test_bn:
	@echo starting big number library test, could take a while...
	@./bntest >tmp.bntest
	@echo quit >>tmp.bntest
	@echo "running bc"
	@<tmp.bntest sh -c "`sh ./bctest ignore`" | $(PERL) -e '$$i=0; while (<STDIN>) {if (/^test (.*)/) {print STDERR "\nverify $$1";} elsif (!/^0$$/) {die "\nFailed! bc: $$_";} else {print STDERR "."; $$i++;}} print STDERR "\n$$i tests passed\n"'
	@echo 'test a^b%c implementations'
	./exptest

test_verify:
	@echo "The following command should have some OK's and some failures"
	@echo "There are definitly a few expired certificates"
	../apps/openssl verify -CApath ../certs ../certs/*.pem

test_dh:
	@echo "Generate a set of DH parameters"
	./dhtest

test_dsa:
	@echo "Generate a set of DSA parameters"
	./dsatest
	./dsatest -app2_1

test_gen:
	@echo "Generate and verify a certificate request"
	@sh ./testgen

test_ss keyU.ss certU.ss certCA.ss: testss
	@echo "Generate and certify a test certificate"
	@sh ./testss

test_ssl: keyU.ss certU.ss certCA.ss
	@echo "test SSL protocol"
	@sh ./testssl keyU.ss certU.ss certCA.ss

test_ca:
	@if ../apps/openssl no-rsa; then \
	  echo "skipping CA.sh test -- requires RSA"; \
	else \
	  echo "Generate and certify a test certificate via the 'ca' program"; \
	  sh ./testca; \
	fi

clean-local:
	rm -f .rnd tmp.bntest tmp.bctest *.old *.bak fluff *.ss log

links: $(opensslinclude_HEADERS) $(Test_Sources)
	@if test -n "$(opensslinclude_HEADERS)"; then \
		$(PERL) $(top_builddir)/util/mklink.pl \
			$(top_builddir)/include/openssl/  \
			$(opensslinclude_HEADERS); \
	fi;
	@if test -n "$(Test_Sources)"; then \
		$(PERL) $(top_builddir)/util/mklink.pl \
		$(top_builddir)/test $(Test_Sources); \
	fi;
	@for i in $(SUBDIRS) ""; do \
		if test -n "$$i"; then \
			(cd $$i; $(MAKE) links ); \
		fi; \
	done;
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
link-am:

unlink-am:

filelist-am:

link: link-recursive link-noinstPROGRAMS 
	:

unlink: unlink-recursive unlink-noinstPROGRAMS 
	:

.PHONY: link unlink link-recursive unlink-recursive link-am unlink-am filelist-amlink-noinstPROGRAMS unlink-noinstPROGRAMS filelist-noinstPROGRAMS 

filelist: filelist-recursive filelist-noinstPROGRAMS 
	:




link-noinstPROGRAMS: $(noinst_PROGRAMS)
	@$(NORMAL_INSTALL)
	@$(mkinstalldirs) $(DESTDIR)$(noinstdir)
	@list='$(noinst_PROGRAMS)'; for p in $$list; do \
	  if test -f $$p; then \
	  	mydir=`pwd`; \
		target_p=$(DESTDIR)$(noinstdir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
		if test -f $$target_p -a ! -h $$target_p; then \
			echo "mv $$target_p $$target_p.$(LINK_BAK)"; \
			mv $$target_p $$target_p.$(LINK_BAK); \
		fi; \
		if test ! -h $$target_p; then \
			echo "ln -s $$mydir/$$p $$target_p"; \
			ln -s $$mydir/$$p $$target_p; \
		fi; \
	  else :; fi; \
	done

unlink-noinstPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(noinst_PROGRAMS)'; for p in $$list; do \
		target_p=$(DESTDIR)$(noinstdir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
		if test -h $$target_p; then \
			echo "rm $$target_p"; \
			rm $$target_p; \
		fi; \
		if test -f $$target_p.$(LINK_BAK); then \
			echo "mv $$target_p.$(LINK_BAK) $$target_p"; \
			mv $$target_p.$(LINK_BAK) $$target_p; \
		fi; \
	done

filelist-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; for p in $$list; do \
	  echo "$(DESTDIR)$(noinstdir)/$$p" >> $(FILELIST_FILE); \
	done


link-recursive unlink-recursive filelist-recursive:
	@set fnord $(MAKEFLAGS); amf=$$2; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

