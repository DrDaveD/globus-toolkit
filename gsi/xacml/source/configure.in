AC_INIT(Makefile.am)
AM_INIT_AUTOMAKE(xacml, 1.0)
AM_PROG_LIBTOOL
AC_PROG_CXX

AC_ARG_WITH(gsoap,
    [  --with-gsoap=DIR        Search for gsoap in DIR],
    [GSOAP_DIR=$withval])

AC_MSG_CHECKING([for XACML service schemas])

AC_PATH_PROG([WSDL2H], [wsdl2h], no, [$GSOAP_DIR/bin:$PATH])
if test "$WSDL2H" = "no"; then
    AC_MSG_ERROR([Unable to locate gSOAP])
fi
AC_PATH_PROG([SOAPCPP2], [soapcpp2], no, [$GSOAP_DIR/bin:$PATH])
if test "$SOAPCPP2" = "no"; then
    AC_MSG_ERROR([Unable to locate gSOAP])
fi

GSOAP_DIR="[`echo $SOAPCPP2 | sed -e s',/[^/]*/[^/]*$,,'`]"
CPPFLAGS="$CPPFLAGS -I$GSOAP_DIR/include"
LDFLAGS="$CPPFLAGS -L$GSOAP_DIR/lib"
AC_CHECK_HEADER(stdsoap2.h, true, AC_MSG_ERROR(unable to find stdsoap2.h))

AC_PATH_PROG(DOXYGEN, doxygen, true)

SAVE_CPPFLAGS="$CPPFLAGS"
SAVE_CLFAGS="$CFLAGS"
SAVE_LDFLAGS="$LDFLAGS"
SAVE_LIBS="$LIBS"

CPPFLAGS="$CPPFLAGS $GSSAPI_CPPFLAGS"
CFLAGS="$CFLAGS $GSSAPI_CFLAGS"
LDFLAGS="$LDFLAGS $GSSAPI_LDFLAGS"
LIBS="$LIBS $GSSAPI_LIBS"

AC_CHECK_HEADER(gssapi.h, ENABLE_GSSAPI=1)

if test "$ENABLE_GSSAPI" = 1; then
    AC_MSG_CHECKING([gssapi libraries])
    AC_TRY_LINK([#include "gssapi.h"], [gss_release_buffer((void*)0,(void*)0);],
                    [ENABLE_GSSAPI=1], [ENABLE_GSSAPI=0]);
    if test "$ENABLE_GSSAPI" = 1; then
        AC_MSG_RESULT([ok])
    else
        AC_MSG_RESULT([not found])
    fi
fi

AM_CONDITIONAL(ENABLE_GSSAPI, test x$ENABLE_GSSAPI = x1)

CPPFLAGS="$SAVE_CPPFLAGS"
CLFAGS="$SAVE_CFLAGS"
LDFLAGS="$SAVE_LDFLAGS"
LIBS="$SAVE_LIBS"

AC_SUBST(GSOAP_DIR)
AC_SUBST(WSDL2H)
AC_SUBST(SOAPCPP2)
AC_SUBST(GLOBUS_LOCATION)
AC_SUBST(GSSAPI_CFLAGS)
AC_SUBST(GSSAPI_CPPFLAGS)
AC_SUBST(GSSAPI_LDFLAGS)
AC_SUBST(GSSAPI_LIBS)

AC_OUTPUT(Makefile examples/Makefile schema/Makefile)
