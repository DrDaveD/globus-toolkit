Task: Modify ncftp to do GSIFTP protocol

Changes Still Needed:
	- Data channel protection must be added
		* User option to set [done]
		* new commands to the open data connection sequence
		* handle wrapping/unwrapping of data
	- Need to send ALLO before PUT, for dealing with HPSS
	- Fix makefiles to build with non-gsiftp names when --enable-gssapi
	  is not used at configure time.
	- Make the GSI modifications work with GSSAPI on Windows NT

Changes Completed:
	- authentication state machines needs added states to handle
	  AUTH/ADAT exchanges [done]
	- Receive of control messages needs to unwrap them [done]
	- ncftp does not send SITE RBUFSZ when STOR or APPE is used.
	  (modify to use this if RBUFSZ is available, but SBUFSZ is not) [done]
	- ncftp needs to check for SITE BUFSIZE and send that to the
	  server when available [done]
	- Send of control messages needs to wrap them [done]
	  *This isn't the most beautiful code, but it works*

Code Issues:
	- There is an implicit assumption that commands and responses
	  are short, and that line truncation is OK. 
	  	* The GetResponse assumes that the SReadline and
		  GetTelnetString functions return a complete line.
		  SReadline stops reading it's input once the buffer size is
		  reached, and GetTelnetString truncates the input, but
		  returns a full line. 

		  Modify GetTelnetString to behave identically to SReadline.
		  Modify GetResponse to deal with an incomplete response
		  line from the code. (Done but not tested).

		  The code needs to concatenate partial lines (needed for
		  ADAT and wrapped messages.

		  The code needs to unwrap individual lines, and then
		  separate each \r\n-delimited line (where the \r\n divisions
		  may be placed arbitrarily within the wrapped buffers)
		  into a separate line in the LineList structure.

		* The SendCommand function uses vnsprintf to assemble the
		  control message, with a fixed buffer size. If messages are
		  longer than this size, they are truncated before being
		  sent. This must be fixed to handle long commands.
