This is the current list of things outstanding for the 4.0 release.
** denotes must happen before feature freeze
XX denotes unlikely that this will be in 4.0

protocol:
-- correct FEAT response?
-- reply codes - verify.
-- verify that dsi api is correct wrt to errors
-- error out usefully to server and client when cred problem in gssapi driver

striping:
-- verify eofc handling, should move out of remote into data.c
-- verify _get_read_range()
-- consolidate some restart ranges instead of sending one from every stripe

ipc:
XX connect backwards!! 0
XX ipc local mode doesn't work (besides no way to initiate it)

logging:
-- instrument code
-- verify output format
-- specify log format by configuration
-- syslog module for globus_logging

general:
-- instrument any remaining configuration options and limits

threads:
-- quick test that stuff works -- not really looking for 100% right now
-- walk through locks

cleanup:
-- verify test suite
-- clean majority of memory leaks

**Usability issues:
DOC DOC DOC
be chatty while parsing config
ipc security options - doc well, make sure it works the way we expect
need some spec compliant support for partitioned layout
    current stripeblocksize impl is basically spec compliant RR


------------------------Private message from Roland------------------------
assert( i wanna know when this happens)
data:3585
control:766
control_events.c:249
--------------------------------end message--------------------------------
-----------------------------------------------------------------------
known bugs:
-- not calling _finish() in data.c for some request funcs that fail before
    the dsi call. 
-- reply_msg has a mixed means of neing freed in globus_l_gsc_finished_op()
    or by the caller.  look at lines server_control.c:930, and then
    995.
-- force_close after transfer_complete when an error is passed to 
   finished_transfer().
-- error out of option parsing properly
-- ipc failure while the handle is owned by the dsi destroys the handle. should
    not free until user calls release or close, and just error out of any other
    calls that attempt to use the handle.
-- commands belong in server-lib

-- need to make sure ints in various places are change to size_t if they
    need to be, and on passing size_t's over ipc need to do some smarts
    to treat it as 4 or 8 bytes... possible probs if sizes differ on front
    and back?  This is specifically a problem with tcp_bs, we treat it as an
    int on the server side, but server-lib gives it to us as a size_t (as
    it probably should), which is a different size on most 64 bit platforms.
    
