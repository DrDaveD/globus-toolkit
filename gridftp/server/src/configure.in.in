dnl

AC_REVISION($Revision$)

AC_INIT(Makefile.am)

GLOBUS_INIT

AM_PROG_LIBTOOL

dnl config header goes here

dnl Initialize the automake rules the last argument
AM_INIT_AUTOMAKE($GPT_NAME, $GPT_VERSION)

dnl Build hooks for all 'builtin' modules
echo -n "Checking for builtin modules... "
GLOBUS_LOCATION=$GLOBUS_LOCATION
MODULE_DIRS=.
MODULE_LIBS=
BUILTIN_EXTENSIONS_DEC=
BUILTIN_EXTENSIONS_DEF=
modules=`ls modules | grep -v CVS | grep -v Makefile`
delim=
if test "X$modules" != "X" ; then
  echo
  for module in $modules ; do
    if test -f modules/$module/Makefile.in ; then
      MODULE_DIRS="$MODULE_DIRS $module"
      lib_name="modules/${module}/libglobus_gridftp_server_${module}.la"
      MODULE_LIBS="$MODULE_LIBS $lib_name"
      
      BUILTIN_EXTENSIONS_DEC="${BUILTIN_EXTENSIONS_DEC}GlobusExtensionDeclareModule(globus_gridftp_server_${module}); "
      BUILTIN_EXTENSIONS_DEF="$BUILTIN_EXTENSIONS_DEF {\"globus_gridftp_server_${module}\", GlobusExtensionMyModule(globus_gridftp_server_${module})},"
      echo "Including module: $module"
    fi
  done
else
  echo "none found"
fi

if test "X$GRIDMAP" != "X" ; then
    GRIDMAP_CONF="-df $GRIDMAP"
else
    if test -f $HOME/.gridmap ; then
        GRIDMAP_CONF="-df $HOME/.gridmap"
    else
        if test -f /etc/grid-security/grid-mapfile ; then
            GRIDMAP_CONF="-df /etc/grid-security/grid-mapfile"
        else
            GRIDMAP_CONF=""
        fi
    fi
fi

AC_SUBST(GRIDMAP_CONF)
AC_SUBST(GLOBUS_LOCATION)
AC_SUBST(MODULE_DIRS)
AC_SUBST(MODULE_LIBS)
AC_SUBST(BUILTIN_EXTENSIONS_DEC)
AC_SUBST(BUILTIN_EXTENSIONS_DEF)

CFLAGS="$CFLAGS -DGLOBUS_BUILTIN"
 
LAC_DOXYGEN("../")

AM_CONFIG_HEADER(config.h)
AC_CHECK_FUNCS(fgetpwent)
AC_C_BIGENDIAN

AC_CANONICAL_BUILD
LDFLHACK=
case "$build" in
  *-*-irix*)
    LDFLHACK="-ignore_unresolved"
    echo "Adding -ignore_unresolved to LDFLAGS for IRIX."
  ;;
esac
AC_SUBST(LDFLHACK)

AC_PATH_PROGS(PERL, perl perl5)

AC_MSG_CHECKING(Toolkit version)
GLOBUS_TOOLKIT_ID=unknown
if test -x ${GLOBUS_LOCATION}/bin/globus-version ; then
    GLOBUS_TOOLKIT_ID="`${GLOBUS_LOCATION:-/usr}/bin/globus-version -full`"
fi
AC_MSG_RESULT($GLOBUS_TOOLKIT_ID)
AC_SUBST(GLOBUS_TOOLKIT_ID)

conf_sbindir="`eval_path $sbindir`"
conf_bindir="`eval_path $bindir`"
conf_libdir="`eval_path $libdir`"
conf_sysconfdir="`eval_path $sysconfdir`"
conf_localstatedir="`eval_path $localstatedir`"
AC_SUBST(conf_sbindir)
AC_SUBST(conf_bindir)
AC_SUBST(conf_libdir) 
AC_SUBST(conf_sysconfdir) 
AC_SUBST(conf_localstatedir)

AC_ARG_WITH(default-runlevels,
        AC_HELP_STRING(
            [--with-default-runlevels=RUNLEVELS],
            [Choose which System-V style runlevels the gatekeeper service will
             be started on.]),
            [ case "$withval" in
                yes)
                  AC_MSG_WARN([Invalid parameter to --with-default-runlevels])
                  ;;
                no)
                  CHKCONFIG_DEFAULT="-"
                  DEFAULT_START=""
                  DEFAULT_STOP=""
                  ;;
                *)
                  CHKCONFIG_DEFAULT="$withval"
                  for r in 0 1 2 3 4 5 6; do
                      if expr $withval : ".*$r.*" > /dev/null; then
                          DEFAULT_START="${DEFAULT_START:+$DEFAULT_START }$r"
                      else
                          DEFAULT_STOP="${DEFAULT_STOP:+$DEFAULT_STOP }$r"
                      fi
                  done
              esac],
            [
                CHKCONFIG_DEFAULT="-"
                DEFAULT_START=""
                DEFAULT_STOP=""
            ])

if test "$DEFAULT_START" = ""; then
    DEFAULT_START_LINE="#"
else
    DEFAULT_START_LINE="# Default-Start:     $DEFAULT_START"
fi
if test "$DEFAULT_STOP" = ""; then
    DEFAULT_STOP_LINE="#"
else
    DEFAULT_STOP_LINE="# Default-Stop:      $DEFAULT_STOP"
fi

AC_SUBST(CHKCONFIG_DEFAULT)
AC_SUBST(DEFAULT_START_LINE)
AC_SUBST(DEFAULT_STOP_LINE)

xml_catalog_path="notset"
AC_ARG_WITH(
    xml-catalog,
    AC_HELP_STRING(
        [--with-xml-catalog=PATH],
        [Look for XML catalog in PATH]),
    [xml_catalog_path="$withval"],
    [xml_catalog_path="notset"])

AC_PATH_PROG(XSLTPROC, "xsltproc")
AC_PATH_PROG(XMLLINT, "xmllint")

if test "x$xml_catalog_path" != x"notset"; then
    if test ! -f "$xml_catalog_path"; then
        AC_MSG_ERROR([Invalid XML catalog path])
    else
        XML_CATALOG_PATH=$xml_catalog_path
        AC_SUBST(XML_CATALOG_PATH)
    fi
fi

AM_CONDITIONAL(BUILD_MANPAGES, [
                test "$xml_catalog_path" != "notset" && \
                test "$XSLTPROC" != "no" && \
                test "$XMLLINT" != "no"])

GLOBUS_FINALIZE

AC_OUTPUT(
    globus-gridftp-password
    globus-gridftp-server-enable-sshftp
    Makefile
    embed/Makefile
    pkgdata/Makefile
    pkgdata/pkg_data_src.gpt
    modules/Makefile
    init/Makefile
    init/globus-gridftp-server
    init/globus-gridftp-sshftp
    gridftp.conf.default
    gridftp.xinetd.default
    gridftp.gfork.default
    doxygen/Makefile
    doxygen/Doxyfile
    doxygen/Doxyfile-internal
    version.h
    extensions.h
dnl NOTE: do not put anything below this line!
