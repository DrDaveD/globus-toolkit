#! /bin/sh

### BEGIN INIT INFO
# Provides:          globus-gatekeeper
# Required-Start:    $network $time
# Required-Stop:     $network
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Globus Gatekeeper
# Description:       The Globus Gatekeeper service authenticates network
#                    connections using an SSL-based protocol and then
#                    starts service instances on the remote user's behalf.
#                    It is part of the Globus Toolkit(tm)
### END INIT INFO

@GLOBUS_SCRIPT_INITIALIZER@

. ${libexecdir}/globus-script-initializer

GLOBUS_GATEKEEPER_CONFIG=${GLOBUS_GATEKEEPER_CONFIG:-@GATEKEEPER_CONFIGDIR@/@GATEKEEPER_CONFIGFILE@}
test -f "${GLOBUS_GATEKEEPER_CONFIG}" && . "${GLOBUS_GATEKEEPER_CONFIG}"
test -f ${sbindir}/globus-gatekeeper || exit 0

. /lib/lsb/init-functions

GLOBUS_GATEKEEPER_PIDFILE="${GLOBUS_GATEKEEPER_PIDFILE:-${localstatedir}/run/globus-gatekeeper.pid}"
GLOBUS_GATEKEEPER_PORT="${GLOBUS_GATEKEEPER_PORT:-2119}"

test -f "${GLOBUS_GATEKEEPER_CERT_FILE:-${sysconfdir}/grid-security/hostcert.pem}" || exit 0
test -f "${GLOBUS_GATEKEEPER_KEY_FILE:-${sysconfdir}/grid-security/hostkey.pem}" || exit 0

case "$1" in
    start)

        if [ "${GLOBUS_GATEKEEPER_KERBEROS_ENABLED:-false}" = "true" ]; then
            kflag="-k"
        else
            kflag=""
        fi

        start_daemon -p "${GLOBUS_GATEKEEPER_PIDFILE}" \
            ${sbindir}/globus-gatekeeper \
            -pidfile ${GLOBUS_GATEKEEPER_PIDFILE} \
            ${GLOBUS_GATEKEEPER_PORT:+-p ${GLOBUS_GATEKEEPER_PORT}} \
            ${GLOBUS_GATEKEEPER_LOG:+-l "${GLOBUS_GATEKEEPER_LOG}"} \
            ${GLOBUS_GATEKEEPER_GRID_SERVICES:+-grid_services "${GLOBUS_GATEKEEPER_GRID_SERVICES}"} \
            ${GLOBUS_GATEKEEPER_GRIDMAP:+-gridmap "${GLOBUS_GATEKEEPER_GRIDMAP}"} \
            ${GLOBUS_GATEKEEPER_CERT_DIR:+-x509_cert_dir "${GLOBUS_GATEKEEPER_CERT_DIR}"} \
            ${GLOBUS_GATEKEEPER_CERT_FILE:+-x509_user_cert "${GLOBUS_GATEKEEPER_CERT_FILE}"} \
            ${GLOBUS_GATEKEEPER_KEY_FILE:+-x509_user_key "${GLOBUS_GATEKEEPER_KEY_FILE}"} \
            $kflag \
            ${GLOBUS_GATEKEEPER_KMAP:+-globuskmap "${GLOBUS_GATEKEEPER_KMAP}"}
        rc=$?
        if [ $rc = 0 ]; then
            log_success_msg "Started globus-gatekeeper"
        else
            log_failure_msg "Failed to start globus-gatekeeper"
        fi
        exit $rc
        ;;
    stop)
        killproc -p "${GLOBUS_GATEKEEPER_PIDFILE:-${localstatedir}/run/globus-gatekeeper.pid}" \
            ${sbindir}/globus-gatekeeper
        rc=$?
        if [ $rc = 0 ]; then
            log_success_msg "Stopped globus-gatekeeper"
        else
            log_failure_msg "Failed to stop globus-gatekeeper"
        fi
            ;;
    restart)
        $0 stop
        $0 start
        ;;
    force-reload)
        $0 restart
        ;;
esac
