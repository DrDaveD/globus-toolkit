#! /bin/sh -f
###################################################################
# globus-script-<scheduler>-queue script
# --------------------------------------
#
# The purpose of this script is to communicate the queue values and
# current queue entries (jobs) to the globus-gram-scheduler function.
# This function will then compile the information into C structures to 
# present a uniform interface to more easily facilitate multi queue
# analysis.
#
# Note: This script is copied and used as the poe-queue script
#
# queue information is output in the form:
#     GRAM_SCRIPT_Q:<gram queue parameter> <local scheduler value>
#
# queue entry information (i.e. jobs) are output in the form:
#     GRAM_SCRIPT_QE:<gram queue entry parameter> <local scheduler job value>
#      
#
###################################################################

. ${GLOBUS_LOCATION}/libexec/globus-script-initializer

globus_source ${libexecdir}/globus-gram-protocol-constants.sh
globus_source ${libexecdir}/globus-sh-tools.sh
globus_source ${libexecdir}/globus-gram-job-manager-tools.sh

# programs used in this script located by autoconf:
uptime=${GLOBUS_SH_UPTIME-uptime}
grep=${GLOBUS_SH_GREP-grep}                                 
awk=${GLOBUS_SH_AWK-awk}
wc=${GLOBUS_SH_WC-wc}
########


############################################################
#
# GetNodeCount
#
#
# Get free and total nodes from the system.
#
#

GetNodeCount () {

   # defaults...
   FREENODES=0
   TOTALNODES=0

   ${GLOBUS_LOCATION}/libexec/grid-info-cpufast-uptime -hostobj | \
   {
      while read attr val
      do
          case "$attr" in
              Mds-Cpu-Smp-size:)
                  TOTALNODES="$val"
              ;;


              Mds-Cpu-Free-1min:)
                  smp_free_1minX100="$val"
                  # truncate fixed-precision fraction to whole integer
                  FREENODES=`expr $smp_free_1min / 100`
              ;;
          esac
      done
      echo "${TOTALNODES} ${FREENODES}"
   }

} #########################


################## main section #######################
# Ouput queue values where possible

echo "GRAM_SCRIPT_Q:StartQueue"
NODE_COUNTS=`GetNodeCount`
TOTALNODES=`echo "$NODE_COUNTS" | ${awk} '{ print $1 }'`
FREENODES=`echo "$NODE_COUNTS" | ${awk} '{ print $2 }'`
echo "GRAM_SCRIPT_Q:totalNodes ${TOTALNODES}"
echo "GRAM_SCRIPT_Q:freeNodes ${FREENODES}"
echo "GRAM_SCRIPT_Q:maxtime 0"
echo "GRAM_SCRIPT_Q:maxCPUtime 0"
echo "GRAM_SCRIPT_Q:maxCount 0"
echo "GRAM_SCRIPT_Q:maxRunningJobs 0"
echo "GRAM_SCRIPT_Q:maxJobsInQueue 0"
echo "GRAM_SCRIPT_Q:maxTotalMemory 0"
echo "GRAM_SCRIPT_Q:maxSingleMemory 0"
echo "GRAM_SCRIPT_Q:whenActive 0"
echo "GRAM_SCRIPT_Q:status 0"
echo "GRAM_SCRIPT_Q:dispatchType Immediate"
#echo "GRAM_SCRIPT_Q:priority 0"
#echo "GRAM_SCRIPT_Q:jobWait 0"
#echo "GRAM_SCRIPT_Q:schedulerSpecific"
echo "GRAM_SCRIPT_Q:EndQueue"

#
# For the fork script we do not output the job entries.
# They are obtained from the jobmanager status files.
#
