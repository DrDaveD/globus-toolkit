AC_REVISION($Revision$)
AC_INIT(pbs.in)

# checking for the GLOBUS_LOCATION

if test "x$GLOBUS_LOCATION" = "x"; then
    echo "ERROR Please specify GLOBUS_LOCATION" >&2
    exit 1
fi

AC_PATH_PROG(MPIEXEC, mpiexec, no)
if test "$MPIEXEC" = "no" ; then
    AC_MSG_WARN("Cannot locate mpiexec")
fi

AC_PATH_PROG(MPIRUN, mpirun, no)
if test "$MPIRUN" = "no" ; then
    AC_MSG_WARN("Cannot locate mpirun")
fi
AC_PATH_PROG(QDEL, qdel, no)
if test "$QDEL" = "no" ; then
    AC_MSG_ERROR("Cannot locate qdel")
fi
AC_PATH_PROG(QSTAT, qstat, no)
if test "$QSTAT" = "no" ; then
    AC_MSG_ERROR("Cannot locate qstat")
fi
AC_PATH_PROG(QSUB, qsub, no)
if test "$QSUB" = "no" ; then
    AC_MSG_ERROR("Cannot locate qsub")
fi

AC_ARG_WITH(cluster,
   [ --without-cluster],
   [
     if test "$withval" != "no"; then
	 CLUSTER=1
     else
	 CLUSTER=0
     fi
   ],
   CLUSTER=1)

AC_SUBST(CLUSTER)

AC_ARG_WITH(cpu-per-node,
   [ --with-cpu-per-node=COUNT],
   [ if test $withval -lt 0 2>/dev/null; then
       AC_MSG_ERROR(Invalid cpu-per-node count)
     fi
     CPU_PER_NODE=$withval
   ],
   CPU_PER_NODE=1)

AC_SUBST(CPU_PER_NODE)
       
if test "$CLUSTER" = 1; then
    AC_ARG_WITH(remote-shell,
                [ --with-remote-shell=ssh|rsh|default],
		[ case "$withval" in
		    default)
                      AC_PATH_PROGS(REMOTE_SHELL, ssh rsh, no)
		      ;;
		    *)
		      AC_PATH_PROG(REMOTE_SHELL, $withval, no)
		      ;;
		  esac

		  if test $REMOTE_SHELL = no; then
		      AC_MSG_ERROR("Cannot locate remote shell")
		  fi
		])
fi

# SoftEnv extension
AC_PATH_PROG(SOFT_MSC, soft-msc, no)
if test "$SOFT_MSC" = "no" ; then
    AC_MSG_ERROR("Cannot locate soft-msc")
fi

prefix='$(GLOBUS_LOCATION)'
exec_prefix='$(GLOBUS_LOCATION)'
libexecdir=${prefix}/libexec

AC_OUTPUT(
  $GLOBUS_LOCATION/lib/perl/Globus/GRAM/JobManager/pbs.pm:pbs.in
)
