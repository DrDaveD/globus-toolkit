Attribute: directory
Description: "Specifies the path of the directory the jobmanager will use as
              the default directory for the requested job."
Default: $(HOME)

Attribute: executable
Description: "The name of the executable file to run on the remote machine.
	      If the value is a GASS URL, the file is transferred to the
	      remote gass cache before executing the job and removed after
	      the job has terminated."
Required: yes

Attribute: arguments
Description: "The command line arguments for the executable. Use quotes, if a
	      space is required in a single argument."

Attribute: stdin
Description: "The name of the file to be used as standard input for the
	      executable on the remote machine. If the value is a GASS URL,
	      the file is transferred to the remote gass cache before
	      executing the job and removed after the job has terminated."
Default: "/dev/null"

Attribute: stdout
Description: "The name of the remote file to store the standard output from
	      the job. If the value is a GASS URL, the standard output from
	      the job is transferred dynamically during the execution of the
	      job."
Default: "/dev/null"

Attribute: stderr
Description: "The name of the remote file to store the standard error from
	      the job. If the value is a GASS URL, the standard error from
	      the job is transferred dynamically during the execution of the
	      job."
Default: "/dev/null"

Attribute: count
Description: "The number of executions of the executable."
Default: 1

Attribute: environment
Description: "The environment variables that will be defined for the
	      executable in addition to default set that is given to the job
	      by the jobmanager."
Default: "(X509_CERT_DIR $(HOME))
          (GLOBUS_GRAM_JOB_CONTACT $(GLOBUS_GRAM_JOB_CONTACT))
	  (GLOBUS_LOCATION $(GLOBUS_LOCATION))"

Attribute: maxtime
Description: "The maximum walltime or cputime for a single execution of the
	      executable. Walltime or cputime is selected by the GRAM
	      scheduler being interfaced. The units is in minutes. The value
	      will go through an atoi() conversion in order to get an
	      integer."

Attribute: maxwalltime
Description: "Explicitly set the maximum walltime for a single execution of
	      the executable. The units is in minutes. The value will go
	      through an atoi() conversion in order to get an integer. If the
	      GRAM scheduler cannot set walltime, then an error will be
	      returned. "

Attribute: maxcputime
Description: "Explicitly set the maximum cputime for a single execution of
	      the executable. The units is in minutes. The value will go
	      through an atoi() conversion in order to get an integer. If the
	      GRAM scheduler cannot set cputime, then an error will be
	      returned."

Attribute: jobtype
Description: "This specifies how the jobmanager should start the job.
              Possible values are single (even if the count > 1, only start
	      1 process or thread), multiple (start count processes or threads),
	      mpi (use the appropriate method (e.g. mpirun) to start a program
	      compiled with a vendor-provided MPI library. Program is started
	      with count nodes), and condor (starts condor jobs in the
	      \"condor\" universe.)"
Values: single multiple mpi condor
Default: multiple

Attribute: grammyjob
Description: "This specifies how the gram myjob interface will behave in the 
              started processes. Possible values are independent (Even if the
	      count > 1, only start 1 process or thread), or collective
	      (gram_myjob_count() will return count for each of the processes.
	      gram_myjob_rank() will return a unique value between 0 and
	      count-1 for each of the processes.)"
Values: collective independent
Default: collective

Attribute: queue
Description: "Target the job to a queue (class) name as defined by the
	      scheduler at the defined (remote) resource."

Attribute: project
Description: "Target the job to be allocated to a project account as defined
	      by the scheduler at the defined (remote) resource."

Attribute: hostcount
Description: "Only applies to clusters of SMP computers, such as newer IBM SP
	      systems. Defines the number of nodes (\"pizza boxes\") to
	      distribute the "count" processes across."

Attribute: dryrun
Description: "If dryrun = yes then the jobmanager will not submit the job for
	      execution and will return success."
Default: no
Values: yes no

Attribute: minmemory
Description: "Specify the minumum amount of memory required for this job.
	      Units are in Megabytes."

Attribute: maxmemory
Description: "Specify the maximum amount of memory required for this job.
	      Units are in Megabytes."

Attribute: savestate
Description: "Causes the jobmanager to save it's job state information to a
	      persistent file on disk. If the job manager exits or is
	      suspended, the client can later start up a new job manager   
	      which can continue monitoring the job."

Attribute: twophase
Description: "Use a two-phase commit for job submission and completion. The
	      job manager will respond to the initial job request with a
	      WAITING_FOR_COMMIT error. It will then wait for a signal from
	      the client before doing the actual job submission. The integer
	      supplied is the number of seconds the job manager should wait
	      before timing out. If the job manager times out before
	      receiving the commit signal, or if a client issues a cancel
	      signal, the job manager will clean up the job's files and exit,
	      sending a callback with the job status as
	      GLOBUS_GRAM_PROTOCOL_JOB_STATE_FAILED.
	      After the job manager sends a DONE or FAILED callback, it will
	      wait for a commit signal from the client. If it receives one,
	      it cleans up and exits as usual. If it times out and save_state
	      was enabled, it will leave all of the job's files in place and
	      exit (assuming the client is down and will attempt a job
	      restart later). The timeoutvalue can be extended via a signal.
	      When one of the following errors occurs, the job manager does
	      not delete the job state file when it exits:
	      + GLOBUS_GRAM_PROTOCOL_ERROR_COMMIT_TIMED_OUT
	      + GLOBUS_GRAM_PROTOCOL_ERROR_TTL_EXPIRED
	      + GLOBUS_GRAM_PROTOCOL_ERROR_JM_STOPPED
	      + GLOBUS_GRAM_PROTOCOL_ERROR_USER_PROXY_EXPIRED
	      In these cases, it can not be restarted, so the job manager  
	      will not wait for the commit signal after sending the FAILED
	      callback"

Attribute: remoteiourl
Description: "Writes the given value (a URL base string) to a file, and adds
	      the path to that file to the environment throught the
	      GLOBUS_REMOTE_IO_URL environment variable. If this is specified
	      as part of a job restart RSL, the job manager will update the
	      file's contents. This is intended for jobs that want to access
	      files via GASS, but the URL of the GASS server has changed due
	      to a GASS server restart."

Attribute: scratchdir
Description: "Specifies the location to create a scratch subdirectory in.
	      A SCRATCH_DIRECTORY RSL substitution will be filled with the
	      name of the directory which is created."

Attribute: rslsubstitution
Description: "Specifies a list of values which can be substituted into other
              rsl attributes' values through the $(SUBSTITUTION) mechanism."
