#! /bin/sh -f
#
#
# Extract the 'ST' (status) column from the qstat output
# for our specific jobID ($grami_job_id).
#
# The ST field can contain one of the following strings:
#
# string  stands for			Globus context meaning
# ------------------------------------------------------------
#  A    ARRIVING        PENDING
#  C    CHECKPOINTED    FAILED  ?
#  D    DEPARTING       PENDING ? (should be suspended if we had that)
#  E    EXITING         DONE
#  H    HELD            PENDING ? (should be suspended if we had that)
#  Q    QUEUED          PENDING
#  P    PREEMPTED       PENDING ? (should be suspended if we had that)
#  R    ROUTING         PENDING ? (should be suspended if we had that)
#  R??  RUNNING         ACTIVE
#  S    SUSPENDED       PENDING ? (should be suspended if we had that)
#  U    UNKNOWN         ????? PENDING
#  W    WAITING         PENDING
#

. ${GLOBUS_LOCATION}/libexec/globus-script-initializer

globus_source ${libexecdir}/globus-gram-protocol-constants.sh
globus_source ${libexecdir}/globus-sh-tools.sh
globus_source ${libexecdir}/globus-gram-job-manager-tools.sh

#######################
# Site specfic values:
#######################
qstat=${GLOBUS_GRAM_JOB_MANAGER_QSTAT-qstat}
grep=${GLOBUS_SH_GREP-grep}
awk=${GLOBUS_SH_AWK-awk}
echo=${GLOBUS_SH_ECHO-echo}
#######################

arg_file=$1
# check for the argument file if it does not exist
# then return with an error immediately.
if [ ! -f $arg_file ] ; then
   echo GRAM_SCRIPT_ERROR:$GLOBUS_GRAM_CLIENT_ERROR_BAD_SCRIPT_ARG_FILE
   exit 1
fi
 
# use the argument file to define all the arguments.
# Of special interest here is the grami_job_id parameter.
. $arg_file
 
# if a logfile has been passed in then assume debug mode.
if [ $grami_logfile = "/dev/null" ] ; then
    DEBUG_ECHO=:
else
    DEBUG_ECHO=echo
fi
 
$DEBUG_ECHO "JM_SCRIPT: in nqe_poll" >> $grami_logfile

# the status returned will looks something like R03.
# The first letter is the major status.
# The number or sometimes letters is the minor status
#
# NOTE: the major status R has 2 potential values Running or Routing
#       Routing never has a minor status.
short_grami_job_id=`echo ${grami_job_id}  | ${awk} -F\. '{printf("%s.%s", $1,$2)}'`
status=`${qstat} -a ${grami_job_id}  | \
        ${grep} "${short_grami_job_id}" | \
        ${awk} '{print $NF}'`

# the job disapears from the input pipe before it reapears in the queue
# let give the scheduler some time ... 5 secondes...  and only once  !
if [  "${status}x" = "x" ]; then
   sleep 5
   status=`${qstat} -a ${grami_job_id}  | \
        ${grep} "${short_grami_job_id}" | \
        ${awk} '{print $NF}'`
fi
 
major_status=`echo ${status} | ${awk} '{print substr($1, 1, 1)}'`
minor_status=`echo ${status} | ${awk} '{print substr($1, 2, 2)}'`

if [ ${major_status}"x" = "x" ]; then
  gram_job_state=$GLOBUS_GRAM_CLIENT_JOB_STATE_DONE
else
  if [ 0 -lt `echo " E " | $grep -c " ${major_status} "` ]; then
    gram_job_state=$GLOBUS_GRAM_CLIENT_JOB_STATE_DONE
  else
    if [ 0 -lt `echo " R " | $grep -c " ${major_status} "` ]; then
      if [ ${minor_status}"x" = "x" ]; then
         gram_job_state=$GLOBUS_GRAM_CLIENT_JOB_STATE_PENDING
      else
         gram_job_state=$GLOBUS_GRAM_CLIENT_JOB_STATE_ACTIVE
      fi
    else
      if [ 0 -lt `echo " A D H Q P S U W " | $grep -c " ${major_status} "` ]; then
        gram_job_state=$GLOBUS_GRAM_CLIENT_JOB_STATE_PENDING
      else
        if [ 0 -lt `echo " C " | $grep -c " ${major_status} "` ]; then
          gram_job_state=$GLOBUS_GRAM_CLIENT_JOB_STATE_FAILED
        fi
      fi
    fi
  fi
fi

$DEBUG_ECHO "JM_SCRIPT: returning success, job state: "\
            "${gram_job_state}" >> $grami_logfile

echo "GRAM_SCRIPT_SUCCESS:${gram_job_state}"

$DEBUG_ECHO "JM_SCRIPT: exiting nqe_poll" >> $grami_logfile





