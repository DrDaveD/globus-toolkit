#! /bin/sh -f
#
# Extract the Status column from the spq output
# for our specific jobID.
#
# The Status field can contain one of the following strings:
#
# LLQ:
# string  stands for				Globus context meaning
# --------------------------------------------------------------------
# C       Completed                     DONE
# D       Deferred                      PENDING
# H       User Hold                     PENDING
# I       Idle                          PENDING
# NR      Not Run                       FAILED
# NQ      Not Queued                    PENDING
# P       Pending                       PENDING
# R       Running                       ACTIVE
# RM      Removed                       FAILED?  (program was cancelled)
# RP      Remove Pending                FAILED?  (program was cancelled)
# S       System Hold                   PENDING
# SH      User Hold and System Hold     PENDING
# ST      Starting                      PENDING
# V       Vacated                       PENDING? (started but did not complete)
# XP      Reject Pending                FAILED
#
# SPQ:
# string  stands for				Globus context meaning
# --------------------------------------------------------------------
# R       Running				ACTIVE
# C       Clearing				DONE
# W       Waiting				PENDING
# S       Job has been Held by the system	PENDING
# U       Job has been Held by the user		PENDING
# ST      Starting				PENDING
# H       Hog (Job held, too many requests)	PENDING

. ${GLOBUS_LOCATION}/libexec/globus-script-initializer

globus_source ${libexecdir}/globus-gram-protocol-constants.sh
globus_source ${libexecdir}/globus-sh-tools.sh
globus_source ${libexecdir}/globus-gram-job-manager-tools.sh

llq=${GLOBUS_GRAM_JOB_MANAGER_LLQ-llq}
spq=${GLOBUS_GRAM_JOB_MANAGER_SPQ-spq}
awk=${GLOBUS_SH_AWK-awk}
grep=${GLOBUS_SH_GREP-grep}

arg_file=$1
# check for the argument file if it does not exist
# then return with an error immediately.
if [ ! -f $arg_file ] ; then
   echo GRAM_SCRIPT_ERROR:$GLOBUS_GRAM_CLIENT_ERROR_BAD_SCRIPT_ARG_FILE
   exit 1
fi

# use the argument file to define all the arguments.
# Of special interest here is the grami_job_id parameter.
. $arg_file

# if a logfile has been passed in then assume debug mode.
if [ $grami_logfile = "/dev/null" ] ; then
    DEBUG_ECHO=:
else
    DEBUG_ECHO=echo
fi

$DEBUG_ECHO "JM_SCRIPT: in easymcs_poll" >> $grami_logfile

$DEBUG_ECHO "JM_SCRIPT: executing spq with job id ${grami_job_id}" >> $grami_logfile

status=`${llq} ${grami_job_id} | ${grep} ${grami_job_id} | ${awk} '{print $5}'`
if [ $status"x" != "x" ]; then
  if [ 0 -lt `echo " C " | $grep -c " $status "` ]; then
    gram_job_state=8
  else
    if [ 0 -lt `echo " R " | $grep -c " $status "` ]; then
      gram_job_state=2
    else
      if [ 0 -lt `echo " D H I NQ P S SH ST V " | $grep -c " $status "` ]; then
        gram_job_state=1
      else
        if [ 0 -lt `echo " NR RM RP XP " | $grep -c " $status "` ]; then
          gram_job_state=4
        fi
      fi
    fi
  fi
else
  status=`${spq} | ${grep} ${grami_job_id} | ${awk} '{print $6}'`

  if [ $status"x" = "x" ]; then
      gram_job_state=$GLOBUS_GRAM_CLIENT_JOB_STATE_DONE
  else
    if [ 0 -lt `echo " C " | grep -c " $status "` ]; then
      gram_job_state=$GLOBUS_GRAM_CLIENT_JOB_STATE_DONE
    else
      if [ 0 -lt `echo " R " | grep -c " $status "` ]; then
        gram_job_state=$GLOBUS_GRAM_CLIENT_JOB_STATE_ACTIVE
      else
        if [ 0 -lt `echo " W S U ST H " | grep -c " $status "` ]; then
          gram_job_state=$GLOBUS_GRAM_CLIENT_JOB_STATE_PENDING
#      else
#        if [ 0 -lt `echo " NR RM RP XP " | grep -c " $status "` ]; then
#          gram_job_state=$GLOBUS_GRAM_CLIENT_JOB_STATE_FAILED
#        fi
        fi
      fi
    fi
  fi
fi

$DEBUG_ECHO "JM_SCRIPT: returning success, job state: ${gram_job_state}"\
            >> $grami_logfile
echo "GRAM_SCRIPT_SUCCESS:${gram_job_state}"

$DEBUG_ECHO "JM_SCRIPT: exiting easymcs_poll" >> $grami_logfile
