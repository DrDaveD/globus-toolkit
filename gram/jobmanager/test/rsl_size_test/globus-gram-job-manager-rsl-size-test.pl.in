#! /usr/bin/perl

BEGIN
{
    if (exists $ENV{GLOBUS_LOCATION})
    {
        push(@INC, $ENV{GLOBUS_LOCATION}. '/lib/perl');
    }
    else
    {
        push(@INC, '@libdir@/perl');
    }
}

use Globus::GRAM::Error;
use Globus::Core::Paths;
use IO::File;
use Test;
use File::Compare;
use File::Temp;

my (@tests, @todo) = ();
my $contact = $ENV{CONTACT_STRING};
my $testtmp = File::Temp::tempdir(CLEANUP => 1);
my $testdatadir = "$Globus::Core::Paths::datadir/@PACKAGE@";
my $verbose = 0;

die if $contact eq '';

my @test_cases=qw(
    tiny small medium large huge
);

my @todo_cases=qw(
);

sub test_rsl
{
    my $testname = shift;
    my $testrsl = "$testdatadir/$testname.rsl";
    my $testrc  = "$testdatadir/$testname.rc";
    my $testout = "$testtmp/$testname.out";
    my $testerr = "$testtmp/$testname.err";
    my $testrcfile = new IO::File("<$testrc");
    my $expectedrc = <$testrcfile>;

    $testrcfile->close();

    if($verbose)
    {
	print "# Submitting job $testdatadir/$testname.rsl\n";
    }

    system("$Globus::Core::Paths::bindir/globusrun -s -r \"$contact\" -f \"$testdatadir/$testname.rsl\" >$testout 2>$testerr");

    $rc = (($? >> 8) != $expectedrc) ||
          File::Compare::compare("$testdatadir/$testname.out", $testout) ||
	  File::Compare::compare("$testdatadir/$testname.err", $testerr);

    ok("$testname:$rc", "$testname:0");
}

foreach(@test_cases)
{
    push(@tests, "test_rsl(\"$_\");");
}


if(@ARGV)
{
    my @doit;

    $verbose = 1;


    foreach(@ARGV)
    {
        if(/^(\d+)-(\d+)$/)
        {
            foreach($1 .. $2)
            {
               push(@doit, $_);
            }
        }
        elsif(/^(\d+)$/)
        {
            push(@doit, $1);
        }
    }
    plan tests => scalar(@doit);

    foreach (@doit)
    {
        eval "&$tests[$_-1]";
    }
}
else
{
    plan tests => scalar(@tests), todo => \@todo;

    foreach (@tests)
    {
	eval "&$_";
    }
}
