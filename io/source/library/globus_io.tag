&globus_io.h:
GLOBUS_IO_MODULE a2 ""
globus_io_handle_t a4 ""
globus_io_read_callback_t a6 ")( void * arg, globus_io_handle_t * handle, globus_result_t result, globus_byte_t * buf, globus_size_t nbytes)"
globus_io_recv_callback_t a7 ")( void * arg, globus_io_handle_t * handle, globus_result_t result, globus_byte_t * buf, globus_size_t nbytes, int flags)"
globus_io_write_callback_t a8 ")( void * arg, globus_io_handle_t * handle, globus_result_t result, globus_byte_t * buf, globus_size_t nbytes)"
globus_io_writev_callback_t a9 ")( void * arg, globus_io_handle_t * handle, globus_result_t result, struct iovec * iov, globus_size_t iovcnt, globus_size_t nbytes)"
globus_io_secure_authorization_callback_t a10 ")( void * arg, globus_io_handle_t * handle, globus_result_t result, char * identity, gss_ctx_id_t * context_handle)"
globus_io_off_t a14 ""
globus_io_handle_type_t a70 ""
GLOBUS_IO_HANDLE_TYPE_TCP_LISTENER a15 ""GLOBUS_IO_HANDLE_TYPE_TCP_CONNECTED a16 ""GLOBUS_IO_HANDLE_TYPE_UDSS_LISTENER a17 ""GLOBUS_IO_HANDLE_TYPE_UDSS_CONNECTED a18 ""GLOBUS_IO_HANDLE_TYPE_FILE a19 ""GLOBUS_IO_HANDLE_TYPE_UDP_UNCONNECTED a20 ""GLOBUS_IO_HANDLE_TYPE_UDP_CONNECTED a21 ""GLOBUS_IO_HANDLE_TYPE_UDDS_UNCONNECTED a22 ""GLOBUS_IO_HANDLE_TYPE_UDDS_CONNECTED a23 ""GLOBUS_IO_HANDLE_TYPE_INTERNAL a24 ""globus_io_secure_authentication_mode_t a71 ""
GLOBUS_IO_SECURE_AUTHENTICATION_MODE_NONE a25 ""GLOBUS_IO_SECURE_AUTHENTICATION_MODE_GSSAPI a26 ""globus_io_secure_authorization_mode_t a72 ""
GLOBUS_IO_SECURE_AUTHORIZATION_MODE_NONE a27 ""GLOBUS_IO_SECURE_AUTHORIZATION_MODE_SELF a28 ""GLOBUS_IO_SECURE_AUTHORIZATION_MODE_IDENTITY a29 ""GLOBUS_IO_SECURE_AUTHORIZATION_MODE_HOST a30 ""GLOBUS_IO_SECURE_AUTHORIZATION_MODE_CALLBACK a31 ""globus_io_secure_channel_mode_t a73 ""
GLOBUS_IO_SECURE_CHANNEL_MODE_CLEAR a32 ""GLOBUS_IO_SECURE_CHANNEL_MODE_GSI_WRAP a33 ""GLOBUS_IO_SECURE_CHANNEL_MODE_SSL_WRAP a34 ""globus_io_secure_delegation_mode_t a74 ""
GLOBUS_IO_SECURE_DELEGATION_MODE_NONE a35 ""GLOBUS_IO_SECURE_DELEGATION_MODE_LIMITED_PROXY a36 ""GLOBUS_IO_SECURE_DELEGATION_MODE_FULL_PROXY a37 ""globus_io_file_flag_t a75 ""
GLOBUS_IO_FILE_CREAT a38 ""GLOBUS_IO_FILE_EXCL a39 ""GLOBUS_IO_FILE_RDONLY a40 ""GLOBUS_IO_FILE_WRONLY a41 ""GLOBUS_IO_FILE_RDWR a42 ""GLOBUS_IO_FILE_TRUNC a43 ""GLOBUS_IO_FILE_APPEND a44 ""globus_io_file_create_mode_t a76 ""
GLOBUS_IO_FILE_IRWXU a45 ""GLOBUS_IO_FILE_IRUSR a46 ""GLOBUS_IO_FILE_IWUSR a47 ""GLOBUS_IO_FILE_IXUSR a48 ""GLOBUS_IO_FILE_IRWXO a49 ""GLOBUS_IO_FILE_IROTH a50 ""GLOBUS_IO_FILE_IWOTH a51 ""GLOBUS_IO_FILE_IXOTH a52 ""GLOBUS_IO_FILE_IRWXG a53 ""GLOBUS_IO_FILE_IRGRP a54 ""GLOBUS_IO_FILE_IWGRP a55 ""GLOBUS_IO_FILE_IXGRP a56 ""globus_io_whence_t a77 ""
GLOBUS_IO_SEEK_SET a57 ""GLOBUS_IO_SEEK_CUR a58 ""GLOBUS_IO_SEEK_END a59 ""globus_io_file_type_t a78 ""
GLOBUS_IO_FILE_TYPE_TEXT a60 ""GLOBUS_IO_FILE_TYPE_BINARY a61 ""&globus_io_attr.c:
globus_io_attr_set_file_type a20 "( globus_io_attr_t * attr, globus_io_file_type_t file_type)"
globus_io_attr_get_file_type a21 "( globus_io_attr_t * attr, globus_io_file_type_t * file_type)"
globus_io_attr_set_tcp_restrict_port a22 "( globus_io_attr_t * attr, globus_bool_t restrict_port)"
globus_io_attr_get_tcp_restrict_port a23 "( globus_io_attr_t * attr, globus_bool_t * restrict_port)"
globus_io_attr_set_socket_reuseaddr a24 "( globus_io_attr_t * attr, globus_bool_t reuseaddr)"
globus_io_attr_get_socket_reuseaddr a25 "( globus_io_attr_t * attr, globus_bool_t * reuseaddr)"
globus_io_attr_set_socket_keepalive a26 "( globus_io_attr_t * attr, globus_bool_t keepalive)"
globus_io_attr_get_socket_keepalive a27 "( globus_io_attr_t * attr, globus_bool_t * keepalive)"
globus_io_attr_set_socket_linger a28 "( globus_io_attr_t * attr, globus_bool_t linger, int linger_time)"
globus_io_attr_get_socket_linger a29 "( globus_io_attr_t * attr, globus_bool_t * linger, int * linger_time)"
globus_io_attr_set_socket_oobinline a30 "( globus_io_attr_t * attr, globus_bool_t oobinline)"
globus_io_attr_get_socket_oobinline a31 "( globus_io_attr_t * attr, globus_bool_t * oobinline)"
globus_io_attr_set_socket_sndbuf a32 "( globus_io_attr_t * attr, int sndbuf)"
globus_io_attr_get_socket_sndbuf a33 "( globus_io_attr_t * attr, int * sndbuf)"
globus_io_attr_set_socket_rcvbuf a34 "( globus_io_attr_t * attr, int rcvbuf)"
globus_io_attr_get_socket_rcvbuf a35 "( globus_io_attr_t * attr, int * rcvbuf)"
globus_io_attr_set_tcp_nodelay a36 "( globus_io_attr_t * attr, globus_bool_t nodelay)"
globus_io_attr_get_tcp_nodelay a37 "( globus_io_attr_t * attr, globus_bool_t * nodelay)"
globus_io_attr_set_secure_authentication_mode a38 "( globus_io_attr_t * attr, globus_io_secure_authentication_mode_t mode, gss_cred_id_t credential)"
globus_io_attr_get_secure_authentication_mode a39 "( globus_io_attr_t * attr, globus_io_secure_authentication_mode_t * mode, gss_cred_id_t * credential)"
globus_io_attr_set_secure_authorization_mode a40 "( globus_io_attr_t * attr, globus_io_secure_authorization_mode_t mode, globus_io_secure_authorization_data_t * data)"
globus_io_attr_get_secure_authorization_mode a41 "( globus_io_attr_t * attr, globus_io_secure_authorization_mode_t * mode, globus_io_secure_authorization_data_t * data)"
globus_io_secure_authorization_data_initialize a42 "( globus_io_secure_authorization_data_t * data)"
globus_io_secure_authorization_data_destroy a43 "( globus_io_secure_authorization_data_t * data)"
globus_io_secure_authorization_data_set_identity a44 "( globus_io_secure_authorization_data_t * data, char * identity)"
globus_io_secure_authorization_data_get_identity a45 "( globus_io_secure_authorization_data_t * data, char ** identity)"
globus_io_secure_authorization_data_set_callback a46 "( globus_io_secure_authorization_data_t * data, globus_io_secure_authorization_callback_t callback, void * callback_arg)"
globus_io_secure_authorization_data_get_callback a47 "( globus_io_secure_authorization_data_t * data, globus_io_secure_authorization_callback_t * callback, void ** callback_arg)"
globus_io_attr_set_secure_channel_mode a48 "( globus_io_attr_t * attr, globus_io_secure_channel_mode_t mode)"
globus_io_attr_get_secure_channel_mode a49 "( globus_io_attr_t * attr, globus_io_secure_channel_mode_t * mode)"
globus_io_attr_set_secure_delegation_mode a50 "( globus_io_attr_t * attr, globus_io_secure_delegation_mode_t mode)"
globus_io_attr_get_secure_delegation_mode a51 "( globus_io_attr_t * attr, globus_io_secure_delegation_mode_t * mode)"
globus_io_attr_set_udp_restrict_port a63 "( globus_io_attr_t * attr, globus_bool_t restrict_port)"
globus_io_attr_get_udp_restrict_port a64 "( globus_io_attr_t * attr, globus_bool_t * restrict_port)"
globus_io_attr_set_udp_multicast_loop a65 "( globus_io_attr_t * attr, globus_bool_t enable_loopback)"
globus_io_attr_get_udp_multicast_loop a66 "( globus_io_attr_t * attr, globus_bool_t * enable_loopback)"
&globus_io_common.c:
globus_io_register_close a2 "( globus_io_handle_t * handle, globus_io_callback_t callback, void * callback_arg)"
globus_io_cancel a3 "( globus_io_handle_t * handle, globus_bool_t perform_callbacks)"
globus_io_close a4 "( globus_io_handle_t * handle)"
globus_io_eof a12 "( globus_object_t * err)"
&globus_io_core.c:
globus_io_register_select a27 "( globus_io_handle_t * handle, globus_io_callback_t read_callback_func, void * read_callback_arg, globus_io_callback_t write_callback_func, void * write_callback_arg, globus_io_callback_t except_callback_func, void * except_callback_arg)"
&globus_io_file.c:
globus_io_file_open a0 "( char * path, int flags, int mode, globus_io_attr_t * attr, globus_io_handle_t * handle)"
globus_io_file_seek a1 "( globus_io_handle_t * handle, globus_io_off_t offset, globus_io_whence_t whence)"
globus_io_file_posix_convert a2 "( int fd, globus_io_attr_t * attr, globus_io_handle_t * handle)"
globus_io_fileattr_init a3 "( globus_io_attr_t * attr)"
globus_io_fileattr_destroy a4 "( globus_io_attr_t * attr)"
&globus_io_read.c:
globus_io_register_read a2 "( globus_io_handle_t * handle, globus_byte_t * buf, globus_size_t max_nbytes, globus_size_t wait_for_nbytes, globus_io_read_callback_t callback, void * callback_arg)"
globus_io_try_read a3 "( globus_io_handle_t * handle, globus_byte_t * buf, globus_size_t max_nbytes, globus_size_t * nbytes_read)"
globus_io_read a4 "( globus_io_handle_t * handle, globus_byte_t * buf, globus_size_t max_nbytes, globus_size_t wait_for_nbytes, globus_size_t * nbytes_read)"
&globus_io_tcp.c:
globus_io_tcp_register_connect a0 "( char * host, unsigned short port, globus_io_attr_t * attr, globus_io_callback_t callback, void * callback_arg, globus_io_handle_t * handle)"
globus_io_tcp_connect a1 "( char * host, unsigned short port, globus_io_attr_t * attr, globus_io_handle_t * handle)"
globus_io_tcp_create_listener a2 "( unsigned short * port, int backlog, globus_io_attr_t * attr, globus_io_handle_t * handle)"
globus_io_tcp_register_accept a3 "( globus_io_handle_t * listener_handle, globus_io_attr_t * attr, globus_io_handle_t * new_handle, globus_io_callback_t callback, void * callback_arg)"
globus_io_tcp_accept a4 "( globus_io_handle_t * listener_handle, globus_io_attr_t * attr, globus_io_handle_t * handle)"
globus_io_tcp_get_attr a5 "( globus_io_handle_t * handle, globus_io_attr_t * attr)"
globus_io_tcp_set_attr a6 "( globus_io_handle_t * handle, globus_io_attr_t * attr)"
globus_io_tcp_get_security_context a7 "( globus_io_handle_t * handle, gss_ctx_id_t * context)"
globus_io_tcpattr_init a8 "( globus_io_attr_t * attr)"
globus_io_tcpattr_destroy a9 "( globus_io_attr_t * attr)"
globus_io_tcp_posix_convert a10 "( int socket, globus_io_attr_t * attributes, globus_io_handle_t * handle)"
globus_io_tcp_register_listen a11 "( globus_io_handle_t * handle, globus_io_callback_t callback, void * callback_arg)"
globus_io_tcp_listen a12 "( globus_io_handle_t * handle)"
globus_io_tcp_get_local_address a13 "( globus_io_handle_t * handle, int * host, unsigned short * port)"
globus_io_tcp_get_remote_address a14 "( globus_io_handle_t * handle, int * host, unsigned short * port)"
&globus_io_udp.c:
globus_io_udpattr_init a9 "( globus_io_attr_t * attr)"
globus_io_udpattr_destroy a10 "( globus_io_attr_t * attr)"
&globus_io_write.c:
globus_io_register_write a0 "( globus_io_handle_t * handle, globus_byte_t * buf, globus_size_t nbytes, globus_io_write_callback_t callback, void * callback_arg)"
globus_io_register_send a1 "( globus_io_handle_t * handle, globus_byte_t * buf, globus_size_t nbytes, int flags, globus_io_write_callback_t callback, void * callback_arg)"
globus_io_register_writev a2 "( globus_io_handle_t * handle, struct iovec * iov, globus_size_t iovcnt, globus_io_writev_callback_t callback, void * callback_arg)"
globus_io_try_write a3 "( globus_io_handle_t * handle, globus_byte_t * buf, globus_size_t max_nbytes, globus_size_t * nbytes_written)"
globus_io_try_send a4 "( globus_io_handle_t * handle, globus_byte_t * buf, globus_size_t max_nbytes, int flags, globus_size_t * nbytes_written)"
globus_io_write a5 "( globus_io_handle_t * handle, globus_byte_t * buf, globus_size_t nbytes, globus_size_t * nbytes_written)"
globus_io_send a6 "( globus_io_handle_t * handle, globus_byte_t * buf, globus_size_t nbytes, int flags, globus_size_t * nbytes_written)"
globus_io_writev a7 "( globus_io_handle_t * handle, struct iovec * iov, globus_size_t iovcnt, globus_size_t * nbytes_written)"
>globus_io_attr_t: "class_globus_io_attr_t.html"
>globus_io_secure_authorization_data_t: "class_globus_io_secure_authorization_data_t.html"
